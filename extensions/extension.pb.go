// Code generated by protoc-gen-go.
// source: extension.proto
// DO NOT EDIT!

/*
Package openapiextension_v1 is a generated protocol buffer package.

It is generated from these files:
	extension.proto

It has these top-level messages:
	Version
	VendorExtensionHandlerRequest
	VendorExtensionHandlerResponse
	Wrapper
*/
package openapiextension_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The version number of OpenAPI compiler.
type Version struct {
	Major int32 `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor int32 `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	Patch int32 `protobuf:"varint,3,opt,name=patch" json:"patch,omitempty"`
	// A suffix for alpha, beta or rc release, e.g., "alpha-1", "rc2". It should
	// be empty for mainline stable releases.
	Suffix string `protobuf:"bytes,4,opt,name=suffix" json:"suffix,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Version) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *Version) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *Version) GetPatch() int32 {
	if m != nil {
		return m.Patch
	}
	return 0
}

func (m *Version) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

// An encoded Request is written to the ExtensionHandler's stdin.
type VendorExtensionHandlerRequest struct {
	// The OpenAPI descriptions that were explicitly listed on the command line.
	// The specifications will appear in the order they are specified to openapic.
	Wrapper *Wrapper `protobuf:"bytes,1,opt,name=wrapper" json:"wrapper,omitempty"`
	// The version number of openapi compiler.
	CompilerVersion *Version `protobuf:"bytes,3,opt,name=compiler_version" json:"compiler_version,omitempty"`
}

func (m *VendorExtensionHandlerRequest) Reset()                    { *m = VendorExtensionHandlerRequest{} }
func (m *VendorExtensionHandlerRequest) String() string            { return proto.CompactTextString(m) }
func (*VendorExtensionHandlerRequest) ProtoMessage()               {}
func (*VendorExtensionHandlerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VendorExtensionHandlerRequest) GetWrapper() *Wrapper {
	if m != nil {
		return m.Wrapper
	}
	return nil
}

func (m *VendorExtensionHandlerRequest) GetCompilerVersion() *Version {
	if m != nil {
		return m.CompilerVersion
	}
	return nil
}

// The extensions writes an encoded VendorExtensionHandlerResponse to stdout.
type VendorExtensionHandlerResponse struct {
	// true if the extension is handled by the extension handler; false otherwise
	Handled bool `protobuf:"varint,1,opt,name=handled" json:"handled,omitempty"`
	// Error message.  If non-empty, the extension handling failed.
	// The extension handler process should exit with status code zero
	// even if it reports an error in this way.
	//
	// This should be used to indicate errors which prevent the extension from
	// operating as intended.  Errors which indicate a problem in gnostic
	// itself -- such as the input Document being unparseable -- should be
	// reported by writing a message to stderr and exiting with a non-zero
	// status code.
	Error []string `protobuf:"bytes,2,rep,name=error" json:"error,omitempty"`
	// text output
	Value *google_protobuf.Any `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *VendorExtensionHandlerResponse) Reset()                    { *m = VendorExtensionHandlerResponse{} }
func (m *VendorExtensionHandlerResponse) String() string            { return proto.CompactTextString(m) }
func (*VendorExtensionHandlerResponse) ProtoMessage()               {}
func (*VendorExtensionHandlerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VendorExtensionHandlerResponse) GetHandled() bool {
	if m != nil {
		return m.Handled
	}
	return false
}

func (m *VendorExtensionHandlerResponse) GetError() []string {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *VendorExtensionHandlerResponse) GetValue() *google_protobuf.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type Wrapper struct {
	// version of the OpenAPI specification in which this extension was written.
	Version string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	// Name of the extension
	ExtensionName string `protobuf:"bytes,2,opt,name=extension_name" json:"extension_name,omitempty"`
	// Must be a valid yaml for the proto
	Yaml string `protobuf:"bytes,3,opt,name=yaml" json:"yaml,omitempty"`
}

func (m *Wrapper) Reset()                    { *m = Wrapper{} }
func (m *Wrapper) String() string            { return proto.CompactTextString(m) }
func (*Wrapper) ProtoMessage()               {}
func (*Wrapper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Wrapper) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Wrapper) GetExtensionName() string {
	if m != nil {
		return m.ExtensionName
	}
	return ""
}

func (m *Wrapper) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

func init() {
	proto.RegisterType((*Version)(nil), "openapiextension.v1.Version")
	proto.RegisterType((*VendorExtensionHandlerRequest)(nil), "openapiextension.v1.VendorExtensionHandlerRequest")
	proto.RegisterType((*VendorExtensionHandlerResponse)(nil), "openapiextension.v1.VendorExtensionHandlerResponse")
	proto.RegisterType((*Wrapper)(nil), "openapiextension.v1.Wrapper")
}

func init() { proto.RegisterFile("extension.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4e, 0xfa, 0x40,
	0x14, 0xc5, 0x53, 0xbe, 0xfa, 0xef, 0xfd, 0x2b, 0x35, 0xa3, 0x31, 0xd5, 0xa8, 0x21, 0x75, 0xc3,
	0x86, 0x21, 0x68, 0xe2, 0x5a, 0x48, 0x30, 0xba, 0x82, 0xb8, 0xc0, 0x25, 0x19, 0xe0, 0x02, 0x35,
	0xed, 0xdc, 0x71, 0xfa, 0x21, 0xbc, 0x80, 0x0f, 0xe2, 0x93, 0x9a, 0x4e, 0x29, 0x6e, 0x64, 0x79,
	0x26, 0x67, 0xee, 0xf9, 0x9d, 0x03, 0x2e, 0x6e, 0x12, 0x94, 0x71, 0x40, 0x92, 0x2b, 0x4d, 0x09,
	0xb1, 0x53, 0x52, 0x28, 0x85, 0x0a, 0x7e, 0xdf, 0xb3, 0xde, 0xe5, 0xc5, 0x8a, 0x68, 0x15, 0x62,
	0xd7, 0x58, 0x66, 0xe9, 0xb2, 0x2b, 0xe4, 0xb6, 0xf0, 0xfb, 0x4f, 0x60, 0x4f, 0x50, 0xe7, 0x46,
	0x76, 0x0c, 0xf5, 0x48, 0xbc, 0x93, 0xf6, 0xac, 0x96, 0xd5, 0xae, 0x1b, 0x19, 0x48, 0xd2, 0x5e,
	0xa5, 0x94, 0x4a, 0x24, 0xf3, 0xb5, 0x57, 0x35, 0xb2, 0x09, 0x8d, 0x38, 0x5d, 0x2e, 0x83, 0x8d,
	0x57, 0x6b, 0x59, 0x6d, 0xc7, 0xff, 0xb2, 0xe0, 0x7a, 0x82, 0x72, 0x41, 0x7a, 0x58, 0x26, 0x3f,
	0x0b, 0xb9, 0x08, 0x51, 0xbf, 0xe2, 0x47, 0x8a, 0x71, 0xc2, 0x3a, 0x60, 0x7f, 0x6a, 0xa1, 0x14,
	0x16, 0x01, 0xff, 0xef, 0xae, 0xf8, 0x1f, 0xac, 0xfc, 0xad, 0xf0, 0xb0, 0x07, 0x38, 0x99, 0x53,
	0xa4, 0x82, 0x10, 0xf5, 0x34, 0x2b, 0x08, 0x4d, 0xf4, 0xa1, 0x7f, 0xbb, 0x16, 0x3e, 0xc2, 0xcd,
	0x21, 0x8e, 0x58, 0x91, 0x8c, 0x91, 0xb9, 0x60, 0xaf, 0xcd, 0xd3, 0xc2, 0x80, 0xfc, 0xcb, 0xab,
	0xa1, 0xd6, 0xa6, 0x69, 0xb5, 0xed, 0xb0, 0x5b, 0xa8, 0x67, 0x22, 0x4c, 0x71, 0x17, 0x77, 0xc6,
	0x8b, 0xf5, 0x78, 0xb9, 0x1e, 0xef, 0xcb, 0xad, 0xff, 0x08, 0x76, 0x49, 0xea, 0x82, 0x5d, 0x02,
	0xe6, 0xf7, 0x1c, 0x76, 0x0e, 0xcd, 0x3d, 0xda, 0x54, 0x8a, 0x08, 0xcd, 0x84, 0x0e, 0x3b, 0x82,
	0xda, 0x56, 0x44, 0xa1, 0xb9, 0xeb, 0x0c, 0x3a, 0xe0, 0x92, 0x5e, 0x95, 0x5d, 0xe6, 0x3c, 0xeb,
	0x0d, 0xd8, 0x48, 0xa1, 0xec, 0x8f, 0x5f, 0xf6, 0xe8, 0x93, 0xde, 0xd8, 0xfa, 0xae, 0x54, 0x47,
	0xfd, 0xe1, 0xac, 0x61, 0xe2, 0xef, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x02, 0x8f, 0x07, 0x83,
	0xf2, 0x01, 0x00, 0x00,
}
