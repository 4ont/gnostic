// Code generated by protoc-gen-go.
// source: extension_data.proto
// DO NOT EDIT!

/*
Package openapiextension_plugin_v1 is a generated protocol buffer package.

It is generated from these files:
	extension_data.proto

It has these top-level messages:
	Version
	VendorExtensionHandlerRequest
	VendorExtensionHandlerResponse
	Wrapper
*/
package openapiextension_plugin_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The version number of OpenAPI compiler.
type Version struct {
	Major int32 `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor int32 `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	Patch int32 `protobuf:"varint,3,opt,name=patch" json:"patch,omitempty"`
	// A suffix for alpha, beta or rc release, e.g., "alpha-1", "rc2". It should
	// be empty for mainline stable releases.
	Suffix string `protobuf:"bytes,4,opt,name=suffix" json:"suffix,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Version) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *Version) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *Version) GetPatch() int32 {
	if m != nil {
		return m.Patch
	}
	return 0
}

func (m *Version) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

// An encoded PluginRequest is written to the plugin's stdin.
type VendorExtensionHandlerRequest struct {
	// The OpenAPI descriptions that were explicitly listed on the command line.
	// The specifications will appear in the order they are specified to openapic.
	Wrapper *Wrapper `protobuf:"bytes,1,opt,name=wrapper" json:"wrapper,omitempty"`
	// The plugin parameter passed on the command-line.
	Parameter string `protobuf:"bytes,2,opt,name=parameter" json:"parameter,omitempty"`
	// The version number of openapi compiler.
	CompilerVersion *Version `protobuf:"bytes,3,opt,name=compiler_version" json:"compiler_version,omitempty"`
}

func (m *VendorExtensionHandlerRequest) Reset()                    { *m = VendorExtensionHandlerRequest{} }
func (m *VendorExtensionHandlerRequest) String() string            { return proto.CompactTextString(m) }
func (*VendorExtensionHandlerRequest) ProtoMessage()               {}
func (*VendorExtensionHandlerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VendorExtensionHandlerRequest) GetWrapper() *Wrapper {
	if m != nil {
		return m.Wrapper
	}
	return nil
}

func (m *VendorExtensionHandlerRequest) GetParameter() string {
	if m != nil {
		return m.Parameter
	}
	return ""
}

func (m *VendorExtensionHandlerRequest) GetCompilerVersion() *Version {
	if m != nil {
		return m.CompilerVersion
	}
	return nil
}

// The plugin writes an encoded PluginResponse to stdout.
type VendorExtensionHandlerResponse struct {
	// true if the extension is handled by the extension plugin; false otherwise
	Handled bool `protobuf:"varint,1,opt,name=handled" json:"handled,omitempty"`
	// Error message.  If non-empty, the plugin failed.
	// The plugin process should exit with status code zero
	// even if it reports an error in this way.
	//
	// This should be used to indicate errors which prevent the plugin from
	// operating as intended.  Errors which indicate a problem in openapic
	// itself -- such as the input Document being unparseable -- should be
	// reported by writing a message to stderr and exiting with a non-zero
	// status code.
	Error []string `protobuf:"bytes,2,rep,name=error" json:"error,omitempty"`
	// text output
	Value *google_protobuf.Any `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *VendorExtensionHandlerResponse) Reset()                    { *m = VendorExtensionHandlerResponse{} }
func (m *VendorExtensionHandlerResponse) String() string            { return proto.CompactTextString(m) }
func (*VendorExtensionHandlerResponse) ProtoMessage()               {}
func (*VendorExtensionHandlerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VendorExtensionHandlerResponse) GetHandled() bool {
	if m != nil {
		return m.Handled
	}
	return false
}

func (m *VendorExtensionHandlerResponse) GetError() []string {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *VendorExtensionHandlerResponse) GetValue() *google_protobuf.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type Wrapper struct {
	// The filename or URL of the wrapped description
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The version of the OpenAPI specification that is used by the wrapped description.
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Name of the extension
	ExtensionName string `protobuf:"bytes,3,opt,name=extension_name" json:"extension_name,omitempty"`
	// Must be a valid yaml for the proto
	Yaml string `protobuf:"bytes,4,opt,name=yaml" json:"yaml,omitempty"`
}

func (m *Wrapper) Reset()                    { *m = Wrapper{} }
func (m *Wrapper) String() string            { return proto.CompactTextString(m) }
func (*Wrapper) ProtoMessage()               {}
func (*Wrapper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Wrapper) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Wrapper) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Wrapper) GetExtensionName() string {
	if m != nil {
		return m.ExtensionName
	}
	return ""
}

func (m *Wrapper) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

func init() {
	proto.RegisterType((*Version)(nil), "openapiextension.plugin.v1.Version")
	proto.RegisterType((*VendorExtensionHandlerRequest)(nil), "openapiextension.plugin.v1.VendorExtensionHandlerRequest")
	proto.RegisterType((*VendorExtensionHandlerResponse)(nil), "openapiextension.plugin.v1.VendorExtensionHandlerResponse")
	proto.RegisterType((*Wrapper)(nil), "openapiextension.plugin.v1.Wrapper")
}

func init() { proto.RegisterFile("extension_data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0x33, 0x18, 0xcc, 0x3d, 0x11, 0x74, 0x21, 0x66, 0x92, 0x68, 0xc8, 0xb8, 0x70, 0x2a,
	0x41, 0xb9, 0x7a, 0x80, 0x04, 0xa3, 0x17, 0x59, 0x3c, 0xe0, 0x91, 0x14, 0xf6, 0x18, 0x33, 0x5b,
	0x5b, 0xbb, 0x1f, 0xc2, 0xbf, 0xe3, 0xc5, 0x7f, 0xd3, 0xd0, 0x32, 0x3c, 0x11, 0x8f, 0xaf, 0xfb,
	0xee, 0xf5, 0xf3, 0xf9, 0x16, 0xda, 0xb8, 0xcd, 0x90, 0xa5, 0x11, 0x67, 0x8b, 0x80, 0x66, 0x94,
	0x08, 0xc9, 0x33, 0xee, 0x74, 0xb8, 0x40, 0x46, 0x45, 0x74, 0xfc, 0x48, 0x44, 0x9c, 0x87, 0x11,
	0x23, 0xc5, 0xb0, 0x73, 0x13, 0x72, 0x1e, 0xc6, 0x38, 0x50, 0xc9, 0x65, 0xbe, 0x1e, 0x50, 0xb6,
	0xd3, 0xbf, 0x79, 0x4f, 0x60, 0xcd, 0x51, 0xee, 0xf3, 0xce, 0x05, 0xd4, 0x12, 0xfa, 0xc1, 0xa5,
	0x6b, 0x74, 0x8d, 0x7e, 0x4d, 0x8d, 0x11, 0xe3, 0xd2, 0xad, 0x94, 0xa3, 0xa0, 0xd9, 0x6a, 0xe3,
	0x56, 0xd5, 0xd8, 0x84, 0x7a, 0x9a, 0xaf, 0xd7, 0xd1, 0xd6, 0x35, 0xbb, 0x46, 0xdf, 0xf6, 0x7e,
	0x0c, 0xb8, 0x9d, 0x23, 0x0b, 0xb8, 0x9c, 0x96, 0x00, 0xcf, 0x94, 0x05, 0x31, 0xca, 0x37, 0xfc,
	0xcc, 0x31, 0xcd, 0x9c, 0x11, 0x58, 0x5f, 0x92, 0x0a, 0x81, 0xfa, 0x82, 0xf3, 0xfb, 0x1e, 0x39,
	0x8d, 0x4c, 0xde, 0x75, 0xd4, 0xb9, 0x02, 0x5b, 0x50, 0x49, 0x13, 0xcc, 0x50, 0x93, 0xd8, 0xce,
	0x23, 0x5c, 0xae, 0x78, 0x22, 0xa2, 0x18, 0xe5, 0xa2, 0xd0, 0xec, 0x0a, 0xea, 0x9f, 0x8d, 0x07,
	0x4d, 0x0f, 0xe1, 0xee, 0x14, 0x68, 0x2a, 0x38, 0x4b, 0xd1, 0x69, 0x81, 0xb5, 0x51, 0x47, 0x81,
	0x22, 0x3d, 0xdb, 0xbb, 0xa3, 0x94, 0xaa, 0x8a, 0x6a, 0xdf, 0x76, 0x7a, 0x50, 0x2b, 0x68, 0x9c,
	0xe3, 0xe1, 0xd6, 0x36, 0xd1, 0xf5, 0x92, 0xb2, 0x5e, 0x32, 0x66, 0x3b, 0xef, 0x15, 0xac, 0xd2,
	0xa1, 0x01, 0x26, 0xa3, 0x09, 0xaa, 0x65, 0xf6, 0x7e, 0x7b, 0x49, 0xad, 0x7d, 0xae, 0xa1, 0xf9,
	0xf7, 0xa2, 0x2a, 0x58, 0x55, 0xe7, 0x0d, 0x30, 0x77, 0x34, 0x89, 0x75, 0xc1, 0x93, 0x11, 0xb4,
	0xb8, 0x0c, 0x4b, 0xc1, 0x15, 0x29, 0x86, 0x13, 0x77, 0x26, 0x90, 0x8d, 0xfd, 0x97, 0xa3, 0x88,
	0xaf, 0x64, 0xe7, 0x43, 0xdf, 0xf8, 0xae, 0x98, 0xb3, 0xf1, 0xd4, 0x5f, 0xd6, 0x15, 0xd3, 0xc3,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x7e, 0x96, 0x0a, 0x34, 0x02, 0x00, 0x00,
}
