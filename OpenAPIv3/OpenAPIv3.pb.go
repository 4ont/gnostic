// Code generated by protoc-gen-go.
// source: OpenAPIv3/OpenAPIv3.proto
// DO NOT EDIT!

/*
Package openapi_v3 is a generated protocol buffer package.

It is generated from these files:
	OpenAPIv3/OpenAPIv3.proto

It has these top-level messages:
	Any
	AnyOrExpression
	Callback
	CallbackOrReference
	Callbacks
	Components
	Contact
	Content
	Document
	Encoding
	EncodingProperty
	Example
	ExampleOrReference
	Examples
	Expression
	ExternalDocs
	Header
	HeaderOrReference
	Headers
	Info
	ItemsItem
	License
	Link
	LinkOrReference
	LinkParameters
	Links
	MediaType
	NamedAny
	NamedAnyOrExpression
	NamedCallbackOrReference
	NamedEncodingProperty
	NamedHeaderOrReference
	NamedLinkOrReference
	NamedMediaType
	NamedParameter
	NamedPathItem
	NamedRequestBody
	NamedResponseOrReference
	NamedSchema
	NamedSecurityScheme
	NamedServerVariable
	NamedSpecificationExtension
	OauthFlow
	OauthFlows
	Object
	Operation
	Parameter
	ParameterOrReference
	Parameters
	PathItem
	Paths
	Primitive
	Properties
	Reference
	RequestBodies
	RequestBody
	RequestBodyOrReference
	Response
	ResponseOrReference
	Responses
	Schema
	SchemaOrReference
	Schemas
	Scopes
	SecurityRequirement
	SecurityScheme
	SecuritySchemes
	Server
	ServerVariable
	ServerVariables
	SpecificationExtension
	StringArray
	Tag
	Xml
*/
package openapi_v3

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Any struct {
	Value *google_protobuf.Any `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Yaml  string               `protobuf:"bytes,2,opt,name=yaml" json:"yaml,omitempty"`
}

func (m *Any) Reset()                    { *m = Any{} }
func (m *Any) String() string            { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()               {}
func (*Any) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Any) GetValue() *google_protobuf.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Any) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

type AnyOrExpression struct {
	// Types that are valid to be assigned to Oneof:
	//	*AnyOrExpression_Any
	//	*AnyOrExpression_Expression
	Oneof isAnyOrExpression_Oneof `protobuf_oneof:"oneof"`
}

func (m *AnyOrExpression) Reset()                    { *m = AnyOrExpression{} }
func (m *AnyOrExpression) String() string            { return proto.CompactTextString(m) }
func (*AnyOrExpression) ProtoMessage()               {}
func (*AnyOrExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isAnyOrExpression_Oneof interface {
	isAnyOrExpression_Oneof()
}

type AnyOrExpression_Any struct {
	Any *Any `protobuf:"bytes,1,opt,name=any,oneof"`
}
type AnyOrExpression_Expression struct {
	Expression *Expression `protobuf:"bytes,2,opt,name=expression,oneof"`
}

func (*AnyOrExpression_Any) isAnyOrExpression_Oneof()        {}
func (*AnyOrExpression_Expression) isAnyOrExpression_Oneof() {}

func (m *AnyOrExpression) GetOneof() isAnyOrExpression_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *AnyOrExpression) GetAny() *Any {
	if x, ok := m.GetOneof().(*AnyOrExpression_Any); ok {
		return x.Any
	}
	return nil
}

func (m *AnyOrExpression) GetExpression() *Expression {
	if x, ok := m.GetOneof().(*AnyOrExpression_Expression); ok {
		return x.Expression
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AnyOrExpression) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AnyOrExpression_OneofMarshaler, _AnyOrExpression_OneofUnmarshaler, _AnyOrExpression_OneofSizer, []interface{}{
		(*AnyOrExpression_Any)(nil),
		(*AnyOrExpression_Expression)(nil),
	}
}

func _AnyOrExpression_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AnyOrExpression)
	// oneof
	switch x := m.Oneof.(type) {
	case *AnyOrExpression_Any:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Any); err != nil {
			return err
		}
	case *AnyOrExpression_Expression:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Expression); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AnyOrExpression.Oneof has unexpected type %T", x)
	}
	return nil
}

func _AnyOrExpression_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AnyOrExpression)
	switch tag {
	case 1: // oneof.any
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Any)
		err := b.DecodeMessage(msg)
		m.Oneof = &AnyOrExpression_Any{msg}
		return true, err
	case 2: // oneof.expression
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Expression)
		err := b.DecodeMessage(msg)
		m.Oneof = &AnyOrExpression_Expression{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AnyOrExpression_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AnyOrExpression)
	// oneof
	switch x := m.Oneof.(type) {
	case *AnyOrExpression_Any:
		s := proto.Size(x.Any)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AnyOrExpression_Expression:
		s := proto.Size(x.Expression)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A map of possible out-of band callbacks related to the parent operation. Each value in the map is a Path Item Object that describes a set of requests that may be initiated by the API provider and the expected responses. The key value used to identify the callback object is an expression, evaluated at runtime, that identifies a URL to use for the callback operation.
type Callback struct {
	Expression             []*NamedPathItem               `protobuf:"bytes,1,rep,name=expression" json:"expression,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,2,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Callback) Reset()                    { *m = Callback{} }
func (m *Callback) String() string            { return proto.CompactTextString(m) }
func (*Callback) ProtoMessage()               {}
func (*Callback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Callback) GetExpression() []*NamedPathItem {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (m *Callback) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type CallbackOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*CallbackOrReference_Callback
	//	*CallbackOrReference_Reference
	Oneof isCallbackOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *CallbackOrReference) Reset()                    { *m = CallbackOrReference{} }
func (m *CallbackOrReference) String() string            { return proto.CompactTextString(m) }
func (*CallbackOrReference) ProtoMessage()               {}
func (*CallbackOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isCallbackOrReference_Oneof interface {
	isCallbackOrReference_Oneof()
}

type CallbackOrReference_Callback struct {
	Callback *Callback `protobuf:"bytes,1,opt,name=callback,oneof"`
}
type CallbackOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*CallbackOrReference_Callback) isCallbackOrReference_Oneof()  {}
func (*CallbackOrReference_Reference) isCallbackOrReference_Oneof() {}

func (m *CallbackOrReference) GetOneof() isCallbackOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *CallbackOrReference) GetCallback() *Callback {
	if x, ok := m.GetOneof().(*CallbackOrReference_Callback); ok {
		return x.Callback
	}
	return nil
}

func (m *CallbackOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*CallbackOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CallbackOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CallbackOrReference_OneofMarshaler, _CallbackOrReference_OneofUnmarshaler, _CallbackOrReference_OneofSizer, []interface{}{
		(*CallbackOrReference_Callback)(nil),
		(*CallbackOrReference_Reference)(nil),
	}
}

func _CallbackOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CallbackOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *CallbackOrReference_Callback:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Callback); err != nil {
			return err
		}
	case *CallbackOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CallbackOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _CallbackOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CallbackOrReference)
	switch tag {
	case 1: // oneof.callback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Callback)
		err := b.DecodeMessage(msg)
		m.Oneof = &CallbackOrReference_Callback{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &CallbackOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CallbackOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CallbackOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *CallbackOrReference_Callback:
		s := proto.Size(x.Callback)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CallbackOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A map of possible out-of band callbacks related to the parent operation. Each value in the map is a Callback Object that describes a request that may be initiated by the API provider and the expected responses. The key value used to identify the callback object is an expression, evaluated at runtime, that identifies a URL to use for the callback operation.
type Callbacks struct {
	Name                   []*NamedCallbackOrReference    `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,2,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Callbacks) Reset()                    { *m = Callbacks{} }
func (m *Callbacks) String() string            { return proto.CompactTextString(m) }
func (*Callbacks) ProtoMessage()               {}
func (*Callbacks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Callbacks) GetName() []*NamedCallbackOrReference {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Callbacks) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Holds a set of reusable objects for different aspects of the OAS. All objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.
type Components struct {
	Schemas                *Schemas                       `protobuf:"bytes,1,opt,name=schemas" json:"schemas,omitempty"`
	Responses              *Responses                     `protobuf:"bytes,2,opt,name=responses" json:"responses,omitempty"`
	Parameters             *Parameters                    `protobuf:"bytes,3,opt,name=parameters" json:"parameters,omitempty"`
	Examples               *Examples                      `protobuf:"bytes,4,opt,name=examples" json:"examples,omitempty"`
	RequestBodies          *RequestBodies                 `protobuf:"bytes,5,opt,name=request_bodies,json=requestBodies" json:"request_bodies,omitempty"`
	Headers                *Headers                       `protobuf:"bytes,6,opt,name=headers" json:"headers,omitempty"`
	SecuritySchemes        *SecuritySchemes               `protobuf:"bytes,7,opt,name=security_schemes,json=securitySchemes" json:"security_schemes,omitempty"`
	Links                  *Links                         `protobuf:"bytes,8,opt,name=links" json:"links,omitempty"`
	Callbacks              *Callbacks                     `protobuf:"bytes,9,opt,name=callbacks" json:"callbacks,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,10,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Components) Reset()                    { *m = Components{} }
func (m *Components) String() string            { return proto.CompactTextString(m) }
func (*Components) ProtoMessage()               {}
func (*Components) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Components) GetSchemas() *Schemas {
	if m != nil {
		return m.Schemas
	}
	return nil
}

func (m *Components) GetResponses() *Responses {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Components) GetParameters() *Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Components) GetExamples() *Examples {
	if m != nil {
		return m.Examples
	}
	return nil
}

func (m *Components) GetRequestBodies() *RequestBodies {
	if m != nil {
		return m.RequestBodies
	}
	return nil
}

func (m *Components) GetHeaders() *Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Components) GetSecuritySchemes() *SecuritySchemes {
	if m != nil {
		return m.SecuritySchemes
	}
	return nil
}

func (m *Components) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Components) GetCallbacks() *Callbacks {
	if m != nil {
		return m.Callbacks
	}
	return nil
}

func (m *Components) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Contact information for the exposed API.
type Contact struct {
	Name                   string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url                    string                         `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Email                  string                         `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,4,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Contact) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Describes a set of supported media types. A Content Object can be used in Request Body Object, Parameter Objects, Header Objects, and Response Objects.  Each key in the Content Object is the media type of the Media Type Object.
type Content struct {
	AdditionalProperties []*NamedMediaType `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Content) GetAdditionalProperties() []*NamedMediaType {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Document struct {
	Openapi                string                         `protobuf:"bytes,1,opt,name=openapi" json:"openapi,omitempty"`
	Info                   *Info                          `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Servers                []*Server                      `protobuf:"bytes,3,rep,name=servers" json:"servers,omitempty"`
	Paths                  *Paths                         `protobuf:"bytes,4,opt,name=paths" json:"paths,omitempty"`
	Components             *Components                    `protobuf:"bytes,5,opt,name=components" json:"components,omitempty"`
	Security               []*SecurityRequirement         `protobuf:"bytes,6,rep,name=security" json:"security,omitempty"`
	Tags                   []*Tag                         `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	ExternalDocs           *ExternalDocs                  `protobuf:"bytes,8,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,9,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Document) GetOpenapi() string {
	if m != nil {
		return m.Openapi
	}
	return ""
}

func (m *Document) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Document) GetServers() []*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Document) GetPaths() *Paths {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *Document) GetComponents() *Components {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *Document) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Document) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Document) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Document) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// An object representing multipart region encoding for `requestBody` objects.
type Encoding struct {
	Property []*NamedEncodingProperty `protobuf:"bytes,1,rep,name=property" json:"property,omitempty"`
}

func (m *Encoding) Reset()                    { *m = Encoding{} }
func (m *Encoding) String() string            { return proto.CompactTextString(m) }
func (*Encoding) ProtoMessage()               {}
func (*Encoding) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Encoding) GetProperty() []*NamedEncodingProperty {
	if m != nil {
		return m.Property
	}
	return nil
}

// A single encoding definition applied to a single schema property.
type EncodingProperty struct {
	ContentType            string                         `protobuf:"bytes,1,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	Headers                *Object                        `protobuf:"bytes,2,opt,name=headers" json:"headers,omitempty"`
	Style                  string                         `protobuf:"bytes,3,opt,name=style" json:"style,omitempty"`
	Explode                bool                           `protobuf:"varint,4,opt,name=explode" json:"explode,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,5,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *EncodingProperty) Reset()                    { *m = EncodingProperty{} }
func (m *EncodingProperty) String() string            { return proto.CompactTextString(m) }
func (*EncodingProperty) ProtoMessage()               {}
func (*EncodingProperty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *EncodingProperty) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *EncodingProperty) GetHeaders() *Object {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *EncodingProperty) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *EncodingProperty) GetExplode() bool {
	if m != nil {
		return m.Explode
	}
	return false
}

func (m *EncodingProperty) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Allows sharing examples for operation requests and responses. This object can either be a freeform object, array or primitive value.  To represent examples of media types that cannot naturally represented in the OpenAPI definition, a string value can be used to contain the example with escaping where necessary.
type Example struct {
}

func (m *Example) Reset()                    { *m = Example{} }
func (m *Example) String() string            { return proto.CompactTextString(m) }
func (*Example) ProtoMessage()               {}
func (*Example) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type ExampleOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*ExampleOrReference_Example
	//	*ExampleOrReference_Reference
	Oneof isExampleOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *ExampleOrReference) Reset()                    { *m = ExampleOrReference{} }
func (m *ExampleOrReference) String() string            { return proto.CompactTextString(m) }
func (*ExampleOrReference) ProtoMessage()               {}
func (*ExampleOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type isExampleOrReference_Oneof interface {
	isExampleOrReference_Oneof()
}

type ExampleOrReference_Example struct {
	Example *Example `protobuf:"bytes,1,opt,name=example,oneof"`
}
type ExampleOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*ExampleOrReference_Example) isExampleOrReference_Oneof()   {}
func (*ExampleOrReference_Reference) isExampleOrReference_Oneof() {}

func (m *ExampleOrReference) GetOneof() isExampleOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ExampleOrReference) GetExample() *Example {
	if x, ok := m.GetOneof().(*ExampleOrReference_Example); ok {
		return x.Example
	}
	return nil
}

func (m *ExampleOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*ExampleOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExampleOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExampleOrReference_OneofMarshaler, _ExampleOrReference_OneofUnmarshaler, _ExampleOrReference_OneofSizer, []interface{}{
		(*ExampleOrReference_Example)(nil),
		(*ExampleOrReference_Reference)(nil),
	}
}

func _ExampleOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExampleOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *ExampleOrReference_Example:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Example); err != nil {
			return err
		}
	case *ExampleOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExampleOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _ExampleOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExampleOrReference)
	switch tag {
	case 1: // oneof.example
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Example)
		err := b.DecodeMessage(msg)
		m.Oneof = &ExampleOrReference_Example{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &ExampleOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExampleOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExampleOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *ExampleOrReference_Example:
		s := proto.Size(x.Example)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExampleOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Examples struct {
}

func (m *Examples) Reset()                    { *m = Examples{} }
func (m *Examples) String() string            { return proto.CompactTextString(m) }
func (*Examples) ProtoMessage()               {}
func (*Examples) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type Expression struct {
	AdditionalProperties []*NamedAny `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Expression) Reset()                    { *m = Expression{} }
func (m *Expression) String() string            { return proto.CompactTextString(m) }
func (*Expression) ProtoMessage()               {}
func (*Expression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Expression) GetAdditionalProperties() []*NamedAny {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// Allows referencing an external resource for extended documentation.
type ExternalDocs struct {
	Description            string                         `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Url                    string                         `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,3,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *ExternalDocs) Reset()                    { *m = ExternalDocs{} }
func (m *ExternalDocs) String() string            { return proto.CompactTextString(m) }
func (*ExternalDocs) ProtoMessage()               {}
func (*ExternalDocs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ExternalDocs) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ExternalDocs) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ExternalDocs) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// The Header Object follows the structure of the Parameter Object, with the following changes:  1. `name` MUST NOT be specified, it is given in the Headers Object. 1. `in` MUST NOT be specified, it is implicitly in `header`. 1. All traits that are affected by the location MUST follow the location of `header` (for example, `style`).
type Header struct {
	Name            string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	In              string                `protobuf:"bytes,2,opt,name=in" json:"in,omitempty"`
	Description     string                `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Required        bool                  `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`
	Deprecated      bool                  `protobuf:"varint,5,opt,name=deprecated" json:"deprecated,omitempty"`
	AllowEmptyValue bool                  `protobuf:"varint,6,opt,name=allow_empty_value,json=allowEmptyValue" json:"allow_empty_value,omitempty"`
	Style           string                `protobuf:"bytes,7,opt,name=style" json:"style,omitempty"`
	Explode         bool                  `protobuf:"varint,8,opt,name=explode" json:"explode,omitempty"`
	AllowReserved   bool                  `protobuf:"varint,9,opt,name=allow_reserved,json=allowReserved" json:"allow_reserved,omitempty"`
	Schema          *SchemaOrReference    `protobuf:"bytes,10,opt,name=schema" json:"schema,omitempty"`
	Examples        []*ExampleOrReference `protobuf:"bytes,11,rep,name=examples" json:"examples,omitempty"`
	Example         *ExampleOrReference   `protobuf:"bytes,12,opt,name=example" json:"example,omitempty"`
	Content         *Content              `protobuf:"bytes,13,opt,name=content" json:"content,omitempty"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Header) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Header) GetIn() string {
	if m != nil {
		return m.In
	}
	return ""
}

func (m *Header) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Header) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *Header) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

func (m *Header) GetAllowEmptyValue() bool {
	if m != nil {
		return m.AllowEmptyValue
	}
	return false
}

func (m *Header) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *Header) GetExplode() bool {
	if m != nil {
		return m.Explode
	}
	return false
}

func (m *Header) GetAllowReserved() bool {
	if m != nil {
		return m.AllowReserved
	}
	return false
}

func (m *Header) GetSchema() *SchemaOrReference {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *Header) GetExamples() []*ExampleOrReference {
	if m != nil {
		return m.Examples
	}
	return nil
}

func (m *Header) GetExample() *ExampleOrReference {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *Header) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

type HeaderOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*HeaderOrReference_Header
	//	*HeaderOrReference_Reference
	Oneof isHeaderOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *HeaderOrReference) Reset()                    { *m = HeaderOrReference{} }
func (m *HeaderOrReference) String() string            { return proto.CompactTextString(m) }
func (*HeaderOrReference) ProtoMessage()               {}
func (*HeaderOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type isHeaderOrReference_Oneof interface {
	isHeaderOrReference_Oneof()
}

type HeaderOrReference_Header struct {
	Header *Header `protobuf:"bytes,1,opt,name=header,oneof"`
}
type HeaderOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*HeaderOrReference_Header) isHeaderOrReference_Oneof()    {}
func (*HeaderOrReference_Reference) isHeaderOrReference_Oneof() {}

func (m *HeaderOrReference) GetOneof() isHeaderOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *HeaderOrReference) GetHeader() *Header {
	if x, ok := m.GetOneof().(*HeaderOrReference_Header); ok {
		return x.Header
	}
	return nil
}

func (m *HeaderOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*HeaderOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HeaderOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HeaderOrReference_OneofMarshaler, _HeaderOrReference_OneofUnmarshaler, _HeaderOrReference_OneofSizer, []interface{}{
		(*HeaderOrReference_Header)(nil),
		(*HeaderOrReference_Reference)(nil),
	}
}

func _HeaderOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HeaderOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *HeaderOrReference_Header:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Header); err != nil {
			return err
		}
	case *HeaderOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HeaderOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _HeaderOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HeaderOrReference)
	switch tag {
	case 1: // oneof.header
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Header)
		err := b.DecodeMessage(msg)
		m.Oneof = &HeaderOrReference_Header{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &HeaderOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HeaderOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HeaderOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *HeaderOrReference_Header:
		s := proto.Size(x.Header)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HeaderOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Lists the headers that can be sent in a response or forwarded via a link. Note that RFC 7230 states header names are case insensitive.
type Headers struct {
	Name []*NamedHeaderOrReference `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
}

func (m *Headers) Reset()                    { *m = Headers{} }
func (m *Headers) String() string            { return proto.CompactTextString(m) }
func (*Headers) ProtoMessage()               {}
func (*Headers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Headers) GetName() []*NamedHeaderOrReference {
	if m != nil {
		return m.Name
	}
	return nil
}

// The object provides metadata about the API. The metadata can be used by the clients if needed, and can be presented in editing or documentation generation tools for convenience.
type Info struct {
	Title                  string                         `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description            string                         `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	TermsOfService         string                         `protobuf:"bytes,3,opt,name=terms_of_service,json=termsOfService" json:"terms_of_service,omitempty"`
	Contact                *Contact                       `protobuf:"bytes,4,opt,name=contact" json:"contact,omitempty"`
	License                *License                       `protobuf:"bytes,5,opt,name=license" json:"license,omitempty"`
	Version                string                         `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,7,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Info) GetTermsOfService() string {
	if m != nil {
		return m.TermsOfService
	}
	return ""
}

func (m *Info) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Info) GetLicense() *License {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *Info) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Info) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type ItemsItem struct {
	Schema []*Schema `protobuf:"bytes,1,rep,name=schema" json:"schema,omitempty"`
}

func (m *ItemsItem) Reset()                    { *m = ItemsItem{} }
func (m *ItemsItem) String() string            { return proto.CompactTextString(m) }
func (*ItemsItem) ProtoMessage()               {}
func (*ItemsItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ItemsItem) GetSchema() []*Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

// License information for the exposed API.
type License struct {
	Name                   string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url                    string                         `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,3,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *License) Reset()                    { *m = License{} }
func (m *License) String() string            { return proto.CompactTextString(m) }
func (*License) ProtoMessage()               {}
func (*License) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *License) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *License) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *License) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// The `Link Object` is responsible for defining a possible operation based on a single response.
type Link struct {
	Href                   string                         `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	OperationId            string                         `protobuf:"bytes,2,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Parameters             *LinkParameters                `protobuf:"bytes,3,opt,name=parameters" json:"parameters,omitempty"`
	Headers                *Headers                       `protobuf:"bytes,4,opt,name=headers" json:"headers,omitempty"`
	Description            string                         `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,6,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Link) Reset()                    { *m = Link{} }
func (m *Link) String() string            { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()               {}
func (*Link) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Link) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *Link) GetOperationId() string {
	if m != nil {
		return m.OperationId
	}
	return ""
}

func (m *Link) GetParameters() *LinkParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Link) GetHeaders() *Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Link) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Link) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type LinkOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*LinkOrReference_Link
	//	*LinkOrReference_Reference
	Oneof isLinkOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *LinkOrReference) Reset()                    { *m = LinkOrReference{} }
func (m *LinkOrReference) String() string            { return proto.CompactTextString(m) }
func (*LinkOrReference) ProtoMessage()               {}
func (*LinkOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type isLinkOrReference_Oneof interface {
	isLinkOrReference_Oneof()
}

type LinkOrReference_Link struct {
	Link *Link `protobuf:"bytes,1,opt,name=link,oneof"`
}
type LinkOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*LinkOrReference_Link) isLinkOrReference_Oneof()      {}
func (*LinkOrReference_Reference) isLinkOrReference_Oneof() {}

func (m *LinkOrReference) GetOneof() isLinkOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *LinkOrReference) GetLink() *Link {
	if x, ok := m.GetOneof().(*LinkOrReference_Link); ok {
		return x.Link
	}
	return nil
}

func (m *LinkOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*LinkOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LinkOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LinkOrReference_OneofMarshaler, _LinkOrReference_OneofUnmarshaler, _LinkOrReference_OneofSizer, []interface{}{
		(*LinkOrReference_Link)(nil),
		(*LinkOrReference_Reference)(nil),
	}
}

func _LinkOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LinkOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *LinkOrReference_Link:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Link); err != nil {
			return err
		}
	case *LinkOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("LinkOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _LinkOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LinkOrReference)
	switch tag {
	case 1: // oneof.link
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Link)
		err := b.DecodeMessage(msg)
		m.Oneof = &LinkOrReference_Link{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &LinkOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _LinkOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LinkOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *LinkOrReference_Link:
		s := proto.Size(x.Link)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LinkOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Using the `operationId` to reference an operation in the definition has many benefits, including the ability to define media type options, security requirements, response and error payloads. Many operations require parameters to be passed, and these MAY be dynamic depending on the response itself.  To specify parameters required by the operation, we can use a **Link Parameters Object**. This object contains parameter names along with static or dynamic values:
type LinkParameters struct {
	Name []*NamedAnyOrExpression `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
}

func (m *LinkParameters) Reset()                    { *m = LinkParameters{} }
func (m *LinkParameters) String() string            { return proto.CompactTextString(m) }
func (*LinkParameters) ProtoMessage()               {}
func (*LinkParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *LinkParameters) GetName() []*NamedAnyOrExpression {
	if m != nil {
		return m.Name
	}
	return nil
}

// The links object represents a set of possible design-time links for a response. The presence of a link does not guarantee the caller's ability to successfully invoke it, rather it provides a known relationship and traversal mechanism between responses and other operations.  As opposed to _dynamic_ links (links provided **in** the response payload), the OAS linking mechanism does not require that link information be provided in a specific response format at runtime.  For computing links, and providing instructions to execute them, variable substitution is used for accessing values in a response and using them as values while invoking the linked operation.
type Links struct {
	Name []*NamedLinkOrReference `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
}

func (m *Links) Reset()                    { *m = Links{} }
func (m *Links) String() string            { return proto.CompactTextString(m) }
func (*Links) ProtoMessage()               {}
func (*Links) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Links) GetName() []*NamedLinkOrReference {
	if m != nil {
		return m.Name
	}
	return nil
}

// Each Media Type Object provides schema and examples for a the media type identified by its key.  Media Type Objects can be used in a Content Object.
type MediaType struct {
	Schema                 *SchemaOrReference             `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
	Examples               []*ExampleOrReference          `protobuf:"bytes,2,rep,name=examples" json:"examples,omitempty"`
	Example                *ExampleOrReference            `protobuf:"bytes,3,opt,name=example" json:"example,omitempty"`
	Encoding               *Encoding                      `protobuf:"bytes,4,opt,name=encoding" json:"encoding,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,5,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *MediaType) Reset()                    { *m = MediaType{} }
func (m *MediaType) String() string            { return proto.CompactTextString(m) }
func (*MediaType) ProtoMessage()               {}
func (*MediaType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *MediaType) GetSchema() *SchemaOrReference {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *MediaType) GetExamples() []*ExampleOrReference {
	if m != nil {
		return m.Examples
	}
	return nil
}

func (m *MediaType) GetExample() *ExampleOrReference {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *MediaType) GetEncoding() *Encoding {
	if m != nil {
		return m.Encoding
	}
	return nil
}

func (m *MediaType) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Automatically-generated message used to represent maps of Any as ordered (name,value) pairs.
type NamedAny struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Any `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedAny) Reset()                    { *m = NamedAny{} }
func (m *NamedAny) String() string            { return proto.CompactTextString(m) }
func (*NamedAny) ProtoMessage()               {}
func (*NamedAny) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *NamedAny) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedAny) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of AnyOrExpression as ordered (name,value) pairs.
type NamedAnyOrExpression struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *AnyOrExpression `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedAnyOrExpression) Reset()                    { *m = NamedAnyOrExpression{} }
func (m *NamedAnyOrExpression) String() string            { return proto.CompactTextString(m) }
func (*NamedAnyOrExpression) ProtoMessage()               {}
func (*NamedAnyOrExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *NamedAnyOrExpression) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedAnyOrExpression) GetValue() *AnyOrExpression {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of CallbackOrReference as ordered (name,value) pairs.
type NamedCallbackOrReference struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *CallbackOrReference `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedCallbackOrReference) Reset()                    { *m = NamedCallbackOrReference{} }
func (m *NamedCallbackOrReference) String() string            { return proto.CompactTextString(m) }
func (*NamedCallbackOrReference) ProtoMessage()               {}
func (*NamedCallbackOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *NamedCallbackOrReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedCallbackOrReference) GetValue() *CallbackOrReference {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of EncodingProperty as ordered (name,value) pairs.
type NamedEncodingProperty struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *EncodingProperty `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedEncodingProperty) Reset()                    { *m = NamedEncodingProperty{} }
func (m *NamedEncodingProperty) String() string            { return proto.CompactTextString(m) }
func (*NamedEncodingProperty) ProtoMessage()               {}
func (*NamedEncodingProperty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *NamedEncodingProperty) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedEncodingProperty) GetValue() *EncodingProperty {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of HeaderOrReference as ordered (name,value) pairs.
type NamedHeaderOrReference struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *HeaderOrReference `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedHeaderOrReference) Reset()                    { *m = NamedHeaderOrReference{} }
func (m *NamedHeaderOrReference) String() string            { return proto.CompactTextString(m) }
func (*NamedHeaderOrReference) ProtoMessage()               {}
func (*NamedHeaderOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *NamedHeaderOrReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedHeaderOrReference) GetValue() *HeaderOrReference {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of LinkOrReference as ordered (name,value) pairs.
type NamedLinkOrReference struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *LinkOrReference `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedLinkOrReference) Reset()                    { *m = NamedLinkOrReference{} }
func (m *NamedLinkOrReference) String() string            { return proto.CompactTextString(m) }
func (*NamedLinkOrReference) ProtoMessage()               {}
func (*NamedLinkOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *NamedLinkOrReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedLinkOrReference) GetValue() *LinkOrReference {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of MediaType as ordered (name,value) pairs.
type NamedMediaType struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *MediaType `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedMediaType) Reset()                    { *m = NamedMediaType{} }
func (m *NamedMediaType) String() string            { return proto.CompactTextString(m) }
func (*NamedMediaType) ProtoMessage()               {}
func (*NamedMediaType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *NamedMediaType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedMediaType) GetValue() *MediaType {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of Parameter as ordered (name,value) pairs.
type NamedParameter struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Parameter `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedParameter) Reset()                    { *m = NamedParameter{} }
func (m *NamedParameter) String() string            { return proto.CompactTextString(m) }
func (*NamedParameter) ProtoMessage()               {}
func (*NamedParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *NamedParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedParameter) GetValue() *Parameter {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of PathItem as ordered (name,value) pairs.
type NamedPathItem struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *PathItem `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedPathItem) Reset()                    { *m = NamedPathItem{} }
func (m *NamedPathItem) String() string            { return proto.CompactTextString(m) }
func (*NamedPathItem) ProtoMessage()               {}
func (*NamedPathItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *NamedPathItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedPathItem) GetValue() *PathItem {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of RequestBody as ordered (name,value) pairs.
type NamedRequestBody struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *RequestBody `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedRequestBody) Reset()                    { *m = NamedRequestBody{} }
func (m *NamedRequestBody) String() string            { return proto.CompactTextString(m) }
func (*NamedRequestBody) ProtoMessage()               {}
func (*NamedRequestBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *NamedRequestBody) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedRequestBody) GetValue() *RequestBody {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of ResponseOrReference as ordered (name,value) pairs.
type NamedResponseOrReference struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *ResponseOrReference `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedResponseOrReference) Reset()                    { *m = NamedResponseOrReference{} }
func (m *NamedResponseOrReference) String() string            { return proto.CompactTextString(m) }
func (*NamedResponseOrReference) ProtoMessage()               {}
func (*NamedResponseOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *NamedResponseOrReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedResponseOrReference) GetValue() *ResponseOrReference {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of Schema as ordered (name,value) pairs.
type NamedSchema struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Schema `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedSchema) Reset()                    { *m = NamedSchema{} }
func (m *NamedSchema) String() string            { return proto.CompactTextString(m) }
func (*NamedSchema) ProtoMessage()               {}
func (*NamedSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *NamedSchema) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedSchema) GetValue() *Schema {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of SecurityScheme as ordered (name,value) pairs.
type NamedSecurityScheme struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *SecurityScheme `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedSecurityScheme) Reset()                    { *m = NamedSecurityScheme{} }
func (m *NamedSecurityScheme) String() string            { return proto.CompactTextString(m) }
func (*NamedSecurityScheme) ProtoMessage()               {}
func (*NamedSecurityScheme) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *NamedSecurityScheme) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedSecurityScheme) GetValue() *SecurityScheme {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of ServerVariable as ordered (name,value) pairs.
type NamedServerVariable struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *ServerVariable `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedServerVariable) Reset()                    { *m = NamedServerVariable{} }
func (m *NamedServerVariable) String() string            { return proto.CompactTextString(m) }
func (*NamedServerVariable) ProtoMessage()               {}
func (*NamedServerVariable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *NamedServerVariable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedServerVariable) GetValue() *ServerVariable {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of SpecificationExtension as ordered (name,value) pairs.
type NamedSpecificationExtension struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *SpecificationExtension `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedSpecificationExtension) Reset()                    { *m = NamedSpecificationExtension{} }
func (m *NamedSpecificationExtension) String() string            { return proto.CompactTextString(m) }
func (*NamedSpecificationExtension) ProtoMessage()               {}
func (*NamedSpecificationExtension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *NamedSpecificationExtension) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedSpecificationExtension) GetValue() *SpecificationExtension {
	if m != nil {
		return m.Value
	}
	return nil
}

// Configuration details for a supported OAuth Flow
type OauthFlow struct {
	AuthorizationUrl       string                         `protobuf:"bytes,1,opt,name=authorization_url,json=authorizationUrl" json:"authorization_url,omitempty"`
	TokenUrl               string                         `protobuf:"bytes,2,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	RefreshUrl             string                         `protobuf:"bytes,3,opt,name=refresh_url,json=refreshUrl" json:"refresh_url,omitempty"`
	Scopes                 *Scopes                        `protobuf:"bytes,4,opt,name=scopes" json:"scopes,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,5,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *OauthFlow) Reset()                    { *m = OauthFlow{} }
func (m *OauthFlow) String() string            { return proto.CompactTextString(m) }
func (*OauthFlow) ProtoMessage()               {}
func (*OauthFlow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *OauthFlow) GetAuthorizationUrl() string {
	if m != nil {
		return m.AuthorizationUrl
	}
	return ""
}

func (m *OauthFlow) GetTokenUrl() string {
	if m != nil {
		return m.TokenUrl
	}
	return ""
}

func (m *OauthFlow) GetRefreshUrl() string {
	if m != nil {
		return m.RefreshUrl
	}
	return ""
}

func (m *OauthFlow) GetScopes() *Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *OauthFlow) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Allows configuration of the supported OAuth Flows.
type OauthFlows struct {
	Implicit               *OauthFlow                     `protobuf:"bytes,1,opt,name=implicit" json:"implicit,omitempty"`
	Password               *OauthFlow                     `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	ClientCredentials      *OauthFlow                     `protobuf:"bytes,3,opt,name=client_credentials,json=clientCredentials" json:"client_credentials,omitempty"`
	AuthorizationCode      *OauthFlow                     `protobuf:"bytes,4,opt,name=authorization_code,json=authorizationCode" json:"authorization_code,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,5,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *OauthFlows) Reset()                    { *m = OauthFlows{} }
func (m *OauthFlows) String() string            { return proto.CompactTextString(m) }
func (*OauthFlows) ProtoMessage()               {}
func (*OauthFlows) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *OauthFlows) GetImplicit() *OauthFlow {
	if m != nil {
		return m.Implicit
	}
	return nil
}

func (m *OauthFlows) GetPassword() *OauthFlow {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *OauthFlows) GetClientCredentials() *OauthFlow {
	if m != nil {
		return m.ClientCredentials
	}
	return nil
}

func (m *OauthFlows) GetAuthorizationCode() *OauthFlow {
	if m != nil {
		return m.AuthorizationCode
	}
	return nil
}

func (m *OauthFlows) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type Object struct {
	AdditionalProperties []*NamedAny `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *Object) GetAdditionalProperties() []*NamedAny {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// Describes a single API operation on a path.
type Operation struct {
	Tags                   []string                       `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	Summary                string                         `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Description            string                         `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDocs           *ExternalDocs                  `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	OperationId            string                         `protobuf:"bytes,5,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Parameters             []*ParameterOrReference        `protobuf:"bytes,6,rep,name=parameters" json:"parameters,omitempty"`
	RequestBody            []*RequestBodyOrReference      `protobuf:"bytes,7,rep,name=request_body,json=requestBody" json:"request_body,omitempty"`
	Responses              *Responses                     `protobuf:"bytes,8,opt,name=responses" json:"responses,omitempty"`
	Callbacks              *Callbacks                     `protobuf:"bytes,9,opt,name=callbacks" json:"callbacks,omitempty"`
	Deprecated             bool                           `protobuf:"varint,10,opt,name=deprecated" json:"deprecated,omitempty"`
	Security               []*SecurityRequirement         `protobuf:"bytes,11,rep,name=security" json:"security,omitempty"`
	Servers                *Server                        `protobuf:"bytes,12,opt,name=servers" json:"servers,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,13,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *Operation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Operation) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Operation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Operation) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Operation) GetOperationId() string {
	if m != nil {
		return m.OperationId
	}
	return ""
}

func (m *Operation) GetParameters() []*ParameterOrReference {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Operation) GetRequestBody() []*RequestBodyOrReference {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

func (m *Operation) GetResponses() *Responses {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Operation) GetCallbacks() *Callbacks {
	if m != nil {
		return m.Callbacks
	}
	return nil
}

func (m *Operation) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

func (m *Operation) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Operation) GetServers() *Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Operation) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Describes a single operation parameter.  A unique parameter is defined by a combination of a name and location.
type Parameter struct {
	Name                   string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	In                     string                         `protobuf:"bytes,2,opt,name=in" json:"in,omitempty"`
	Description            string                         `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Required               bool                           `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`
	Deprecated             bool                           `protobuf:"varint,5,opt,name=deprecated" json:"deprecated,omitempty"`
	AllowEmptyValue        bool                           `protobuf:"varint,6,opt,name=allow_empty_value,json=allowEmptyValue" json:"allow_empty_value,omitempty"`
	Style                  string                         `protobuf:"bytes,7,opt,name=style" json:"style,omitempty"`
	Explode                bool                           `protobuf:"varint,8,opt,name=explode" json:"explode,omitempty"`
	AllowReserved          bool                           `protobuf:"varint,9,opt,name=allow_reserved,json=allowReserved" json:"allow_reserved,omitempty"`
	Schema                 *SchemaOrReference             `protobuf:"bytes,10,opt,name=schema" json:"schema,omitempty"`
	Examples               []*ExampleOrReference          `protobuf:"bytes,11,rep,name=examples" json:"examples,omitempty"`
	Example                *ExampleOrReference            `protobuf:"bytes,12,opt,name=example" json:"example,omitempty"`
	Content                *Content                       `protobuf:"bytes,13,opt,name=content" json:"content,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,14,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetIn() string {
	if m != nil {
		return m.In
	}
	return ""
}

func (m *Parameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Parameter) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *Parameter) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

func (m *Parameter) GetAllowEmptyValue() bool {
	if m != nil {
		return m.AllowEmptyValue
	}
	return false
}

func (m *Parameter) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *Parameter) GetExplode() bool {
	if m != nil {
		return m.Explode
	}
	return false
}

func (m *Parameter) GetAllowReserved() bool {
	if m != nil {
		return m.AllowReserved
	}
	return false
}

func (m *Parameter) GetSchema() *SchemaOrReference {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *Parameter) GetExamples() []*ExampleOrReference {
	if m != nil {
		return m.Examples
	}
	return nil
}

func (m *Parameter) GetExample() *ExampleOrReference {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *Parameter) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Parameter) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type ParameterOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*ParameterOrReference_Parameter
	//	*ParameterOrReference_Reference
	Oneof isParameterOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *ParameterOrReference) Reset()                    { *m = ParameterOrReference{} }
func (m *ParameterOrReference) String() string            { return proto.CompactTextString(m) }
func (*ParameterOrReference) ProtoMessage()               {}
func (*ParameterOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

type isParameterOrReference_Oneof interface {
	isParameterOrReference_Oneof()
}

type ParameterOrReference_Parameter struct {
	Parameter *Parameter `protobuf:"bytes,1,opt,name=parameter,oneof"`
}
type ParameterOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*ParameterOrReference_Parameter) isParameterOrReference_Oneof() {}
func (*ParameterOrReference_Reference) isParameterOrReference_Oneof() {}

func (m *ParameterOrReference) GetOneof() isParameterOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ParameterOrReference) GetParameter() *Parameter {
	if x, ok := m.GetOneof().(*ParameterOrReference_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *ParameterOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*ParameterOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ParameterOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ParameterOrReference_OneofMarshaler, _ParameterOrReference_OneofUnmarshaler, _ParameterOrReference_OneofSizer, []interface{}{
		(*ParameterOrReference_Parameter)(nil),
		(*ParameterOrReference_Reference)(nil),
	}
}

func _ParameterOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ParameterOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *ParameterOrReference_Parameter:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameter); err != nil {
			return err
		}
	case *ParameterOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ParameterOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _ParameterOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ParameterOrReference)
	switch tag {
	case 1: // oneof.parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Parameter)
		err := b.DecodeMessage(msg)
		m.Oneof = &ParameterOrReference_Parameter{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &ParameterOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ParameterOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ParameterOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *ParameterOrReference_Parameter:
		s := proto.Size(x.Parameter)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParameterOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Parameters struct {
	AdditionalProperties []*NamedParameter `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *Parameters) GetAdditionalProperties() []*NamedParameter {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// Describes the operations available on a single path. A Path Item MAY be empty, due to ACL constraints. The path itself is still exposed to the documentation viewer but they will not know which operations and parameters are available.
type PathItem struct {
	XRef                   string                         `protobuf:"bytes,1,opt,name=_ref,json=ref" json:"_ref,omitempty"`
	Summary                string                         `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Description            string                         `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Get                    *Operation                     `protobuf:"bytes,4,opt,name=get" json:"get,omitempty"`
	Put                    *Operation                     `protobuf:"bytes,5,opt,name=put" json:"put,omitempty"`
	Post                   *Operation                     `protobuf:"bytes,6,opt,name=post" json:"post,omitempty"`
	Delete                 *Operation                     `protobuf:"bytes,7,opt,name=delete" json:"delete,omitempty"`
	Options                *Operation                     `protobuf:"bytes,8,opt,name=options" json:"options,omitempty"`
	Head                   *Operation                     `protobuf:"bytes,9,opt,name=head" json:"head,omitempty"`
	Patch                  *Operation                     `protobuf:"bytes,10,opt,name=patch" json:"patch,omitempty"`
	Trace                  *Operation                     `protobuf:"bytes,11,opt,name=trace" json:"trace,omitempty"`
	Servers                *Server                        `protobuf:"bytes,12,opt,name=servers" json:"servers,omitempty"`
	Parameters             []*ParameterOrReference        `protobuf:"bytes,13,rep,name=parameters" json:"parameters,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,14,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *PathItem) Reset()                    { *m = PathItem{} }
func (m *PathItem) String() string            { return proto.CompactTextString(m) }
func (*PathItem) ProtoMessage()               {}
func (*PathItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *PathItem) GetXRef() string {
	if m != nil {
		return m.XRef
	}
	return ""
}

func (m *PathItem) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *PathItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PathItem) GetGet() *Operation {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *PathItem) GetPut() *Operation {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *PathItem) GetPost() *Operation {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *PathItem) GetDelete() *Operation {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *PathItem) GetOptions() *Operation {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *PathItem) GetHead() *Operation {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *PathItem) GetPatch() *Operation {
	if m != nil {
		return m.Patch
	}
	return nil
}

func (m *PathItem) GetTrace() *Operation {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *PathItem) GetServers() *Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *PathItem) GetParameters() []*ParameterOrReference {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *PathItem) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Holds the relative paths to the individual endpoints and their operations. The path is appended to the URL from the `Server Object` in order to construct the full URL.  The Paths MAY be empty, due to ACL constraints.
type Paths struct {
	Path                   []*NamedPathItem               `protobuf:"bytes,1,rep,name=path" json:"path,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,2,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Paths) Reset()                    { *m = Paths{} }
func (m *Paths) String() string            { return proto.CompactTextString(m) }
func (*Paths) ProtoMessage()               {}
func (*Paths) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *Paths) GetPath() []*NamedPathItem {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Paths) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type Primitive struct {
	// Types that are valid to be assigned to Oneof:
	//	*Primitive_Boolean
	Oneof isPrimitive_Oneof `protobuf_oneof:"oneof"`
}

func (m *Primitive) Reset()                    { *m = Primitive{} }
func (m *Primitive) String() string            { return proto.CompactTextString(m) }
func (*Primitive) ProtoMessage()               {}
func (*Primitive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

type isPrimitive_Oneof interface {
	isPrimitive_Oneof()
}

type Primitive_Boolean struct {
	Boolean bool `protobuf:"varint,1,opt,name=boolean,oneof"`
}

func (*Primitive_Boolean) isPrimitive_Oneof() {}

func (m *Primitive) GetOneof() isPrimitive_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *Primitive) GetBoolean() bool {
	if x, ok := m.GetOneof().(*Primitive_Boolean); ok {
		return x.Boolean
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Primitive) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Primitive_OneofMarshaler, _Primitive_OneofUnmarshaler, _Primitive_OneofSizer, []interface{}{
		(*Primitive_Boolean)(nil),
	}
}

func _Primitive_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Primitive)
	// oneof
	switch x := m.Oneof.(type) {
	case *Primitive_Boolean:
		t := uint64(0)
		if x.Boolean {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Primitive.Oneof has unexpected type %T", x)
	}
	return nil
}

func _Primitive_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Primitive)
	switch tag {
	case 1: // oneof.boolean
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Oneof = &Primitive_Boolean{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _Primitive_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Primitive)
	// oneof
	switch x := m.Oneof.(type) {
	case *Primitive_Boolean:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Properties struct {
	AdditionalProperties []*NamedSchema `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Properties) Reset()                    { *m = Properties{} }
func (m *Properties) String() string            { return proto.CompactTextString(m) }
func (*Properties) ProtoMessage()               {}
func (*Properties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *Properties) GetAdditionalProperties() []*NamedSchema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// A simple object to allow referencing other components in the specification, internally and externally.  The Reference Object is defined by JSON Reference and follows the same structure, behavior and rules.   For this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.
type Reference struct {
	XRef string `protobuf:"bytes,1,opt,name=_ref,json=ref" json:"_ref,omitempty"`
}

func (m *Reference) Reset()                    { *m = Reference{} }
func (m *Reference) String() string            { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()               {}
func (*Reference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *Reference) GetXRef() string {
	if m != nil {
		return m.XRef
	}
	return ""
}

type RequestBodies struct {
	AdditionalProperties []*NamedRequestBody `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *RequestBodies) Reset()                    { *m = RequestBodies{} }
func (m *RequestBodies) String() string            { return proto.CompactTextString(m) }
func (*RequestBodies) ProtoMessage()               {}
func (*RequestBodies) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *RequestBodies) GetAdditionalProperties() []*NamedRequestBody {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// Describes a single request body.
type RequestBody struct {
	Description            string                         `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Content                *Content                       `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Required               bool                           `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,4,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *RequestBody) Reset()                    { *m = RequestBody{} }
func (m *RequestBody) String() string            { return proto.CompactTextString(m) }
func (*RequestBody) ProtoMessage()               {}
func (*RequestBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *RequestBody) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RequestBody) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *RequestBody) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *RequestBody) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type RequestBodyOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*RequestBodyOrReference_RequestBody
	//	*RequestBodyOrReference_Reference
	Oneof isRequestBodyOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *RequestBodyOrReference) Reset()                    { *m = RequestBodyOrReference{} }
func (m *RequestBodyOrReference) String() string            { return proto.CompactTextString(m) }
func (*RequestBodyOrReference) ProtoMessage()               {}
func (*RequestBodyOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

type isRequestBodyOrReference_Oneof interface {
	isRequestBodyOrReference_Oneof()
}

type RequestBodyOrReference_RequestBody struct {
	RequestBody *RequestBody `protobuf:"bytes,1,opt,name=request_body,json=requestBody,oneof"`
}
type RequestBodyOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*RequestBodyOrReference_RequestBody) isRequestBodyOrReference_Oneof() {}
func (*RequestBodyOrReference_Reference) isRequestBodyOrReference_Oneof()   {}

func (m *RequestBodyOrReference) GetOneof() isRequestBodyOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *RequestBodyOrReference) GetRequestBody() *RequestBody {
	if x, ok := m.GetOneof().(*RequestBodyOrReference_RequestBody); ok {
		return x.RequestBody
	}
	return nil
}

func (m *RequestBodyOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*RequestBodyOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestBodyOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestBodyOrReference_OneofMarshaler, _RequestBodyOrReference_OneofUnmarshaler, _RequestBodyOrReference_OneofSizer, []interface{}{
		(*RequestBodyOrReference_RequestBody)(nil),
		(*RequestBodyOrReference_Reference)(nil),
	}
}

func _RequestBodyOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestBodyOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *RequestBodyOrReference_RequestBody:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestBody); err != nil {
			return err
		}
	case *RequestBodyOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestBodyOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _RequestBodyOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestBodyOrReference)
	switch tag {
	case 1: // oneof.request_body
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestBody)
		err := b.DecodeMessage(msg)
		m.Oneof = &RequestBodyOrReference_RequestBody{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &RequestBodyOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestBodyOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestBodyOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *RequestBodyOrReference_RequestBody:
		s := proto.Size(x.RequestBody)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestBodyOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Describes a single response from an API Operation, including design-time, static  `links` to operations based on the response.
type Response struct {
	Description            string                         `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Headers                *Headers                       `protobuf:"bytes,2,opt,name=headers" json:"headers,omitempty"`
	Content                *Content                       `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Links                  *Links                         `protobuf:"bytes,4,opt,name=links" json:"links,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,5,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *Response) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Response) GetHeaders() *Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Response) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Response) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Response) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type ResponseOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*ResponseOrReference_Response
	//	*ResponseOrReference_Reference
	Oneof isResponseOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *ResponseOrReference) Reset()                    { *m = ResponseOrReference{} }
func (m *ResponseOrReference) String() string            { return proto.CompactTextString(m) }
func (*ResponseOrReference) ProtoMessage()               {}
func (*ResponseOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

type isResponseOrReference_Oneof interface {
	isResponseOrReference_Oneof()
}

type ResponseOrReference_Response struct {
	Response *Response `protobuf:"bytes,1,opt,name=response,oneof"`
}
type ResponseOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*ResponseOrReference_Response) isResponseOrReference_Oneof()  {}
func (*ResponseOrReference_Reference) isResponseOrReference_Oneof() {}

func (m *ResponseOrReference) GetOneof() isResponseOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ResponseOrReference) GetResponse() *Response {
	if x, ok := m.GetOneof().(*ResponseOrReference_Response); ok {
		return x.Response
	}
	return nil
}

func (m *ResponseOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*ResponseOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResponseOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ResponseOrReference_OneofMarshaler, _ResponseOrReference_OneofUnmarshaler, _ResponseOrReference_OneofSizer, []interface{}{
		(*ResponseOrReference_Response)(nil),
		(*ResponseOrReference_Reference)(nil),
	}
}

func _ResponseOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ResponseOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *ResponseOrReference_Response:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case *ResponseOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResponseOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _ResponseOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ResponseOrReference)
	switch tag {
	case 1: // oneof.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Response)
		err := b.DecodeMessage(msg)
		m.Oneof = &ResponseOrReference_Response{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &ResponseOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResponseOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ResponseOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *ResponseOrReference_Response:
		s := proto.Size(x.Response)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A container for the expected responses of an operation. The container maps a HTTP response code to the expected response. It is not expected from the documentation to necessarily cover all possible HTTP response codes, since they may not be known in advance. However, it is expected  from the documentation to cover a successful operation response and any  known errors.  The `default` MAY be used as a default response object for all HTTP codes  that are not covered individually by the specification.  The `Responses Object` MUST contain at least one response code, and it  SHOULD be the response for a successful operation call.
type Responses struct {
	Default                *ResponseOrReference           `protobuf:"bytes,1,opt,name=default" json:"default,omitempty"`
	ResponseCode           []*NamedResponseOrReference    `protobuf:"bytes,2,rep,name=response_code,json=responseCode" json:"response_code,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,3,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Responses) Reset()                    { *m = Responses{} }
func (m *Responses) String() string            { return proto.CompactTextString(m) }
func (*Responses) ProtoMessage()               {}
func (*Responses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *Responses) GetDefault() *ResponseOrReference {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Responses) GetResponseCode() []*NamedResponseOrReference {
	if m != nil {
		return m.ResponseCode
	}
	return nil
}

func (m *Responses) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is an extended subset of the JSON Schema Specification Wright Draft 00.  Further information about the properties can be found in JSON Schema Core and JSON Schema Validation. Unless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.
type Schema struct {
	Nullable               bool                           `protobuf:"varint,1,opt,name=nullable" json:"nullable,omitempty"`
	Discriminator          string                         `protobuf:"bytes,2,opt,name=discriminator" json:"discriminator,omitempty"`
	ReadOnly               bool                           `protobuf:"varint,3,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	WriteOnly              bool                           `protobuf:"varint,4,opt,name=write_only,json=writeOnly" json:"write_only,omitempty"`
	Xml                    *Xml                           `protobuf:"bytes,5,opt,name=xml" json:"xml,omitempty"`
	ExternalDocs           *ExternalDocs                  `protobuf:"bytes,6,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Example                *Any                           `protobuf:"bytes,7,opt,name=example" json:"example,omitempty"`
	Examples               *Any                           `protobuf:"bytes,8,opt,name=examples" json:"examples,omitempty"`
	Deprecated             bool                           `protobuf:"varint,9,opt,name=deprecated" json:"deprecated,omitempty"`
	Title                  string                         `protobuf:"bytes,10,opt,name=title" json:"title,omitempty"`
	MultipleOf             float64                        `protobuf:"fixed64,11,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Maximum                float64                        `protobuf:"fixed64,12,opt,name=maximum" json:"maximum,omitempty"`
	ExclusiveMaximum       bool                           `protobuf:"varint,13,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	Minimum                float64                        `protobuf:"fixed64,14,opt,name=minimum" json:"minimum,omitempty"`
	ExclusiveMinimum       bool                           `protobuf:"varint,15,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	MaxLength              int64                          `protobuf:"varint,16,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	MinLength              int64                          `protobuf:"varint,17,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Pattern                string                         `protobuf:"bytes,18,opt,name=pattern" json:"pattern,omitempty"`
	MaxItems               int64                          `protobuf:"varint,19,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MinItems               int64                          `protobuf:"varint,20,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	UniqueItems            bool                           `protobuf:"varint,21,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	MaxProperties          int64                          `protobuf:"varint,22,opt,name=max_properties,json=maxProperties" json:"max_properties,omitempty"`
	MinProperties          int64                          `protobuf:"varint,23,opt,name=min_properties,json=minProperties" json:"min_properties,omitempty"`
	Required               []string                       `protobuf:"bytes,24,rep,name=required" json:"required,omitempty"`
	Enum                   []*Any                         `protobuf:"bytes,25,rep,name=enum" json:"enum,omitempty"`
	XRef                   string                         `protobuf:"bytes,26,opt,name=_ref,json=ref" json:"_ref,omitempty"`
	Type                   string                         `protobuf:"bytes,27,opt,name=type" json:"type,omitempty"`
	AllOf                  []*Schema                      `protobuf:"bytes,28,rep,name=all_of,json=allOf" json:"all_of,omitempty"`
	OneOf                  []*Schema                      `protobuf:"bytes,29,rep,name=one_of,json=oneOf" json:"one_of,omitempty"`
	AnyOf                  []*Schema                      `protobuf:"bytes,30,rep,name=any_of,json=anyOf" json:"any_of,omitempty"`
	Not                    *Schema                        `protobuf:"bytes,31,opt,name=not" json:"not,omitempty"`
	Items                  *ItemsItem                     `protobuf:"bytes,32,opt,name=items" json:"items,omitempty"`
	Properties             *Properties                    `protobuf:"bytes,33,opt,name=properties" json:"properties,omitempty"`
	Description            string                         `protobuf:"bytes,34,opt,name=description" json:"description,omitempty"`
	Format                 string                         `protobuf:"bytes,35,opt,name=format" json:"format,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,36,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *Schema) GetNullable() bool {
	if m != nil {
		return m.Nullable
	}
	return false
}

func (m *Schema) GetDiscriminator() string {
	if m != nil {
		return m.Discriminator
	}
	return ""
}

func (m *Schema) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *Schema) GetWriteOnly() bool {
	if m != nil {
		return m.WriteOnly
	}
	return false
}

func (m *Schema) GetXml() *Xml {
	if m != nil {
		return m.Xml
	}
	return nil
}

func (m *Schema) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Schema) GetExample() *Any {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *Schema) GetExamples() *Any {
	if m != nil {
		return m.Examples
	}
	return nil
}

func (m *Schema) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

func (m *Schema) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Schema) GetMultipleOf() float64 {
	if m != nil {
		return m.MultipleOf
	}
	return 0
}

func (m *Schema) GetMaximum() float64 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *Schema) GetExclusiveMaximum() bool {
	if m != nil {
		return m.ExclusiveMaximum
	}
	return false
}

func (m *Schema) GetMinimum() float64 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *Schema) GetExclusiveMinimum() bool {
	if m != nil {
		return m.ExclusiveMinimum
	}
	return false
}

func (m *Schema) GetMaxLength() int64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *Schema) GetMinLength() int64 {
	if m != nil {
		return m.MinLength
	}
	return 0
}

func (m *Schema) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *Schema) GetMaxItems() int64 {
	if m != nil {
		return m.MaxItems
	}
	return 0
}

func (m *Schema) GetMinItems() int64 {
	if m != nil {
		return m.MinItems
	}
	return 0
}

func (m *Schema) GetUniqueItems() bool {
	if m != nil {
		return m.UniqueItems
	}
	return false
}

func (m *Schema) GetMaxProperties() int64 {
	if m != nil {
		return m.MaxProperties
	}
	return 0
}

func (m *Schema) GetMinProperties() int64 {
	if m != nil {
		return m.MinProperties
	}
	return 0
}

func (m *Schema) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Schema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Schema) GetXRef() string {
	if m != nil {
		return m.XRef
	}
	return ""
}

func (m *Schema) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Schema) GetAllOf() []*Schema {
	if m != nil {
		return m.AllOf
	}
	return nil
}

func (m *Schema) GetOneOf() []*Schema {
	if m != nil {
		return m.OneOf
	}
	return nil
}

func (m *Schema) GetAnyOf() []*Schema {
	if m != nil {
		return m.AnyOf
	}
	return nil
}

func (m *Schema) GetNot() *Schema {
	if m != nil {
		return m.Not
	}
	return nil
}

func (m *Schema) GetItems() *ItemsItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Schema) GetProperties() *Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Schema) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Schema) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type SchemaOrReference struct {
	// Types that are valid to be assigned to Oneof:
	//	*SchemaOrReference_Schema
	//	*SchemaOrReference_Reference
	Oneof isSchemaOrReference_Oneof `protobuf_oneof:"oneof"`
}

func (m *SchemaOrReference) Reset()                    { *m = SchemaOrReference{} }
func (m *SchemaOrReference) String() string            { return proto.CompactTextString(m) }
func (*SchemaOrReference) ProtoMessage()               {}
func (*SchemaOrReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

type isSchemaOrReference_Oneof interface {
	isSchemaOrReference_Oneof()
}

type SchemaOrReference_Schema struct {
	Schema *Schema `protobuf:"bytes,1,opt,name=schema,oneof"`
}
type SchemaOrReference_Reference struct {
	Reference *Reference `protobuf:"bytes,2,opt,name=reference,oneof"`
}

func (*SchemaOrReference_Schema) isSchemaOrReference_Oneof()    {}
func (*SchemaOrReference_Reference) isSchemaOrReference_Oneof() {}

func (m *SchemaOrReference) GetOneof() isSchemaOrReference_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *SchemaOrReference) GetSchema() *Schema {
	if x, ok := m.GetOneof().(*SchemaOrReference_Schema); ok {
		return x.Schema
	}
	return nil
}

func (m *SchemaOrReference) GetReference() *Reference {
	if x, ok := m.GetOneof().(*SchemaOrReference_Reference); ok {
		return x.Reference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SchemaOrReference) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SchemaOrReference_OneofMarshaler, _SchemaOrReference_OneofUnmarshaler, _SchemaOrReference_OneofSizer, []interface{}{
		(*SchemaOrReference_Schema)(nil),
		(*SchemaOrReference_Reference)(nil),
	}
}

func _SchemaOrReference_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SchemaOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *SchemaOrReference_Schema:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Schema); err != nil {
			return err
		}
	case *SchemaOrReference_Reference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SchemaOrReference.Oneof has unexpected type %T", x)
	}
	return nil
}

func _SchemaOrReference_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SchemaOrReference)
	switch tag {
	case 1: // oneof.schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema)
		err := b.DecodeMessage(msg)
		m.Oneof = &SchemaOrReference_Schema{msg}
		return true, err
	case 2: // oneof.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Oneof = &SchemaOrReference_Reference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SchemaOrReference_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SchemaOrReference)
	// oneof
	switch x := m.Oneof.(type) {
	case *SchemaOrReference_Schema:
		s := proto.Size(x.Schema)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SchemaOrReference_Reference:
		s := proto.Size(x.Reference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Schemas struct {
	AdditionalProperties []*NamedSchema `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Schemas) Reset()                    { *m = Schemas{} }
func (m *Schemas) String() string            { return proto.CompactTextString(m) }
func (*Schemas) ProtoMessage()               {}
func (*Schemas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *Schemas) GetAdditionalProperties() []*NamedSchema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// Lists the available scopes for an OAuth2 security scheme.
type Scopes struct {
	Name                   []*NamedAny                    `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,2,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Scopes) Reset()                    { *m = Scopes{} }
func (m *Scopes) String() string            { return proto.CompactTextString(m) }
func (*Scopes) ProtoMessage()               {}
func (*Scopes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *Scopes) GetName() []*NamedAny {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Scopes) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Lists the required security schemes to execute this operation. The name used for each property MUST correspond to a security scheme declared in the Security Schemes under the Components Object.  Security Requirement Objects that contain multiple schemes require that all schemes MUST be satisfied for a request to be authorized. This enables support for scenarios where there multiple query parameters or HTTP headers are required to convey security information.  When a list of Security Requirement Objects is defined on the Open API object or Operation Object, only one of Security Requirement Objects in the list needs to be satisfied to authorize.
type SecurityRequirement struct {
	Name []*NamedAny `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
}

func (m *SecurityRequirement) Reset()                    { *m = SecurityRequirement{} }
func (m *SecurityRequirement) String() string            { return proto.CompactTextString(m) }
func (*SecurityRequirement) ProtoMessage()               {}
func (*SecurityRequirement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *SecurityRequirement) GetName() []*NamedAny {
	if m != nil {
		return m.Name
	}
	return nil
}

// Allows the definition of a security scheme that can be used by the operations. Supported schemes are HTTP authentication, an API key (either as a header or as a query parameter) and OAuth2's common flows (implicit, password, application and access code).
type SecurityScheme struct {
	Type                   string                         `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Description            string                         `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Name                   string                         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	In                     string                         `protobuf:"bytes,4,opt,name=in" json:"in,omitempty"`
	Scheme                 string                         `protobuf:"bytes,5,opt,name=scheme" json:"scheme,omitempty"`
	BearerFormat           string                         `protobuf:"bytes,6,opt,name=bearer_format,json=bearerFormat" json:"bearer_format,omitempty"`
	Flow                   *OauthFlows                    `protobuf:"bytes,7,opt,name=flow" json:"flow,omitempty"`
	OpenIdConnectUrl       string                         `protobuf:"bytes,8,opt,name=open_id_connect_url,json=openIdConnectUrl" json:"open_id_connect_url,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,9,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *SecurityScheme) Reset()                    { *m = SecurityScheme{} }
func (m *SecurityScheme) String() string            { return proto.CompactTextString(m) }
func (*SecurityScheme) ProtoMessage()               {}
func (*SecurityScheme) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *SecurityScheme) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SecurityScheme) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityScheme) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecurityScheme) GetIn() string {
	if m != nil {
		return m.In
	}
	return ""
}

func (m *SecurityScheme) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *SecurityScheme) GetBearerFormat() string {
	if m != nil {
		return m.BearerFormat
	}
	return ""
}

func (m *SecurityScheme) GetFlow() *OauthFlows {
	if m != nil {
		return m.Flow
	}
	return nil
}

func (m *SecurityScheme) GetOpenIdConnectUrl() string {
	if m != nil {
		return m.OpenIdConnectUrl
	}
	return ""
}

func (m *SecurityScheme) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type SecuritySchemes struct {
	AdditionalProperties []*NamedSecurityScheme `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *SecuritySchemes) Reset()                    { *m = SecuritySchemes{} }
func (m *SecuritySchemes) String() string            { return proto.CompactTextString(m) }
func (*SecuritySchemes) ProtoMessage()               {}
func (*SecuritySchemes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *SecuritySchemes) GetAdditionalProperties() []*NamedSecurityScheme {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// An object representing a Server.
type Server struct {
	Url                    string                         `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Description            string                         `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Variables              *ServerVariables               `protobuf:"bytes,3,opt,name=variables" json:"variables,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,4,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Server) Reset()                    { *m = Server{} }
func (m *Server) String() string            { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()               {}
func (*Server) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *Server) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Server) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Server) GetVariables() *ServerVariables {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Server) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// An object representing a Server Variable for server URL template substitution.
type ServerVariable struct {
	Enum                   []*Primitive                   `protobuf:"bytes,1,rep,name=enum" json:"enum,omitempty"`
	Default                *Primitive                     `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Description            string                         `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,4,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *ServerVariable) Reset()                    { *m = ServerVariable{} }
func (m *ServerVariable) String() string            { return proto.CompactTextString(m) }
func (*ServerVariable) ProtoMessage()               {}
func (*ServerVariable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *ServerVariable) GetEnum() []*Primitive {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *ServerVariable) GetDefault() *Primitive {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *ServerVariable) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ServerVariable) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

type ServerVariables struct {
	Name                   []*NamedServerVariable         `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,2,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *ServerVariables) Reset()                    { *m = ServerVariables{} }
func (m *ServerVariables) String() string            { return proto.CompactTextString(m) }
func (*ServerVariables) ProtoMessage()               {}
func (*ServerVariables) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *ServerVariables) GetName() []*NamedServerVariable {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ServerVariables) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// Any property starting with x- is valid.
type SpecificationExtension struct {
	AdditionalProperties []*NamedAny `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *SpecificationExtension) Reset()                    { *m = SpecificationExtension{} }
func (m *SpecificationExtension) String() string            { return proto.CompactTextString(m) }
func (*SpecificationExtension) ProtoMessage()               {}
func (*SpecificationExtension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *SpecificationExtension) GetAdditionalProperties() []*NamedAny {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type StringArray struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *StringArray) Reset()                    { *m = StringArray{} }
func (m *StringArray) String() string            { return proto.CompactTextString(m) }
func (*StringArray) ProtoMessage()               {}
func (*StringArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *StringArray) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

// Allows adding meta data to a single tag that is used by the Operation Object. It is not mandatory to have a Tag Object per tag used there.
type Tag struct {
	Name                   string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description            string                         `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ExternalDocs           *ExternalDocs                  `protobuf:"bytes,3,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,4,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Tag) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

// A metadata object that allows for more fine-tuned XML model definitions.  When using arrays, XML element names are *not* inferred (for singular/plural forms) and the `name` property SHOULD be used to add that information. See examples for expected behavior.
type Xml struct {
	Name                   string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace              string                         `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Prefix                 string                         `protobuf:"bytes,3,opt,name=prefix" json:"prefix,omitempty"`
	Attribute              bool                           `protobuf:"varint,4,opt,name=attribute" json:"attribute,omitempty"`
	Wrapped                bool                           `protobuf:"varint,5,opt,name=wrapped" json:"wrapped,omitempty"`
	SpecificationExtension []*NamedSpecificationExtension `protobuf:"bytes,6,rep,name=specification_extension,json=specificationExtension" json:"specification_extension,omitempty"`
}

func (m *Xml) Reset()                    { *m = Xml{} }
func (m *Xml) String() string            { return proto.CompactTextString(m) }
func (*Xml) ProtoMessage()               {}
func (*Xml) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *Xml) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Xml) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Xml) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Xml) GetAttribute() bool {
	if m != nil {
		return m.Attribute
	}
	return false
}

func (m *Xml) GetWrapped() bool {
	if m != nil {
		return m.Wrapped
	}
	return false
}

func (m *Xml) GetSpecificationExtension() []*NamedSpecificationExtension {
	if m != nil {
		return m.SpecificationExtension
	}
	return nil
}

func init() {
	proto.RegisterType((*Any)(nil), "openapi.v3.Any")
	proto.RegisterType((*AnyOrExpression)(nil), "openapi.v3.AnyOrExpression")
	proto.RegisterType((*Callback)(nil), "openapi.v3.Callback")
	proto.RegisterType((*CallbackOrReference)(nil), "openapi.v3.CallbackOrReference")
	proto.RegisterType((*Callbacks)(nil), "openapi.v3.Callbacks")
	proto.RegisterType((*Components)(nil), "openapi.v3.Components")
	proto.RegisterType((*Contact)(nil), "openapi.v3.Contact")
	proto.RegisterType((*Content)(nil), "openapi.v3.Content")
	proto.RegisterType((*Document)(nil), "openapi.v3.Document")
	proto.RegisterType((*Encoding)(nil), "openapi.v3.Encoding")
	proto.RegisterType((*EncodingProperty)(nil), "openapi.v3.EncodingProperty")
	proto.RegisterType((*Example)(nil), "openapi.v3.Example")
	proto.RegisterType((*ExampleOrReference)(nil), "openapi.v3.ExampleOrReference")
	proto.RegisterType((*Examples)(nil), "openapi.v3.Examples")
	proto.RegisterType((*Expression)(nil), "openapi.v3.Expression")
	proto.RegisterType((*ExternalDocs)(nil), "openapi.v3.ExternalDocs")
	proto.RegisterType((*Header)(nil), "openapi.v3.Header")
	proto.RegisterType((*HeaderOrReference)(nil), "openapi.v3.HeaderOrReference")
	proto.RegisterType((*Headers)(nil), "openapi.v3.Headers")
	proto.RegisterType((*Info)(nil), "openapi.v3.Info")
	proto.RegisterType((*ItemsItem)(nil), "openapi.v3.ItemsItem")
	proto.RegisterType((*License)(nil), "openapi.v3.License")
	proto.RegisterType((*Link)(nil), "openapi.v3.Link")
	proto.RegisterType((*LinkOrReference)(nil), "openapi.v3.LinkOrReference")
	proto.RegisterType((*LinkParameters)(nil), "openapi.v3.LinkParameters")
	proto.RegisterType((*Links)(nil), "openapi.v3.Links")
	proto.RegisterType((*MediaType)(nil), "openapi.v3.MediaType")
	proto.RegisterType((*NamedAny)(nil), "openapi.v3.NamedAny")
	proto.RegisterType((*NamedAnyOrExpression)(nil), "openapi.v3.NamedAnyOrExpression")
	proto.RegisterType((*NamedCallbackOrReference)(nil), "openapi.v3.NamedCallbackOrReference")
	proto.RegisterType((*NamedEncodingProperty)(nil), "openapi.v3.NamedEncodingProperty")
	proto.RegisterType((*NamedHeaderOrReference)(nil), "openapi.v3.NamedHeaderOrReference")
	proto.RegisterType((*NamedLinkOrReference)(nil), "openapi.v3.NamedLinkOrReference")
	proto.RegisterType((*NamedMediaType)(nil), "openapi.v3.NamedMediaType")
	proto.RegisterType((*NamedParameter)(nil), "openapi.v3.NamedParameter")
	proto.RegisterType((*NamedPathItem)(nil), "openapi.v3.NamedPathItem")
	proto.RegisterType((*NamedRequestBody)(nil), "openapi.v3.NamedRequestBody")
	proto.RegisterType((*NamedResponseOrReference)(nil), "openapi.v3.NamedResponseOrReference")
	proto.RegisterType((*NamedSchema)(nil), "openapi.v3.NamedSchema")
	proto.RegisterType((*NamedSecurityScheme)(nil), "openapi.v3.NamedSecurityScheme")
	proto.RegisterType((*NamedServerVariable)(nil), "openapi.v3.NamedServerVariable")
	proto.RegisterType((*NamedSpecificationExtension)(nil), "openapi.v3.NamedSpecificationExtension")
	proto.RegisterType((*OauthFlow)(nil), "openapi.v3.OauthFlow")
	proto.RegisterType((*OauthFlows)(nil), "openapi.v3.OauthFlows")
	proto.RegisterType((*Object)(nil), "openapi.v3.Object")
	proto.RegisterType((*Operation)(nil), "openapi.v3.Operation")
	proto.RegisterType((*Parameter)(nil), "openapi.v3.Parameter")
	proto.RegisterType((*ParameterOrReference)(nil), "openapi.v3.ParameterOrReference")
	proto.RegisterType((*Parameters)(nil), "openapi.v3.Parameters")
	proto.RegisterType((*PathItem)(nil), "openapi.v3.PathItem")
	proto.RegisterType((*Paths)(nil), "openapi.v3.Paths")
	proto.RegisterType((*Primitive)(nil), "openapi.v3.Primitive")
	proto.RegisterType((*Properties)(nil), "openapi.v3.Properties")
	proto.RegisterType((*Reference)(nil), "openapi.v3.Reference")
	proto.RegisterType((*RequestBodies)(nil), "openapi.v3.RequestBodies")
	proto.RegisterType((*RequestBody)(nil), "openapi.v3.RequestBody")
	proto.RegisterType((*RequestBodyOrReference)(nil), "openapi.v3.RequestBodyOrReference")
	proto.RegisterType((*Response)(nil), "openapi.v3.Response")
	proto.RegisterType((*ResponseOrReference)(nil), "openapi.v3.ResponseOrReference")
	proto.RegisterType((*Responses)(nil), "openapi.v3.Responses")
	proto.RegisterType((*Schema)(nil), "openapi.v3.Schema")
	proto.RegisterType((*SchemaOrReference)(nil), "openapi.v3.SchemaOrReference")
	proto.RegisterType((*Schemas)(nil), "openapi.v3.Schemas")
	proto.RegisterType((*Scopes)(nil), "openapi.v3.Scopes")
	proto.RegisterType((*SecurityRequirement)(nil), "openapi.v3.SecurityRequirement")
	proto.RegisterType((*SecurityScheme)(nil), "openapi.v3.SecurityScheme")
	proto.RegisterType((*SecuritySchemes)(nil), "openapi.v3.SecuritySchemes")
	proto.RegisterType((*Server)(nil), "openapi.v3.Server")
	proto.RegisterType((*ServerVariable)(nil), "openapi.v3.ServerVariable")
	proto.RegisterType((*ServerVariables)(nil), "openapi.v3.ServerVariables")
	proto.RegisterType((*SpecificationExtension)(nil), "openapi.v3.SpecificationExtension")
	proto.RegisterType((*StringArray)(nil), "openapi.v3.StringArray")
	proto.RegisterType((*Tag)(nil), "openapi.v3.Tag")
	proto.RegisterType((*Xml)(nil), "openapi.v3.Xml")
}

func init() { proto.RegisterFile("OpenAPIv3/OpenAPIv3.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xec, 0x5b, 0xbb, 0x6f, 0x5c, 0xc7,
	0xb9, 0xe7, 0xd9, 0xf7, 0x7e, 0x4b, 0x52, 0xe4, 0x90, 0xa2, 0x56, 0xd4, 0x7b, 0x25, 0xdb, 0x7a,
	0x98, 0x92, 0x2d, 0x5e, 0xfb, 0xca, 0xbe, 0xd7, 0xb8, 0xa6, 0x64, 0x0a, 0x24, 0xae, 0x9d, 0xa5,
	0x0f, 0xe5, 0x07, 0x1c, 0x18, 0x9b, 0xe1, 0xd9, 0x59, 0xf2, 0x44, 0xe7, 0xe5, 0x73, 0x66, 0x29,
	0x6e, 0x3a, 0x03, 0x49, 0xe1, 0xc2, 0x45, 0x80, 0x24, 0x48, 0x93, 0x26, 0x08, 0xe0, 0x14, 0xf9,
	0x03, 0x52, 0xa7, 0x0e, 0xd2, 0xa4, 0x0a, 0xe0, 0x22, 0x45, 0x1a, 0x77, 0x01, 0x82, 0xf4, 0xc1,
	0xbc, 0xce, 0x63, 0xcf, 0xec, 0x92, 0x14, 0x57, 0x2c, 0x82, 0x34, 0xd2, 0xce, 0x7c, 0xbf, 0xf9,
	0x66, 0xce, 0xcc, 0xf7, 0x9e, 0x21, 0x9c, 0x6f, 0x07, 0xc4, 0x5b, 0xdb, 0xda, 0xdc, 0x5f, 0xbd,
	0x17, 0xff, 0xba, 0x1b, 0x84, 0x3e, 0xf5, 0x11, 0xf8, 0x01, 0xf1, 0x70, 0x60, 0xdf, 0xdd, 0x5f,
	0x5d, 0x3e, 0xbf, 0xeb, 0xfb, 0xbb, 0x0e, 0xb9, 0xc7, 0x29, 0x3b, 0xfd, 0xde, 0x3d, 0xec, 0x0d,
	0x04, 0xac, 0xb5, 0x0e, 0xc5, 0x35, 0x6f, 0x80, 0x6e, 0x43, 0x79, 0x1f, 0x3b, 0x7d, 0xd2, 0x34,
	0xae, 0x1a, 0x37, 0x1b, 0xf7, 0x17, 0xef, 0x8a, 0x11, 0x77, 0xd5, 0x88, 0xbb, 0x6b, 0xde, 0xc0,
	0x14, 0x10, 0x84, 0xa0, 0x34, 0xc0, 0xae, 0xd3, 0x2c, 0x5c, 0x35, 0x6e, 0xd6, 0x4d, 0xfe, 0xbb,
	0x35, 0x80, 0x33, 0x6b, 0xde, 0xa0, 0x1d, 0xae, 0x1f, 0x04, 0x21, 0x89, 0x22, 0xdb, 0xf7, 0xd0,
	0x75, 0x28, 0x62, 0x6f, 0x20, 0x19, 0x9e, 0xb9, 0x9b, 0x2c, 0x87, 0xf1, 0xda, 0x98, 0x32, 0x19,
	0x15, 0x3d, 0x00, 0x20, 0xf1, 0x10, 0xce, 0xb1, 0x71, 0x7f, 0x29, 0x8d, 0x4d, 0x18, 0x6e, 0x4c,
	0x99, 0x29, 0xec, 0xc3, 0x2a, 0x94, 0x7d, 0x8f, 0xf8, 0xbd, 0xd6, 0x37, 0x06, 0xd4, 0x1e, 0x61,
	0xc7, 0xd9, 0xc1, 0xd6, 0x53, 0xf4, 0x56, 0x86, 0x9f, 0x71, 0xb5, 0x78, 0xb3, 0x71, 0xff, 0x7c,
	0x9a, 0xdf, 0xf7, 0xb0, 0x4b, 0xba, 0x5b, 0x98, 0xee, 0x6d, 0x52, 0xe2, 0xa6, 0x19, 0xa2, 0x1f,
	0xc0, 0xb9, 0x28, 0x20, 0x96, 0xdd, 0xb3, 0x2d, 0x4c, 0x6d, 0xdf, 0xeb, 0x90, 0x03, 0x4a, 0x3c,
	0xb9, 0x2e, 0xc6, 0xe7, 0x95, 0x1c, 0x9f, 0xed, 0x34, 0x7e, 0x5d, 0xc1, 0xcd, 0xa5, 0x48, 0xdb,
	0xdf, 0xfa, 0xca, 0x80, 0x05, 0xb5, 0xd2, 0x76, 0x68, 0x92, 0x1e, 0x09, 0x89, 0x67, 0x11, 0x74,
	0x1f, 0x6a, 0x96, 0xec, 0x8e, 0xf7, 0x3f, 0x35, 0x95, 0x1a, 0xb2, 0x31, 0x65, 0xc6, 0x38, 0xf4,
	0x06, 0xd4, 0x43, 0xc5, 0x40, 0xee, 0xdb, 0xd9, 0xf4, 0xa0, 0x98, 0xfb, 0xc6, 0x94, 0x99, 0x20,
	0x33, 0xbb, 0x56, 0x57, 0x8c, 0x23, 0xf4, 0x00, 0x4a, 0x1e, 0x76, 0x89, 0xdc, 0xb0, 0x1b, 0xb9,
	0x0f, 0xd5, 0xac, 0xda, 0xe4, 0x23, 0x4e, 0x61, 0xd7, 0xfe, 0x5c, 0x02, 0x78, 0xe4, 0xbb, 0x81,
	0xef, 0x11, 0x8f, 0x46, 0x68, 0x05, 0xaa, 0x91, 0xb5, 0x47, 0x5c, 0x1c, 0xc9, 0xbd, 0x5a, 0x48,
	0x4f, 0xb0, 0x2d, 0x48, 0xa6, 0xc2, 0xa0, 0x55, 0xb6, 0x4f, 0x51, 0xe0, 0x7b, 0x11, 0x89, 0xf4,
	0xfb, 0x24, 0x89, 0x66, 0x82, 0x43, 0x6f, 0x02, 0x04, 0x38, 0xc4, 0x2e, 0xa1, 0x24, 0x8c, 0x9a,
	0xc5, 0xbc, 0x54, 0x6e, 0xc5, 0x54, 0x33, 0x85, 0x44, 0xaf, 0x41, 0x8d, 0x1c, 0x60, 0x37, 0x70,
	0x48, 0xd4, 0x2c, 0xe5, 0x0f, 0x72, 0x5d, 0xd2, 0xcc, 0x18, 0x85, 0xde, 0x85, 0xd9, 0x90, 0x7c,
	0xd1, 0x27, 0x11, 0xed, 0xec, 0xf8, 0x5d, 0x9b, 0x44, 0xcd, 0x32, 0x1f, 0x77, 0x3e, 0xbb, 0x46,
	0x8e, 0x78, 0xc8, 0x01, 0xe6, 0x4c, 0x98, 0x6e, 0xb2, 0xfd, 0xd8, 0x23, 0xb8, 0xcb, 0x16, 0x5a,
	0xc9, 0xef, 0xc7, 0x86, 0x20, 0x99, 0x0a, 0x83, 0x1e, 0xc3, 0x5c, 0x44, 0xac, 0x7e, 0x68, 0xd3,
	0x41, 0x87, 0xef, 0x11, 0x89, 0x9a, 0x55, 0x3e, 0xee, 0x42, 0x66, 0x1f, 0x25, 0x66, 0x5b, 0x40,
	0xcc, 0x33, 0x51, 0xb6, 0x03, 0xbd, 0x02, 0x65, 0xc7, 0xf6, 0x9e, 0x46, 0xcd, 0x1a, 0x1f, 0x3c,
	0x9f, 0x1e, 0xfc, 0x3e, 0x23, 0x98, 0x82, 0xce, 0x0e, 0x40, 0x09, 0x6d, 0xd4, 0xac, 0xe7, 0x0f,
	0x20, 0x16, 0x42, 0x33, 0xc1, 0x8d, 0x93, 0x2a, 0x98, 0x8c, 0x54, 0x7d, 0x63, 0x40, 0xf5, 0x91,
	0xef, 0x51, 0x6c, 0x51, 0x66, 0xd0, 0xa4, 0xf4, 0x73, 0x83, 0xc6, 0xe5, 0x7a, 0x0e, 0x8a, 0xfd,
	0x50, 0xd9, 0x38, 0xf6, 0x13, 0x2d, 0x42, 0x99, 0xb8, 0xd8, 0x76, 0xb8, 0x3c, 0xd4, 0x4d, 0xd1,
	0x18, 0xb7, 0xd2, 0xd2, 0x64, 0x56, 0xfa, 0x99, 0x58, 0x28, 0xf1, 0x28, 0x6a, 0xc3, 0x59, 0xdc,
	0xed, 0xda, 0x8c, 0x8e, 0x9d, 0x4e, 0x10, 0xfa, 0x01, 0x09, 0x29, 0x13, 0x1a, 0xa1, 0xb7, 0xcb,
	0xb9, 0xa9, 0x3e, 0x20, 0x5d, 0x1b, 0x3f, 0x19, 0x04, 0xc4, 0x5c, 0x4c, 0x06, 0x6e, 0xc5, 0xe3,
	0x5a, 0xdf, 0x16, 0xa1, 0xf6, 0x9e, 0x6f, 0xf5, 0x5d, 0xc6, 0xbd, 0x09, 0x55, 0x39, 0x5e, 0xee,
	0x84, 0x6a, 0xa2, 0x1b, 0x50, 0xb2, 0xbd, 0x9e, 0x2f, 0xf5, 0x67, 0x2e, 0x3d, 0xcd, 0xa6, 0xd7,
	0xf3, 0x4d, 0x4e, 0x45, 0xaf, 0x42, 0x35, 0x22, 0xe1, 0xbe, 0x50, 0x19, 0xb6, 0x1e, 0x94, 0x95,
	0x28, 0x46, 0x32, 0x15, 0x84, 0x09, 0x50, 0x80, 0xe9, 0x9e, 0x52, 0x94, 0xf9, 0xac, 0x7a, 0xd1,
	0xbd, 0xc8, 0x14, 0x74, 0xa6, 0x8c, 0x56, 0xac, 0xfe, 0x52, 0x3d, 0x32, 0xca, 0x98, 0x18, 0x07,
	0x33, 0x85, 0x44, 0xff, 0x03, 0x35, 0x25, 0xb4, 0xcd, 0x0a, 0x5f, 0xcf, 0x15, 0x9d, 0x84, 0x33,
	0xe5, 0xb2, 0x43, 0xc2, 0x76, 0xc0, 0x8c, 0x07, 0xa0, 0xeb, 0x50, 0xa2, 0x78, 0x97, 0xa9, 0x46,
	0x71, 0xd8, 0x7b, 0x3d, 0xc1, 0xbb, 0x26, 0x27, 0xa2, 0x77, 0x60, 0x86, 0x9d, 0x76, 0xc8, 0x0e,
	0xa3, 0xeb, 0x5b, 0x4a, 0x17, 0x9a, 0x59, 0x9d, 0x17, 0x80, 0xf7, 0x7c, 0x2b, 0x32, 0xa7, 0x49,
	0xaa, 0x35, 0x4e, 0x74, 0xea, 0x93, 0x11, 0x9d, 0x4d, 0xa8, 0xad, 0x7b, 0x96, 0xdf, 0xb5, 0xbd,
	0x5d, 0xf4, 0x0e, 0xd4, 0xa4, 0xc0, 0x0c, 0xa4, 0xb8, 0x5c, 0xcb, 0xb1, 0x57, 0x60, 0x29, 0x21,
	0x03, 0x33, 0x1e, 0xd2, 0xfa, 0xa7, 0x01, 0x73, 0xc3, 0x64, 0x74, 0x0d, 0xa6, 0x2d, 0x21, 0x9a,
	0x1d, 0x3a, 0x08, 0x94, 0x02, 0x35, 0x64, 0x1f, 0x93, 0x3b, 0x26, 0x14, 0xca, 0x3c, 0x09, 0xe9,
	0xc9, 0x08, 0x45, 0x7b, 0xe7, 0x87, 0xc4, 0xa2, 0x89, 0x75, 0x5a, 0x84, 0x72, 0x44, 0x07, 0x0e,
	0x51, 0x3a, 0xc6, 0x1b, 0x4c, 0x30, 0xc9, 0x41, 0xe0, 0xf8, 0x5d, 0xc2, 0x85, 0xa5, 0x66, 0xaa,
	0xe6, 0xb8, 0x2d, 0x2c, 0x4f, 0x66, 0x0b, 0xeb, 0x50, 0x95, 0x66, 0xbb, 0xf5, 0x13, 0x03, 0x90,
	0xfc, 0x9d, 0xf6, 0xde, 0xf7, 0xd8, 0xea, 0x78, 0xaf, 0xce, 0x21, 0xc9, 0x01, 0x1b, 0x53, 0xa6,
	0x42, 0x9d, 0xd8, 0x75, 0x03, 0xd4, 0x94, 0x27, 0x69, 0x7d, 0x02, 0x90, 0x0a, 0xb9, 0x36, 0xc7,
	0xdb, 0x87, 0xc5, 0xdc, 0x66, 0xb0, 0xa8, 0x4e, 0x6f, 0x19, 0x7e, 0x63, 0xc0, 0x74, 0x5a, 0x76,
	0xd1, 0x55, 0x68, 0x74, 0x49, 0x64, 0x85, 0x76, 0x40, 0x45, 0x68, 0xc5, 0x8f, 0x3a, 0xd5, 0xa5,
	0x31, 0x99, 0x63, 0x8e, 0xa7, 0x38, 0x99, 0xe3, 0xf9, 0xae, 0x08, 0x15, 0xe1, 0xe3, 0xb4, 0x56,
	0x7c, 0x16, 0x0a, 0xb6, 0x27, 0x57, 0x54, 0xb0, 0xbd, 0xe1, 0x8f, 0x28, 0xe6, 0x3f, 0x62, 0x19,
	0x6a, 0xa1, 0xb0, 0x08, 0x5d, 0x29, 0x6c, 0x71, 0x1b, 0x5d, 0x06, 0xe8, 0x92, 0x20, 0x24, 0x16,
	0xa6, 0xa4, 0xcb, 0x2d, 0x51, 0xcd, 0x4c, 0xf5, 0xa0, 0xdb, 0x30, 0x8f, 0x1d, 0xc7, 0x7f, 0xd6,
	0x21, 0x6e, 0x40, 0x07, 0x1d, 0x11, 0x50, 0x57, 0x38, 0xec, 0x0c, 0x27, 0xac, 0xb3, 0xfe, 0x8f,
	0x79, 0x10, 0x1d, 0x4b, 0x7a, 0x75, 0x84, 0xa4, 0xd7, 0xb2, 0x92, 0xfe, 0x12, 0xcc, 0x0a, 0xde,
	0x21, 0xe1, 0x16, 0xb4, 0xcb, 0x7d, 0x69, 0xcd, 0x9c, 0xe1, 0xbd, 0xa6, 0xec, 0x44, 0x6f, 0x40,
	0x45, 0x44, 0x3e, 0x4d, 0xe0, 0x82, 0x75, 0x29, 0x1f, 0x1c, 0xa5, 0x63, 0x38, 0x09, 0x46, 0x6f,
	0xa7, 0x02, 0x97, 0x06, 0x3f, 0x99, 0xcb, 0x1a, 0x21, 0x4e, 0x8f, 0x4c, 0x42, 0x98, 0x07, 0x89,
	0xfc, 0x4f, 0xf3, 0x39, 0x0f, 0x1b, 0x1a, 0x2b, 0xc2, 0x0a, 0x54, 0xa5, 0xa9, 0x68, 0xce, 0xe4,
	0x35, 0x47, 0x3a, 0x3d, 0x53, 0x61, 0x5a, 0x5f, 0x1a, 0x30, 0x2f, 0xce, 0x3a, 0xad, 0x7e, 0xaf,
	0x42, 0x45, 0x58, 0x0f, 0xa9, 0x7d, 0x28, 0x1f, 0xfe, 0x6c, 0x4c, 0x99, 0x12, 0x73, 0x62, 0xdd,
	0x5b, 0x83, 0xaa, 0x0c, 0xa9, 0xd0, 0x9b, 0x99, 0x98, 0xb9, 0x95, 0x93, 0xe4, 0xdc, 0x52, 0x85,
	0x4c, 0xb6, 0xfe, 0x50, 0x80, 0x12, 0xf3, 0x9a, 0x4c, 0x04, 0xa8, 0x4d, 0x1d, 0x25, 0xb1, 0xa2,
	0x31, 0x2c, 0xa2, 0x85, 0xbc, 0x88, 0xde, 0x84, 0x39, 0x4a, 0x42, 0x37, 0xea, 0xf8, 0xbd, 0x0e,
	0x3b, 0x76, 0xdb, 0x52, 0xf6, 0x72, 0x96, 0xf7, 0xb7, 0x7b, 0xdb, 0xa2, 0x57, 0x6d, 0x30, 0xb6,
	0xa8, 0xf4, 0xb2, 0xb9, 0x0d, 0xc6, 0x96, 0xdc, 0x60, 0x16, 0x07, 0xad, 0x40, 0xd5, 0xb1, 0x2d,
	0xe2, 0x45, 0x44, 0xba, 0xd9, 0x85, 0x6c, 0x54, 0xc7, 0x49, 0xa6, 0xc2, 0x30, 0x61, 0x65, 0x9e,
	0x9c, 0xad, 0xb2, 0x22, 0xe2, 0x05, 0xd9, 0x1c, 0xa7, 0xf7, 0xd5, 0xc9, 0xe8, 0xfd, 0x7f, 0x43,
	0x9d, 0x25, 0x70, 0x11, 0xfb, 0x07, 0xdd, 0x8e, 0x85, 0xde, 0xd0, 0xc4, 0x1d, 0x9c, 0xa2, 0x24,
	0xbd, 0xf5, 0x53, 0x03, 0xaa, 0xf2, 0x4b, 0x8e, 0x18, 0xf7, 0xbd, 0x78, 0x23, 0xf6, 0xbb, 0x02,
	0x94, 0x58, 0xcc, 0xcc, 0x16, 0xb4, 0x17, 0x92, 0x9e, 0x5a, 0x10, 0xfb, 0xcd, 0x7c, 0x2c, 0x33,
	0xca, 0x62, 0x6a, 0xbb, 0xab, 0x04, 0x22, 0xee, 0xdb, 0xec, 0xa2, 0xb7, 0x35, 0xe9, 0xca, 0xf2,
	0x70, 0x40, 0x3e, 0x22, 0x65, 0x49, 0xa5, 0x0f, 0xa5, 0x23, 0xa4, 0x0f, 0x43, 0xd2, 0x59, 0xce,
	0x4b, 0xe7, 0x98, 0xed, 0xaa, 0x4c, 0x66, 0xbb, 0x06, 0x70, 0x86, 0x7d, 0x50, 0xda, 0x08, 0xbc,
	0x0c, 0x25, 0x96, 0x6d, 0x48, 0x13, 0x30, 0x37, 0xfc, 0xed, 0x1b, 0x53, 0x26, 0xa7, 0x9f, 0x58,
	0xfd, 0x1f, 0xc3, 0x6c, 0x76, 0x2f, 0xd1, 0x7f, 0x65, 0xac, 0xc0, 0x55, 0x9d, 0x87, 0x4d, 0x57,
	0x45, 0xa4, 0x0d, 0x78, 0x07, 0xca, 0x3c, 0x49, 0x3a, 0x74, 0xf8, 0xd0, 0x87, 0xca, 0xe1, 0x7f,
	0x2c, 0x40, 0x3d, 0x0e, 0xed, 0x53, 0x36, 0xdf, 0x78, 0x5e, 0x9b, 0x5f, 0x78, 0x7e, 0x9b, 0x5f,
	0x3c, 0x9e, 0xcd, 0x67, 0x29, 0xb2, 0x0c, 0x23, 0xb5, 0x29, 0xb2, 0xa4, 0x99, 0x31, 0xea, 0x14,
	0x62, 0xbc, 0x75, 0xa8, 0xa9, 0xb3, 0xd2, 0xda, 0x84, 0x97, 0x54, 0x71, 0xac, 0xa0, 0xad, 0x65,
	0xc9, 0xba, 0x58, 0xeb, 0x73, 0x58, 0xd4, 0x1d, 0xb9, 0x96, 0xe5, 0xeb, 0x59, 0x96, 0x17, 0x86,
	0x58, 0x66, 0x44, 0x46, 0xb2, 0x27, 0xd0, 0x1c, 0x55, 0x8b, 0xd1, 0x4e, 0xf1, 0x46, 0x76, 0x8a,
	0x2b, 0xba, 0xa4, 0x3b, 0x7d, 0x44, 0x72, 0x9a, 0x0e, 0x9c, 0xd5, 0xe6, 0x02, 0xda, 0x39, 0xee,
	0x67, 0xe7, 0xb8, 0xa8, 0x3b, 0xca, 0x38, 0x99, 0x90, 0x13, 0x60, 0x58, 0xd2, 0xfb, 0x47, 0xed,
	0x0c, 0xab, 0xd9, 0x19, 0x2e, 0xe5, 0xad, 0x93, 0xe6, 0x1b, 0xd4, 0x49, 0x0c, 0x9b, 0x89, 0xe3,
	0x9e, 0xc4, 0xb0, 0xf6, 0x49, 0xf6, 0x1f, 0xc2, 0x6c, 0x36, 0xbb, 0xd6, 0x32, 0xbe, 0x93, 0x65,
	0x9c, 0xb1, 0x33, 0x49, 0x5e, 0x3e, 0xc4, 0x32, 0xb6, 0x2c, 0xc7, 0x66, 0x19, 0x8f, 0x54, 0x2c,
	0xdb, 0x30, 0x93, 0x29, 0x76, 0x6a, 0x39, 0xde, 0xce, 0x72, 0x5c, 0x1c, 0xce, 0xc2, 0x79, 0x95,
	0x54, 0x32, 0xfc, 0x08, 0xe6, 0x38, 0xc3, 0xa4, 0x1c, 0xa5, 0x17, 0x8a, 0x95, 0x2c, 0xcf, 0x73,
	0xfa, 0x52, 0xd6, 0x60, 0x58, 0xae, 0x55, 0x25, 0xee, 0x24, 0x72, 0xad, 0xe1, 0xa1, 0xa6, 0xf9,
	0x7f, 0x68, 0x08, 0xdb, 0x20, 0xac, 0x9f, 0x8e, 0xf3, 0xcd, 0x2c, 0x67, 0x5d, 0x18, 0x21, 0x99,
	0x7d, 0x1f, 0x16, 0x04, 0xb3, 0x4c, 0x55, 0x4c, 0xcb, 0xf4, 0xb5, 0x2c, 0xd3, 0xe5, 0xd1, 0x55,
	0xb6, 0x3c, 0xf3, 0x70, 0x9f, 0x84, 0x1f, 0xe3, 0xd0, 0xc6, 0x3b, 0xce, 0xf3, 0x30, 0x4f, 0x0f,
	0x57, 0xcc, 0x9f, 0xc2, 0x85, 0x31, 0x26, 0x52, 0x3b, 0xc9, 0x83, 0xec, 0x24, 0x99, 0x48, 0x77,
	0x84, 0xa5, 0x95, 0x93, 0xfd, 0xb8, 0x00, 0xf5, 0x36, 0xee, 0xd3, 0xbd, 0xc7, 0x8e, 0xff, 0x0c,
	0xdd, 0x81, 0x79, 0xf6, 0xdb, 0x0f, 0xed, 0x1f, 0x09, 0x43, 0xce, 0x02, 0x2d, 0x31, 0xd1, 0x5c,
	0x86, 0xf0, 0x51, 0xe8, 0xa0, 0x0b, 0x50, 0xa7, 0xfe, 0x53, 0x22, 0x40, 0x22, 0xe6, 0xa9, 0xf1,
	0x0e, 0x46, 0xbc, 0x02, 0x8d, 0x90, 0xf4, 0x42, 0x12, 0xed, 0x71, 0xb2, 0x08, 0x7e, 0x41, 0x76,
	0x31, 0x00, 0x8f, 0x08, 0xfd, 0x20, 0x2e, 0xc3, 0x0e, 0x1d, 0x25, 0xa3, 0x98, 0x12, 0x71, 0x0a,
	0xfe, 0xe5, 0xaf, 0x05, 0x80, 0x78, 0x1b, 0x22, 0xf4, 0x3a, 0xd4, 0x6c, 0x37, 0x70, 0x6c, 0xcb,
	0xa6, 0xd2, 0x63, 0x67, 0x14, 0x39, 0x46, 0x9a, 0x31, 0x8c, 0x0d, 0x09, 0x70, 0x14, 0x3d, 0xf3,
	0xc3, 0xae, 0x4e, 0xf7, 0x53, 0x43, 0x14, 0x0c, 0xbd, 0x07, 0xc8, 0x72, 0x6c, 0xe2, 0xd1, 0x8e,
	0x15, 0x92, 0x2e, 0xf1, 0xa8, 0x8d, 0x1d, 0x15, 0x1c, 0x8e, 0x18, 0x3c, 0x2f, 0x06, 0x3c, 0x4a,
	0xf0, 0x8c, 0x4b, 0xf6, 0xcc, 0x2c, 0x55, 0x85, 0x19, 0xcd, 0x25, 0x33, 0xe0, 0xd1, 0xe9, 0x94,
	0x69, 0xb6, 0xa1, 0x22, 0x6a, 0x49, 0x93, 0xac, 0x81, 0xfc, 0xaa, 0x0c, 0xf5, 0xb6, 0x8a, 0xb3,
	0x99, 0x6a, 0xf0, 0x92, 0x20, 0xe3, 0x53, 0x97, 0x15, 0xc0, 0x26, 0x54, 0xa3, 0xbe, 0xeb, 0xe2,
	0x70, 0x20, 0x65, 0x54, 0x35, 0x8f, 0x50, 0x69, 0xc8, 0x55, 0x0f, 0x4b, 0xc7, 0xaa, 0x1e, 0x0e,
	0xe7, 0x05, 0xe5, 0x7c, 0x5e, 0xf0, 0x6e, 0x26, 0x2f, 0xa8, 0xe4, 0x43, 0xcc, 0xd8, 0x67, 0xa4,
	0xed, 0x65, 0x3a, 0x3b, 0x58, 0x87, 0xe9, 0xd4, 0xf5, 0xc4, 0x40, 0x66, 0x6f, 0xad, 0x11, 0x16,
	0x3d, 0xcd, 0xa5, 0x11, 0xa6, 0xbc, 0x44, 0xe6, 0x12, 0xa6, 0x76, 0xc4, 0x4b, 0x98, 0xe7, 0xba,
	0x38, 0xc8, 0x96, 0x68, 0x20, 0x57, 0xa2, 0x49, 0x17, 0x85, 0x1b, 0xc7, 0x2d, 0x0a, 0xa7, 0x0a,
	0xdc, 0xd3, 0x1a, 0xb3, 0x32, 0x54, 0xe0, 0x1e, 0x23, 0xf4, 0x33, 0x93, 0x11, 0xfa, 0x3f, 0x95,
	0xa0, 0x3e, 0x3e, 0x60, 0xf8, 0x4f, 0xfd, 0xeb, 0xdf, 0xa7, 0xfe, 0x35, 0x4e, 0xa0, 0x66, 0x27,
	0x23, 0x50, 0x5f, 0x1b, 0xb0, 0xa8, 0xb3, 0x09, 0x2c, 0x6f, 0x8e, 0xad, 0x82, 0xce, 0x67, 0xc5,
	0x83, 0x58, 0xde, 0x1c, 0x23, 0x4f, 0x9c, 0x6e, 0x7f, 0x0e, 0x90, 0x4a, 0xb5, 0x8f, 0x7d, 0xfb,
	0x95, 0x84, 0xc4, 0x7a, 0xfb, 0xfe, 0x75, 0x19, 0x6a, 0x71, 0x74, 0x3c, 0x0f, 0xa5, 0x4e, 0x52,
	0x7b, 0x29, 0x86, 0xa4, 0x77, 0x22, 0xeb, 0xfe, 0x0a, 0x14, 0x77, 0x09, 0xd5, 0x7a, 0x4a, 0x65,
	0xa1, 0x4d, 0x86, 0x60, 0xc0, 0xa0, 0x4f, 0x65, 0xc1, 0x6d, 0x14, 0x30, 0xe8, 0x53, 0x74, 0x0b,
	0x4a, 0x81, 0x1f, 0x51, 0x79, 0xcb, 0x3b, 0x02, 0xc9, 0x21, 0x68, 0x05, 0x2a, 0x5d, 0xe2, 0x10,
	0x4a, 0xe4, 0xd5, 0xee, 0x08, 0xb0, 0x04, 0xa1, 0x7b, 0x50, 0xf5, 0xf9, 0xaa, 0xb5, 0xc6, 0x39,
	0xc1, 0x2b, 0x14, 0x5b, 0xca, 0x1e, 0xc1, 0x5d, 0x9d, 0x55, 0x4e, 0x2d, 0x85, 0x41, 0x58, 0xca,
	0x12, 0x60, 0x6a, 0xed, 0x49, 0x7d, 0x1c, 0x81, 0x15, 0x18, 0x06, 0xa6, 0x21, 0xb6, 0x48, 0xb3,
	0x31, 0x16, 0xcc, 0x31, 0xc7, 0xb4, 0xc6, 0x59, 0x5f, 0x38, 0xf3, 0x1c, 0xbe, 0xf0, 0xc5, 0xab,
	0xdf, 0x2f, 0x0d, 0x28, 0xf3, 0xab, 0x4f, 0xb4, 0x02, 0xa5, 0x00, 0xd3, 0xbd, 0xc3, 0x1f, 0xb0,
	0x70, 0xd8, 0x29, 0x3c, 0xc2, 0x78, 0x0d, 0xea, 0x5b, 0xa1, 0xed, 0xda, 0xd4, 0xde, 0x27, 0x68,
	0x19, 0xaa, 0x3b, 0xbe, 0xef, 0x10, 0x2c, 0xae, 0x81, 0x6a, 0x1b, 0x53, 0xa6, 0xea, 0x48, 0x74,
	0xf7, 0x33, 0x80, 0x44, 0xd5, 0xd0, 0xfb, 0xe3, 0x75, 0xf7, 0x5c, 0x7e, 0x7d, 0x22, 0xdf, 0xd2,
	0x2b, 0xee, 0x65, 0xa8, 0x27, 0xb6, 0x29, 0xaf, 0xb8, 0xad, 0x1d, 0x98, 0xc9, 0xbc, 0x99, 0x40,
	0x1f, 0x8e, 0x9f, 0xfe, 0x62, 0x6e, 0xfa, 0x74, 0x9e, 0x3a, 0xe2, 0xea, 0xdc, 0x80, 0x46, 0x3a,
	0x13, 0x3e, 0xfc, 0x7e, 0x2c, 0x65, 0xee, 0x0b, 0x47, 0x30, 0xf7, 0x69, 0x4f, 0x5c, 0x1c, 0xf2,
	0xc4, 0x2f, 0xfe, 0xd5, 0xc1, 0x2f, 0x0c, 0x58, 0xd2, 0x87, 0x76, 0xe8, 0x7f, 0x87, 0x82, 0x42,
	0x63, 0x6c, 0x9a, 0xbf, 0x31, 0x95, 0x8d, 0x05, 0x4f, 0xea, 0x13, 0x7e, 0x5e, 0x80, 0x9a, 0x8a,
	0x17, 0x8f, 0xb6, 0xe9, 0xd9, 0xfb, 0xe7, 0xf1, 0xf5, 0xed, 0xd4, 0x19, 0x15, 0x8f, 0x70, 0x46,
	0xf1, 0x2b, 0x98, 0xd2, 0x21, 0xaf, 0x60, 0x5e, 0x7c, 0x06, 0xf4, 0x95, 0x01, 0x0b, 0xba, 0x12,
	0xca, 0x7d, 0x26, 0x46, 0xa2, 0x5b, 0xf7, 0xb8, 0x4c, 0x0d, 0xd9, 0x98, 0x32, 0x63, 0xdc, 0x89,
	0xcf, 0xe8, 0x1f, 0x06, 0x53, 0x50, 0x15, 0xc8, 0xbf, 0x05, 0xd5, 0x2e, 0xe9, 0xe1, 0xbe, 0xa3,
	0xd2, 0xdd, 0x43, 0x4b, 0x36, 0x0a, 0x8f, 0x36, 0x61, 0x46, 0x2d, 0x4a, 0x64, 0x9e, 0x85, 0x11,
	0x0f, 0xd4, 0x74, 0x5c, 0xa6, 0xd5, 0xd0, 0xc3, 0x72, 0xd0, 0x09, 0x5d, 0xe3, 0xfc, 0x1e, 0xa0,
	0x22, 0xab, 0x4b, 0xcb, 0x50, 0xf3, 0xfa, 0x8e, 0x83, 0x77, 0xe4, 0xed, 0x5e, 0xcd, 0x8c, 0xdb,
	0xe8, 0x06, 0xcc, 0x74, 0x6d, 0x26, 0xa0, 0xae, 0xed, 0x61, 0xea, 0x87, 0x32, 0xb6, 0xc8, 0x76,
	0xa2, 0x0b, 0xec, 0x08, 0x70, 0xb7, 0xe3, 0x7b, 0xce, 0x20, 0x51, 0x7f, 0xdc, 0x6d, 0x7b, 0xce,
	0x00, 0x5d, 0x02, 0x78, 0x16, 0xda, 0x94, 0x08, 0xaa, 0x08, 0xd3, 0xeb, 0xbc, 0x87, 0x93, 0xaf,
	0x41, 0xf1, 0xc0, 0x75, 0x64, 0x48, 0x91, 0xa9, 0x56, 0x7f, 0xea, 0x3a, 0x26, 0xa3, 0xe5, 0x93,
	0xcf, 0xca, 0xb1, 0x92, 0xcf, 0x5b, 0x49, 0xcc, 0x5b, 0xd5, 0xd7, 0xc4, 0xe3, 0x20, 0xf7, 0x4e,
	0x2a, 0xb4, 0xae, 0xe9, 0xb1, 0x49, 0x2c, 0x9d, 0xcd, 0x30, 0xea, 0xb9, 0x0c, 0x23, 0xbe, 0x32,
	0x85, 0xf4, 0x95, 0xe9, 0x15, 0x68, 0xb8, 0x7d, 0x87, 0xda, 0x81, 0x43, 0x3a, 0x7e, 0x8f, 0x07,
	0x0f, 0x86, 0x09, 0xaa, 0xab, 0xcd, 0x03, 0x39, 0x17, 0x1f, 0xd8, 0x6e, 0xdf, 0xe5, 0xa1, 0x82,
	0x61, 0xaa, 0x26, 0xba, 0x03, 0xf3, 0xe4, 0xc0, 0x72, 0xfa, 0x91, 0xbd, 0x4f, 0x3a, 0x0a, 0x33,
	0xc3, 0xe7, 0x9d, 0x8b, 0x09, 0x1f, 0x48, 0x30, 0x63, 0x63, 0x7b, 0x1c, 0x32, 0x2b, 0xd9, 0x88,
	0xe6, 0x10, 0x1b, 0x89, 0x39, 0x33, 0xcc, 0x46, 0x82, 0x2f, 0x01, 0xb8, 0xf8, 0xa0, 0xe3, 0x10,
	0x6f, 0x97, 0xee, 0x35, 0xe7, 0xae, 0x1a, 0x37, 0x8b, 0x66, 0xdd, 0xc5, 0x07, 0xef, 0xf3, 0x0e,
	0x4e, 0xb6, 0x3d, 0x45, 0x9e, 0x97, 0x64, 0xdb, 0x93, 0xe4, 0x26, 0x54, 0x03, 0x4c, 0xd9, 0x59,
	0x34, 0x91, 0x08, 0x4a, 0x65, 0x93, 0x89, 0x0c, 0xe3, 0x6b, 0x53, 0xe2, 0x46, 0xcd, 0x05, 0x3e,
	0xae, 0xe6, 0xe2, 0x03, 0x7e, 0x4f, 0xca, 0x89, 0xb6, 0x27, 0x89, 0x8b, 0x92, 0x68, 0x7b, 0x82,
	0x78, 0x0d, 0xa6, 0xfb, 0x9e, 0xfd, 0x45, 0x9f, 0x48, 0xfa, 0x59, 0xbe, 0xf2, 0x86, 0xe8, 0x13,
	0x90, 0x97, 0x60, 0x96, 0x31, 0x4f, 0xb9, 0xce, 0x25, 0xce, 0x64, 0xc6, 0xc5, 0x07, 0x29, 0x3f,
	0xcf, 0x60, 0xb6, 0x97, 0x86, 0x9d, 0x93, 0x30, 0xdb, 0x4b, 0xc1, 0xd2, 0xbe, 0xad, 0xc9, 0xeb,
	0x29, 0x89, 0x6f, 0xbb, 0x0e, 0x25, 0xe2, 0xf5, 0xdd, 0xe6, 0xf9, 0xfc, 0xd3, 0x2b, 0x26, 0x2c,
	0x9c, 0x18, 0x3b, 0xfd, 0xe5, 0x24, 0x5a, 0x47, 0x50, 0xe2, 0x8f, 0x90, 0x2e, 0x88, 0xfc, 0x97,
	0xfd, 0x46, 0xb7, 0xa0, 0x82, 0x1d, 0x87, 0x09, 0xc5, 0xc5, 0x91, 0x37, 0xc3, 0x65, 0xec, 0x38,
	0xed, 0x1e, 0x83, 0xfa, 0x1e, 0x97, 0x9f, 0x4b, 0xa3, 0xa1, 0xbe, 0x47, 0x04, 0x14, 0x7b, 0x03,
	0x06, 0xbd, 0x3c, 0x86, 0xab, 0x37, 0x68, 0xf7, 0xd0, 0x0d, 0x28, 0x7a, 0x3e, 0x6d, 0x5e, 0x19,
	0x59, 0x50, 0x66, 0x64, 0x16, 0xf7, 0x8a, 0x8d, 0xbf, 0x9a, 0xb7, 0xb5, 0xf1, 0x35, 0xb7, 0x29,
	0x30, 0xfc, 0x71, 0x6a, 0xb2, 0xbd, 0xd7, 0x34, 0x8f, 0x53, 0x63, 0xaa, 0x99, 0x42, 0x0e, 0xfb,
	0xca, 0x56, 0xde, 0x57, 0x2e, 0x41, 0xa5, 0xe7, 0x87, 0x2e, 0xa6, 0xcd, 0xeb, 0x9c, 0x28, 0x5b,
	0xe3, 0x4c, 0xe7, 0x8d, 0xc9, 0x98, 0xce, 0x2f, 0x0d, 0x98, 0xcf, 0x65, 0xe7, 0xe8, 0xd5, 0xa1,
	0x8b, 0x4d, 0xcd, 0xfe, 0x6d, 0x4c, 0xc5, 0x39, 0xfc, 0x49, 0x9d, 0xd6, 0x27, 0x50, 0x95, 0xaf,
	0x87, 0x27, 0x1c, 0xad, 0xfe, 0xcc, 0x60, 0x7e, 0x81, 0xd7, 0x9a, 0x6f, 0x66, 0xae, 0x7b, 0xf5,
	0xb5, 0xc8, 0xd3, 0x7a, 0x57, 0xfd, 0x7f, 0xb0, 0xa0, 0x29, 0x77, 0x1d, 0x7d, 0x89, 0xad, 0xbf,
	0x15, 0x60, 0x36, 0x7f, 0x01, 0x92, 0x7a, 0x08, 0x28, 0x74, 0xf0, 0xf0, 0x07, 0x2d, 0xaa, 0x72,
	0x55, 0xcc, 0x55, 0xae, 0x4a, 0x71, 0xe5, 0x6a, 0x49, 0xca, 0x02, 0x91, 0x85, 0x4e, 0xd9, 0x42,
	0xd7, 0x61, 0x66, 0x87, 0xe0, 0x90, 0x84, 0x1d, 0x29, 0xba, 0xe2, 0x29, 0xca, 0xb4, 0xe8, 0x7c,
	0x2c, 0x04, 0xf8, 0x36, 0x94, 0x7a, 0x8e, 0xff, 0x4c, 0xfa, 0xaa, 0x25, 0x6d, 0xdd, 0x3a, 0x32,
	0x39, 0x06, 0xad, 0xc0, 0x02, 0x23, 0x77, 0xec, 0x6e, 0xc7, 0xf2, 0x3d, 0x8f, 0x58, 0x94, 0xdf,
	0x31, 0xd4, 0xc4, 0x3d, 0x05, 0x23, 0x6d, 0x76, 0x1f, 0x09, 0xc2, 0x47, 0xe3, 0x5f, 0x87, 0x4c,
	0xe8, 0x11, 0xe7, 0x2e, 0x9c, 0x19, 0x7a, 0x8d, 0x8d, 0x9e, 0x8c, 0x97, 0xcf, 0x2b, 0xf9, 0x29,
	0xb3, 0x17, 0x4d, 0x7a, 0x39, 0xfd, 0x0b, 0x93, 0x53, 0x9e, 0x2e, 0xab, 0x57, 0x30, 0x46, 0xf2,
	0x0a, 0xe6, 0xf0, 0x53, 0x7c, 0x0b, 0xea, 0xfb, 0xf2, 0xb2, 0x49, 0xdd, 0x33, 0x5c, 0x18, 0x7d,
	0x1f, 0x15, 0x99, 0x09, 0xfa, 0x14, 0xd2, 0x99, 0xbf, 0x1b, 0x4c, 0x56, 0x33, 0xf7, 0x69, 0xb7,
	0xa4, 0x9f, 0x11, 0x7b, 0x96, 0x2d, 0x67, 0xa9, 0x54, 0x57, 0x7a, 0x9b, 0x7b, 0x49, 0x04, 0xab,
	0xbb, 0x79, 0x8d, 0xd1, 0x71, 0xdc, 0x7a, 0x78, 0x7d, 0xe8, 0xc5, 0x7f, 0xf2, 0x6f, 0x0d, 0x26,
	0x38, 0x99, 0x3d, 0x47, 0xab, 0x19, 0xe5, 0xd6, 0xc9, 0x49, 0xe6, 0xce, 0xf0, 0xb4, 0x4c, 0x91,
	0x05, 0x4b, 0x23, 0xee, 0x23, 0x27, 0x78, 0x9b, 0x73, 0x1d, 0x1a, 0xdb, 0x34, 0xb4, 0xbd, 0xdd,
	0xb5, 0x30, 0xc4, 0x03, 0x16, 0x4a, 0xaa, 0xbf, 0x78, 0x62, 0xf1, 0x87, 0xbc, 0xb1, 0xfc, 0xd6,
	0x80, 0xe2, 0x13, 0xbc, 0xab, 0x2d, 0xa6, 0x1f, 0xae, 0x02, 0xb9, 0xa8, 0xba, 0x38, 0xa9, 0x07,
	0xe1, 0x13, 0x92, 0x89, 0xef, 0x0c, 0x28, 0x7e, 0xea, 0x3a, 0xda, 0xcf, 0xbb, 0x08, 0x75, 0xf6,
	0x7f, 0x14, 0x60, 0xe9, 0x3f, 0xeb, 0x66, 0xd2, 0xc1, 0xec, 0x6f, 0x10, 0x92, 0x9e, 0x7d, 0x20,
	0x85, 0x59, 0xb6, 0xd8, 0x28, 0x4c, 0x69, 0x68, 0xef, 0xf4, 0xa9, 0x7a, 0x9d, 0x9d, 0x74, 0xb0,
	0x60, 0xf5, 0x59, 0x88, 0x83, 0x20, 0xbe, 0x2e, 0x50, 0xcd, 0x17, 0xff, 0x4c, 0xec, 0xe1, 0xcb,
	0x30, 0xeb, 0x87, 0xbb, 0x8a, 0x4b, 0x67, 0x7f, 0xf5, 0xe1, 0xb4, 0xfc, 0x1b, 0xb9, 0xad, 0xd0,
	0xa7, 0xfe, 0x96, 0xf1, 0xeb, 0x42, 0xb1, 0xbd, 0xb6, 0xbd, 0x53, 0xe1, 0x7f, 0xe3, 0xb6, 0xfa,
	0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xb5, 0x3a, 0x76, 0x4c, 0x37, 0x00, 0x00,
}
