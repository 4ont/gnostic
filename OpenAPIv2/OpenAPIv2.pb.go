// Code generated by protoc-gen-go.
// source: OpenAPIv2/OpenAPIv2.proto
// DO NOT EDIT!

/*
Package OpenAPIv2 is a generated protocol buffer package.

It is generated from these files:
	OpenAPIv2/OpenAPIv2.proto

It has these top-level messages:
	AdditionalPropertiesItem
	Any
	ApiKeySecurity
	BasicAuthenticationSecurity
	BodyParameter
	Contact
	Default
	Definitions
	Document
	Examples
	ExternalDocs
	FileSchema
	FormDataParameterSubSchema
	Header
	HeaderParameterSubSchema
	Headers
	Info
	ItemsItem
	JsonReference
	License
	NonBodyParameter
	Oauth2AccessCodeSecurity
	Oauth2ApplicationSecurity
	Oauth2ImplicitSecurity
	Oauth2PasswordSecurity
	Oauth2Scopes
	Operation
	Parameter
	ParameterDefinitions
	ParametersItem
	PathItem
	PathParameterSubSchema
	Paths
	PrimitivesItems
	Properties
	QueryParameterSubSchema
	Response
	ResponseDefinitions
	ResponseValue
	Responses
	Schema
	SchemaItem
	SecurityDefinitions
	SecurityDefinitionsItem
	SecurityRequirement
	StringArray
	Tag
	TypeItem
	VendorExtension
	Xml
*/
package OpenAPIv2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AdditionalPropertiesItem struct {
	Boolean bool    `protobuf:"varint,1,opt,name=boolean" json:"boolean,omitempty"`
	Schema  *Schema `protobuf:"bytes,2,opt,name=schema" json:"schema,omitempty"`
}

func (m *AdditionalPropertiesItem) Reset()                    { *m = AdditionalPropertiesItem{} }
func (m *AdditionalPropertiesItem) String() string            { return proto.CompactTextString(m) }
func (*AdditionalPropertiesItem) ProtoMessage()               {}
func (*AdditionalPropertiesItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AdditionalPropertiesItem) GetSchema() *Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

type Any struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *Any) Reset()                    { *m = Any{} }
func (m *Any) String() string            { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()               {}
func (*Any) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ApiKeySecurity struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	In              string          `protobuf:"bytes,2,opt,name=in" json:"in,omitempty"`
	Name            string          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Type            string          `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,5,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ApiKeySecurity) Reset()                    { *m = ApiKeySecurity{} }
func (m *ApiKeySecurity) String() string            { return proto.CompactTextString(m) }
func (*ApiKeySecurity) ProtoMessage()               {}
func (*ApiKeySecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApiKeySecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type BasicAuthenticationSecurity struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Type            string          `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,3,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BasicAuthenticationSecurity) Reset()                    { *m = BasicAuthenticationSecurity{} }
func (m *BasicAuthenticationSecurity) String() string            { return proto.CompactTextString(m) }
func (*BasicAuthenticationSecurity) ProtoMessage()               {}
func (*BasicAuthenticationSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BasicAuthenticationSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type BodyParameter struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	In              string          `protobuf:"bytes,2,opt,name=in" json:"in,omitempty"`
	Name            string          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Required        bool            `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`
	Schema          *Schema         `protobuf:"bytes,5,opt,name=schema" json:"schema,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BodyParameter) Reset()                    { *m = BodyParameter{} }
func (m *BodyParameter) String() string            { return proto.CompactTextString(m) }
func (*BodyParameter) ProtoMessage()               {}
func (*BodyParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BodyParameter) GetSchema() *Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *BodyParameter) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Contact struct {
	Email           string          `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Name            string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Url             string          `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,4,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Contact) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Default struct {
	AdditionalProperties map[string]*Any `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Default) Reset()                    { *m = Default{} }
func (m *Default) String() string            { return proto.CompactTextString(m) }
func (*Default) ProtoMessage()               {}
func (*Default) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Default) GetAdditionalProperties() map[string]*Any {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Definitions struct {
	AdditionalProperties map[string]*Schema `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Definitions) Reset()                    { *m = Definitions{} }
func (m *Definitions) String() string            { return proto.CompactTextString(m) }
func (*Definitions) ProtoMessage()               {}
func (*Definitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Definitions) GetAdditionalProperties() map[string]*Schema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Document struct {
	BasePath            string                 `protobuf:"bytes,1,opt,name=base_path,json=basePath" json:"base_path,omitempty"`
	Consumes            []string               `protobuf:"bytes,2,rep,name=consumes" json:"consumes,omitempty"`
	Definitions         *Definitions           `protobuf:"bytes,3,opt,name=definitions" json:"definitions,omitempty"`
	ExternalDocs        *ExternalDocs          `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Host                string                 `protobuf:"bytes,5,opt,name=host" json:"host,omitempty"`
	Info                *Info                  `protobuf:"bytes,6,opt,name=info" json:"info,omitempty"`
	Parameters          *ParameterDefinitions  `protobuf:"bytes,7,opt,name=parameters" json:"parameters,omitempty"`
	Paths               *Paths                 `protobuf:"bytes,8,opt,name=paths" json:"paths,omitempty"`
	Produces            []string               `protobuf:"bytes,9,rep,name=produces" json:"produces,omitempty"`
	Responses           *ResponseDefinitions   `protobuf:"bytes,10,opt,name=responses" json:"responses,omitempty"`
	Schemes             []string               `protobuf:"bytes,11,rep,name=schemes" json:"schemes,omitempty"`
	Security            []*SecurityRequirement `protobuf:"bytes,12,rep,name=security" json:"security,omitempty"`
	SecurityDefinitions *SecurityDefinitions   `protobuf:"bytes,13,opt,name=security_definitions,json=securityDefinitions" json:"security_definitions,omitempty"`
	Swagger             string                 `protobuf:"bytes,14,opt,name=swagger" json:"swagger,omitempty"`
	Tags                []*Tag                 `protobuf:"bytes,15,rep,name=tags" json:"tags,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Document) GetDefinitions() *Definitions {
	if m != nil {
		return m.Definitions
	}
	return nil
}

func (m *Document) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Document) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Document) GetParameters() *ParameterDefinitions {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Document) GetPaths() *Paths {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *Document) GetResponses() *ResponseDefinitions {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Document) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Document) GetSecurityDefinitions() *SecurityDefinitions {
	if m != nil {
		return m.SecurityDefinitions
	}
	return nil
}

func (m *Document) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Examples struct {
	AdditionalProperties map[string]*Any `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Examples) Reset()                    { *m = Examples{} }
func (m *Examples) String() string            { return proto.CompactTextString(m) }
func (*Examples) ProtoMessage()               {}
func (*Examples) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Examples) GetAdditionalProperties() map[string]*Any {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type ExternalDocs struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Url             string          `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,3,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ExternalDocs) Reset()                    { *m = ExternalDocs{} }
func (m *ExternalDocs) String() string            { return proto.CompactTextString(m) }
func (*ExternalDocs) ProtoMessage()               {}
func (*ExternalDocs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ExternalDocs) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type FileSchema struct {
	Default         *Any            `protobuf:"bytes,1,opt,name=default" json:"default,omitempty"`
	Description     string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Example         *Any            `protobuf:"bytes,3,opt,name=example" json:"example,omitempty"`
	ExternalDocs    *ExternalDocs   `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Format          string          `protobuf:"bytes,5,opt,name=format" json:"format,omitempty"`
	ReadOnly        bool            `protobuf:"varint,6,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	Required        []string        `protobuf:"bytes,7,rep,name=required" json:"required,omitempty"`
	Title           string          `protobuf:"bytes,8,opt,name=title" json:"title,omitempty"`
	Type            string          `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,10,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FileSchema) Reset()                    { *m = FileSchema{} }
func (m *FileSchema) String() string            { return proto.CompactTextString(m) }
func (*FileSchema) ProtoMessage()               {}
func (*FileSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *FileSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *FileSchema) GetExample() *Any {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *FileSchema) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *FileSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type FormDataParameterSubSchema struct {
	AllowEmptyValue  bool             `protobuf:"varint,1,opt,name=allow_empty_value,json=allowEmptyValue" json:"allow_empty_value,omitempty"`
	CollectionFormat string           `protobuf:"bytes,2,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Default          *Any             `protobuf:"bytes,3,opt,name=default" json:"default,omitempty"`
	Description      string           `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Enum             []*Any           `protobuf:"bytes,5,rep,name=enum" json:"enum,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,6,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,7,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Format           string           `protobuf:"bytes,8,opt,name=format" json:"format,omitempty"`
	In               string           `protobuf:"bytes,9,opt,name=in" json:"in,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,10,opt,name=items" json:"items,omitempty"`
	MaxItems         int64            `protobuf:"varint,11,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength        int64            `protobuf:"varint,12,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Maximum          float64          `protobuf:"fixed64,13,opt,name=maximum" json:"maximum,omitempty"`
	MinItems         int64            `protobuf:"varint,14,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinLength        int64            `protobuf:"varint,15,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Minimum          float64          `protobuf:"fixed64,16,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,17,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Name             string           `protobuf:"bytes,18,opt,name=name" json:"name,omitempty"`
	Pattern          string           `protobuf:"bytes,19,opt,name=pattern" json:"pattern,omitempty"`
	Required         bool             `protobuf:"varint,20,opt,name=required" json:"required,omitempty"`
	Type             string           `protobuf:"bytes,21,opt,name=type" json:"type,omitempty"`
	UniqueItems      bool             `protobuf:"varint,22,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,23,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FormDataParameterSubSchema) Reset()                    { *m = FormDataParameterSubSchema{} }
func (m *FormDataParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*FormDataParameterSubSchema) ProtoMessage()               {}
func (*FormDataParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *FormDataParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *FormDataParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *FormDataParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FormDataParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Header struct {
	CollectionFormat string           `protobuf:"bytes,1,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Default          *Any             `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Description      string           `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Enum             []*Any           `protobuf:"bytes,4,rep,name=enum" json:"enum,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,5,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,6,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Format           string           `protobuf:"bytes,7,opt,name=format" json:"format,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,8,opt,name=items" json:"items,omitempty"`
	MaxItems         int64            `protobuf:"varint,9,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength        int64            `protobuf:"varint,10,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Maximum          float64          `protobuf:"fixed64,11,opt,name=maximum" json:"maximum,omitempty"`
	MinItems         int64            `protobuf:"varint,12,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinLength        int64            `protobuf:"varint,13,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Minimum          float64          `protobuf:"fixed64,14,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,15,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Pattern          string           `protobuf:"bytes,16,opt,name=pattern" json:"pattern,omitempty"`
	Type             string           `protobuf:"bytes,17,opt,name=type" json:"type,omitempty"`
	UniqueItems      bool             `protobuf:"varint,18,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,19,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Header) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Header) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Header) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Header) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type HeaderParameterSubSchema struct {
	CollectionFormat string           `protobuf:"bytes,1,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Default          *Any             `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Description      string           `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Enum             []*Any           `protobuf:"bytes,4,rep,name=enum" json:"enum,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,5,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,6,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Format           string           `protobuf:"bytes,7,opt,name=format" json:"format,omitempty"`
	In               string           `protobuf:"bytes,8,opt,name=in" json:"in,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,9,opt,name=items" json:"items,omitempty"`
	MaxItems         int64            `protobuf:"varint,10,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength        int64            `protobuf:"varint,11,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Maximum          float64          `protobuf:"fixed64,12,opt,name=maximum" json:"maximum,omitempty"`
	MinItems         int64            `protobuf:"varint,13,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinLength        int64            `protobuf:"varint,14,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Minimum          float64          `protobuf:"fixed64,15,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,16,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Name             string           `protobuf:"bytes,17,opt,name=name" json:"name,omitempty"`
	Pattern          string           `protobuf:"bytes,18,opt,name=pattern" json:"pattern,omitempty"`
	Required         bool             `protobuf:"varint,19,opt,name=required" json:"required,omitempty"`
	Type             string           `protobuf:"bytes,20,opt,name=type" json:"type,omitempty"`
	UniqueItems      bool             `protobuf:"varint,21,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,22,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *HeaderParameterSubSchema) Reset()                    { *m = HeaderParameterSubSchema{} }
func (m *HeaderParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*HeaderParameterSubSchema) ProtoMessage()               {}
func (*HeaderParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *HeaderParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *HeaderParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *HeaderParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *HeaderParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Headers struct {
	AdditionalProperties map[string]*Header `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Headers) Reset()                    { *m = Headers{} }
func (m *Headers) String() string            { return proto.CompactTextString(m) }
func (*Headers) ProtoMessage()               {}
func (*Headers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Headers) GetAdditionalProperties() map[string]*Header {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Info struct {
	Contact         *Contact        `protobuf:"bytes,1,opt,name=contact" json:"contact,omitempty"`
	Description     string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	License         *License        `protobuf:"bytes,3,opt,name=license" json:"license,omitempty"`
	TermsOfService  string          `protobuf:"bytes,4,opt,name=terms_of_service,json=termsOfService" json:"terms_of_service,omitempty"`
	Title           string          `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Version         string          `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Info) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Info) GetLicense() *License {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *Info) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type ItemsItem struct {
	Schema []*Schema `protobuf:"bytes,1,rep,name=schema" json:"schema,omitempty"`
}

func (m *ItemsItem) Reset()                    { *m = ItemsItem{} }
func (m *ItemsItem) String() string            { return proto.CompactTextString(m) }
func (*ItemsItem) ProtoMessage()               {}
func (*ItemsItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ItemsItem) GetSchema() []*Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

type JsonReference struct {
	XRef string `protobuf:"bytes,1,opt,name=_ref,json=ref" json:"_ref,omitempty"`
}

func (m *JsonReference) Reset()                    { *m = JsonReference{} }
func (m *JsonReference) String() string            { return proto.CompactTextString(m) }
func (*JsonReference) ProtoMessage()               {}
func (*JsonReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type License struct {
	Name            string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url             string          `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,3,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *License) Reset()                    { *m = License{} }
func (m *License) String() string            { return proto.CompactTextString(m) }
func (*License) ProtoMessage()               {}
func (*License) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *License) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type NonBodyParameter struct {
	// Types that are valid to be assigned to Oneof:
	//	*NonBodyParameter_FormDataParameterSubSchema
	//	*NonBodyParameter_HeaderParameterSubSchema
	//	*NonBodyParameter_PathParameterSubSchema
	//	*NonBodyParameter_QueryParameterSubSchema
	Oneof isNonBodyParameter_Oneof `protobuf_oneof:"oneof"`
}

func (m *NonBodyParameter) Reset()                    { *m = NonBodyParameter{} }
func (m *NonBodyParameter) String() string            { return proto.CompactTextString(m) }
func (*NonBodyParameter) ProtoMessage()               {}
func (*NonBodyParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type isNonBodyParameter_Oneof interface {
	isNonBodyParameter_Oneof()
}

type NonBodyParameter_FormDataParameterSubSchema struct {
	FormDataParameterSubSchema *FormDataParameterSubSchema `protobuf:"bytes,1,opt,name=form_data_parameter_sub_schema,json=formDataParameterSubSchema,oneof"`
}
type NonBodyParameter_HeaderParameterSubSchema struct {
	HeaderParameterSubSchema *HeaderParameterSubSchema `protobuf:"bytes,2,opt,name=header_parameter_sub_schema,json=headerParameterSubSchema,oneof"`
}
type NonBodyParameter_PathParameterSubSchema struct {
	PathParameterSubSchema *PathParameterSubSchema `protobuf:"bytes,3,opt,name=path_parameter_sub_schema,json=pathParameterSubSchema,oneof"`
}
type NonBodyParameter_QueryParameterSubSchema struct {
	QueryParameterSubSchema *QueryParameterSubSchema `protobuf:"bytes,4,opt,name=query_parameter_sub_schema,json=queryParameterSubSchema,oneof"`
}

func (*NonBodyParameter_FormDataParameterSubSchema) isNonBodyParameter_Oneof() {}
func (*NonBodyParameter_HeaderParameterSubSchema) isNonBodyParameter_Oneof()   {}
func (*NonBodyParameter_PathParameterSubSchema) isNonBodyParameter_Oneof()     {}
func (*NonBodyParameter_QueryParameterSubSchema) isNonBodyParameter_Oneof()    {}

func (m *NonBodyParameter) GetOneof() isNonBodyParameter_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *NonBodyParameter) GetFormDataParameterSubSchema() *FormDataParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_FormDataParameterSubSchema); ok {
		return x.FormDataParameterSubSchema
	}
	return nil
}

func (m *NonBodyParameter) GetHeaderParameterSubSchema() *HeaderParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_HeaderParameterSubSchema); ok {
		return x.HeaderParameterSubSchema
	}
	return nil
}

func (m *NonBodyParameter) GetPathParameterSubSchema() *PathParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_PathParameterSubSchema); ok {
		return x.PathParameterSubSchema
	}
	return nil
}

func (m *NonBodyParameter) GetQueryParameterSubSchema() *QueryParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_QueryParameterSubSchema); ok {
		return x.QueryParameterSubSchema
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NonBodyParameter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NonBodyParameter_OneofMarshaler, _NonBodyParameter_OneofUnmarshaler, _NonBodyParameter_OneofSizer, []interface{}{
		(*NonBodyParameter_FormDataParameterSubSchema)(nil),
		(*NonBodyParameter_HeaderParameterSubSchema)(nil),
		(*NonBodyParameter_PathParameterSubSchema)(nil),
		(*NonBodyParameter_QueryParameterSubSchema)(nil),
	}
}

func _NonBodyParameter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NonBodyParameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *NonBodyParameter_FormDataParameterSubSchema:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FormDataParameterSubSchema); err != nil {
			return err
		}
	case *NonBodyParameter_HeaderParameterSubSchema:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeaderParameterSubSchema); err != nil {
			return err
		}
	case *NonBodyParameter_PathParameterSubSchema:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PathParameterSubSchema); err != nil {
			return err
		}
	case *NonBodyParameter_QueryParameterSubSchema:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QueryParameterSubSchema); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NonBodyParameter.Oneof has unexpected type %T", x)
	}
	return nil
}

func _NonBodyParameter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NonBodyParameter)
	switch tag {
	case 1: // oneof.form_data_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FormDataParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_FormDataParameterSubSchema{msg}
		return true, err
	case 2: // oneof.header_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeaderParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_HeaderParameterSubSchema{msg}
		return true, err
	case 3: // oneof.path_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PathParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_PathParameterSubSchema{msg}
		return true, err
	case 4: // oneof.query_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QueryParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_QueryParameterSubSchema{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NonBodyParameter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NonBodyParameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *NonBodyParameter_FormDataParameterSubSchema:
		s := proto.Size(x.FormDataParameterSubSchema)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NonBodyParameter_HeaderParameterSubSchema:
		s := proto.Size(x.HeaderParameterSubSchema)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NonBodyParameter_PathParameterSubSchema:
		s := proto.Size(x.PathParameterSubSchema)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NonBodyParameter_QueryParameterSubSchema:
		s := proto.Size(x.QueryParameterSubSchema)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Oauth2AccessCodeSecurity struct {
	AuthorizationUrl string          `protobuf:"bytes,1,opt,name=authorization_url,json=authorizationUrl" json:"authorization_url,omitempty"`
	Description      string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Flow             string          `protobuf:"bytes,3,opt,name=flow" json:"flow,omitempty"`
	Scopes           *Oauth2Scopes   `protobuf:"bytes,4,opt,name=scopes" json:"scopes,omitempty"`
	TokenUrl         string          `protobuf:"bytes,5,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	Type             string          `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	VendorExtension  map[string]*Any `protobuf:"bytes,7,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2AccessCodeSecurity) Reset()                    { *m = Oauth2AccessCodeSecurity{} }
func (m *Oauth2AccessCodeSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2AccessCodeSecurity) ProtoMessage()               {}
func (*Oauth2AccessCodeSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Oauth2AccessCodeSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2AccessCodeSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2ApplicationSecurity struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Flow            string          `protobuf:"bytes,2,opt,name=flow" json:"flow,omitempty"`
	Scopes          *Oauth2Scopes   `protobuf:"bytes,3,opt,name=scopes" json:"scopes,omitempty"`
	TokenUrl        string          `protobuf:"bytes,4,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	Type            string          `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2ApplicationSecurity) Reset()                    { *m = Oauth2ApplicationSecurity{} }
func (m *Oauth2ApplicationSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2ApplicationSecurity) ProtoMessage()               {}
func (*Oauth2ApplicationSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Oauth2ApplicationSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2ApplicationSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2ImplicitSecurity struct {
	AuthorizationUrl string          `protobuf:"bytes,1,opt,name=authorization_url,json=authorizationUrl" json:"authorization_url,omitempty"`
	Description      string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Flow             string          `protobuf:"bytes,3,opt,name=flow" json:"flow,omitempty"`
	Scopes           *Oauth2Scopes   `protobuf:"bytes,4,opt,name=scopes" json:"scopes,omitempty"`
	Type             string          `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	VendorExtension  map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2ImplicitSecurity) Reset()                    { *m = Oauth2ImplicitSecurity{} }
func (m *Oauth2ImplicitSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2ImplicitSecurity) ProtoMessage()               {}
func (*Oauth2ImplicitSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Oauth2ImplicitSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2ImplicitSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2PasswordSecurity struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Flow            string          `protobuf:"bytes,2,opt,name=flow" json:"flow,omitempty"`
	Scopes          *Oauth2Scopes   `protobuf:"bytes,3,opt,name=scopes" json:"scopes,omitempty"`
	TokenUrl        string          `protobuf:"bytes,4,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	Type            string          `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2PasswordSecurity) Reset()                    { *m = Oauth2PasswordSecurity{} }
func (m *Oauth2PasswordSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2PasswordSecurity) ProtoMessage()               {}
func (*Oauth2PasswordSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Oauth2PasswordSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2PasswordSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2Scopes struct {
	AdditionalProperties map[string]string `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2Scopes) Reset()                    { *m = Oauth2Scopes{} }
func (m *Oauth2Scopes) String() string            { return proto.CompactTextString(m) }
func (*Oauth2Scopes) ProtoMessage()               {}
func (*Oauth2Scopes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Oauth2Scopes) GetAdditionalProperties() map[string]string {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Operation struct {
	Consumes        []string               `protobuf:"bytes,1,rep,name=consumes" json:"consumes,omitempty"`
	Deprecated      bool                   `protobuf:"varint,2,opt,name=deprecated" json:"deprecated,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDocs    *ExternalDocs          `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	OperationId     string                 `protobuf:"bytes,5,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Parameters      []*ParametersItem      `protobuf:"bytes,6,rep,name=parameters" json:"parameters,omitempty"`
	Produces        []string               `protobuf:"bytes,7,rep,name=produces" json:"produces,omitempty"`
	Responses       *Responses             `protobuf:"bytes,8,opt,name=responses" json:"responses,omitempty"`
	Schemes         []string               `protobuf:"bytes,9,rep,name=schemes" json:"schemes,omitempty"`
	Security        []*SecurityRequirement `protobuf:"bytes,10,rep,name=security" json:"security,omitempty"`
	Summary         string                 `protobuf:"bytes,11,opt,name=summary" json:"summary,omitempty"`
	Tags            []string               `protobuf:"bytes,12,rep,name=tags" json:"tags,omitempty"`
	VendorExtension map[string]*Any        `protobuf:"bytes,13,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *Operation) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Operation) GetParameters() []*ParametersItem {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Operation) GetResponses() *Responses {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Operation) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Operation) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Parameter struct {
	// Types that are valid to be assigned to Oneof:
	//	*Parameter_BodyParameter
	//	*Parameter_NonBodyParameter
	Oneof isParameter_Oneof `protobuf_oneof:"oneof"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type isParameter_Oneof interface {
	isParameter_Oneof()
}

type Parameter_BodyParameter struct {
	BodyParameter *BodyParameter `protobuf:"bytes,1,opt,name=body_parameter,json=bodyParameter,oneof"`
}
type Parameter_NonBodyParameter struct {
	NonBodyParameter *NonBodyParameter `protobuf:"bytes,2,opt,name=non_body_parameter,json=nonBodyParameter,oneof"`
}

func (*Parameter_BodyParameter) isParameter_Oneof()    {}
func (*Parameter_NonBodyParameter) isParameter_Oneof() {}

func (m *Parameter) GetOneof() isParameter_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *Parameter) GetBodyParameter() *BodyParameter {
	if x, ok := m.GetOneof().(*Parameter_BodyParameter); ok {
		return x.BodyParameter
	}
	return nil
}

func (m *Parameter) GetNonBodyParameter() *NonBodyParameter {
	if x, ok := m.GetOneof().(*Parameter_NonBodyParameter); ok {
		return x.NonBodyParameter
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Parameter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Parameter_OneofMarshaler, _Parameter_OneofUnmarshaler, _Parameter_OneofSizer, []interface{}{
		(*Parameter_BodyParameter)(nil),
		(*Parameter_NonBodyParameter)(nil),
	}
}

func _Parameter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Parameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *Parameter_BodyParameter:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BodyParameter); err != nil {
			return err
		}
	case *Parameter_NonBodyParameter:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NonBodyParameter); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Parameter.Oneof has unexpected type %T", x)
	}
	return nil
}

func _Parameter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Parameter)
	switch tag {
	case 1: // oneof.body_parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BodyParameter)
		err := b.DecodeMessage(msg)
		m.Oneof = &Parameter_BodyParameter{msg}
		return true, err
	case 2: // oneof.non_body_parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NonBodyParameter)
		err := b.DecodeMessage(msg)
		m.Oneof = &Parameter_NonBodyParameter{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Parameter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Parameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *Parameter_BodyParameter:
		s := proto.Size(x.BodyParameter)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameter_NonBodyParameter:
		s := proto.Size(x.NonBodyParameter)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ParameterDefinitions struct {
	AdditionalProperties map[string]*Parameter `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ParameterDefinitions) Reset()                    { *m = ParameterDefinitions{} }
func (m *ParameterDefinitions) String() string            { return proto.CompactTextString(m) }
func (*ParameterDefinitions) ProtoMessage()               {}
func (*ParameterDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ParameterDefinitions) GetAdditionalProperties() map[string]*Parameter {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type ParametersItem struct {
	// Types that are valid to be assigned to Oneof:
	//	*ParametersItem_JsonReference
	//	*ParametersItem_Parameter
	Oneof isParametersItem_Oneof `protobuf_oneof:"oneof"`
}

func (m *ParametersItem) Reset()                    { *m = ParametersItem{} }
func (m *ParametersItem) String() string            { return proto.CompactTextString(m) }
func (*ParametersItem) ProtoMessage()               {}
func (*ParametersItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type isParametersItem_Oneof interface {
	isParametersItem_Oneof()
}

type ParametersItem_JsonReference struct {
	JsonReference *JsonReference `protobuf:"bytes,1,opt,name=json_reference,json=jsonReference,oneof"`
}
type ParametersItem_Parameter struct {
	Parameter *Parameter `protobuf:"bytes,2,opt,name=parameter,oneof"`
}

func (*ParametersItem_JsonReference) isParametersItem_Oneof() {}
func (*ParametersItem_Parameter) isParametersItem_Oneof()     {}

func (m *ParametersItem) GetOneof() isParametersItem_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ParametersItem) GetJsonReference() *JsonReference {
	if x, ok := m.GetOneof().(*ParametersItem_JsonReference); ok {
		return x.JsonReference
	}
	return nil
}

func (m *ParametersItem) GetParameter() *Parameter {
	if x, ok := m.GetOneof().(*ParametersItem_Parameter); ok {
		return x.Parameter
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ParametersItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ParametersItem_OneofMarshaler, _ParametersItem_OneofUnmarshaler, _ParametersItem_OneofSizer, []interface{}{
		(*ParametersItem_JsonReference)(nil),
		(*ParametersItem_Parameter)(nil),
	}
}

func _ParametersItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ParametersItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *ParametersItem_JsonReference:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JsonReference); err != nil {
			return err
		}
	case *ParametersItem_Parameter:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameter); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ParametersItem.Oneof has unexpected type %T", x)
	}
	return nil
}

func _ParametersItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ParametersItem)
	switch tag {
	case 1: // oneof.json_reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JsonReference)
		err := b.DecodeMessage(msg)
		m.Oneof = &ParametersItem_JsonReference{msg}
		return true, err
	case 2: // oneof.parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Parameter)
		err := b.DecodeMessage(msg)
		m.Oneof = &ParametersItem_Parameter{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ParametersItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ParametersItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *ParametersItem_JsonReference:
		s := proto.Size(x.JsonReference)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParametersItem_Parameter:
		s := proto.Size(x.Parameter)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PathItem struct {
	XRef            string            `protobuf:"bytes,1,opt,name=_ref,json=ref" json:"_ref,omitempty"`
	Delete          *Operation        `protobuf:"bytes,2,opt,name=delete" json:"delete,omitempty"`
	Get             *Operation        `protobuf:"bytes,3,opt,name=get" json:"get,omitempty"`
	Head            *Operation        `protobuf:"bytes,4,opt,name=head" json:"head,omitempty"`
	Options         *Operation        `protobuf:"bytes,5,opt,name=options" json:"options,omitempty"`
	Parameters      []*ParametersItem `protobuf:"bytes,6,rep,name=parameters" json:"parameters,omitempty"`
	Patch           *Operation        `protobuf:"bytes,7,opt,name=patch" json:"patch,omitempty"`
	Post            *Operation        `protobuf:"bytes,8,opt,name=post" json:"post,omitempty"`
	Put             *Operation        `protobuf:"bytes,9,opt,name=put" json:"put,omitempty"`
	VendorExtension map[string]*Any   `protobuf:"bytes,10,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PathItem) Reset()                    { *m = PathItem{} }
func (m *PathItem) String() string            { return proto.CompactTextString(m) }
func (*PathItem) ProtoMessage()               {}
func (*PathItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *PathItem) GetDelete() *Operation {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *PathItem) GetGet() *Operation {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *PathItem) GetHead() *Operation {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *PathItem) GetOptions() *Operation {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *PathItem) GetParameters() []*ParametersItem {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *PathItem) GetPatch() *Operation {
	if m != nil {
		return m.Patch
	}
	return nil
}

func (m *PathItem) GetPost() *Operation {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *PathItem) GetPut() *Operation {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *PathItem) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type PathParameterSubSchema struct {
	CollectionFormat string           `protobuf:"bytes,1,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Default          *Any             `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Description      string           `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Enum             []*Any           `protobuf:"bytes,4,rep,name=enum" json:"enum,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,5,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,6,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Format           string           `protobuf:"bytes,7,opt,name=format" json:"format,omitempty"`
	In               string           `protobuf:"bytes,8,opt,name=in" json:"in,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,9,opt,name=items" json:"items,omitempty"`
	MaxItems         int64            `protobuf:"varint,10,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength        int64            `protobuf:"varint,11,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Maximum          float64          `protobuf:"fixed64,12,opt,name=maximum" json:"maximum,omitempty"`
	MinItems         int64            `protobuf:"varint,13,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinLength        int64            `protobuf:"varint,14,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Minimum          float64          `protobuf:"fixed64,15,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,16,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Name             string           `protobuf:"bytes,17,opt,name=name" json:"name,omitempty"`
	Pattern          string           `protobuf:"bytes,18,opt,name=pattern" json:"pattern,omitempty"`
	Required         bool             `protobuf:"varint,19,opt,name=required" json:"required,omitempty"`
	Type             string           `protobuf:"bytes,20,opt,name=type" json:"type,omitempty"`
	UniqueItems      bool             `protobuf:"varint,21,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,22,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PathParameterSubSchema) Reset()                    { *m = PathParameterSubSchema{} }
func (m *PathParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*PathParameterSubSchema) ProtoMessage()               {}
func (*PathParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *PathParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *PathParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *PathParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *PathParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Paths struct {
	Path            map[string]*PathItem `protobuf:"bytes,1,rep,name=path" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	VendorExtension map[string]*Any      `protobuf:"bytes,2,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Paths) Reset()                    { *m = Paths{} }
func (m *Paths) String() string            { return proto.CompactTextString(m) }
func (*Paths) ProtoMessage()               {}
func (*Paths) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *Paths) GetPath() map[string]*PathItem {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Paths) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type PrimitivesItems struct {
	CollectionFormat string           `protobuf:"bytes,1,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Default          *Any             `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Enum             []*Any           `protobuf:"bytes,3,rep,name=enum" json:"enum,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,4,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,5,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Format           string           `protobuf:"bytes,6,opt,name=format" json:"format,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,7,opt,name=items" json:"items,omitempty"`
	MaxItems         int64            `protobuf:"varint,8,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength        int64            `protobuf:"varint,9,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Maximum          float64          `protobuf:"fixed64,10,opt,name=maximum" json:"maximum,omitempty"`
	MinItems         int64            `protobuf:"varint,11,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinLength        int64            `protobuf:"varint,12,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Minimum          float64          `protobuf:"fixed64,13,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,14,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Pattern          string           `protobuf:"bytes,15,opt,name=pattern" json:"pattern,omitempty"`
	Type             string           `protobuf:"bytes,16,opt,name=type" json:"type,omitempty"`
	UniqueItems      bool             `protobuf:"varint,17,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,18,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PrimitivesItems) Reset()                    { *m = PrimitivesItems{} }
func (m *PrimitivesItems) String() string            { return proto.CompactTextString(m) }
func (*PrimitivesItems) ProtoMessage()               {}
func (*PrimitivesItems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *PrimitivesItems) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *PrimitivesItems) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *PrimitivesItems) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *PrimitivesItems) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Properties struct {
	AdditionalProperties map[string]*Schema `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Properties) Reset()                    { *m = Properties{} }
func (m *Properties) String() string            { return proto.CompactTextString(m) }
func (*Properties) ProtoMessage()               {}
func (*Properties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *Properties) GetAdditionalProperties() map[string]*Schema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type QueryParameterSubSchema struct {
	AllowEmptyValue  bool             `protobuf:"varint,1,opt,name=allow_empty_value,json=allowEmptyValue" json:"allow_empty_value,omitempty"`
	CollectionFormat string           `protobuf:"bytes,2,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Default          *Any             `protobuf:"bytes,3,opt,name=default" json:"default,omitempty"`
	Description      string           `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Enum             []*Any           `protobuf:"bytes,5,rep,name=enum" json:"enum,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,6,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,7,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Format           string           `protobuf:"bytes,8,opt,name=format" json:"format,omitempty"`
	In               string           `protobuf:"bytes,9,opt,name=in" json:"in,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,10,opt,name=items" json:"items,omitempty"`
	MaxItems         int64            `protobuf:"varint,11,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength        int64            `protobuf:"varint,12,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Maximum          float64          `protobuf:"fixed64,13,opt,name=maximum" json:"maximum,omitempty"`
	MinItems         int64            `protobuf:"varint,14,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinLength        int64            `protobuf:"varint,15,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Minimum          float64          `protobuf:"fixed64,16,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,17,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Name             string           `protobuf:"bytes,18,opt,name=name" json:"name,omitempty"`
	Pattern          string           `protobuf:"bytes,19,opt,name=pattern" json:"pattern,omitempty"`
	Required         bool             `protobuf:"varint,20,opt,name=required" json:"required,omitempty"`
	Type             string           `protobuf:"bytes,21,opt,name=type" json:"type,omitempty"`
	UniqueItems      bool             `protobuf:"varint,22,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,23,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *QueryParameterSubSchema) Reset()                    { *m = QueryParameterSubSchema{} }
func (m *QueryParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*QueryParameterSubSchema) ProtoMessage()               {}
func (*QueryParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *QueryParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *QueryParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *QueryParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *QueryParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Response struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Examples        *Examples       `protobuf:"bytes,2,opt,name=examples" json:"examples,omitempty"`
	Headers         *Headers        `protobuf:"bytes,3,opt,name=headers" json:"headers,omitempty"`
	Schema          *SchemaItem     `protobuf:"bytes,4,opt,name=schema" json:"schema,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,5,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *Response) GetExamples() *Examples {
	if m != nil {
		return m.Examples
	}
	return nil
}

func (m *Response) GetHeaders() *Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Response) GetSchema() *SchemaItem {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *Response) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type ResponseDefinitions struct {
	AdditionalProperties map[string]*Response `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResponseDefinitions) Reset()                    { *m = ResponseDefinitions{} }
func (m *ResponseDefinitions) String() string            { return proto.CompactTextString(m) }
func (*ResponseDefinitions) ProtoMessage()               {}
func (*ResponseDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ResponseDefinitions) GetAdditionalProperties() map[string]*Response {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type ResponseValue struct {
	// Types that are valid to be assigned to Oneof:
	//	*ResponseValue_JsonReference
	//	*ResponseValue_Response
	Oneof isResponseValue_Oneof `protobuf_oneof:"oneof"`
}

func (m *ResponseValue) Reset()                    { *m = ResponseValue{} }
func (m *ResponseValue) String() string            { return proto.CompactTextString(m) }
func (*ResponseValue) ProtoMessage()               {}
func (*ResponseValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

type isResponseValue_Oneof interface {
	isResponseValue_Oneof()
}

type ResponseValue_JsonReference struct {
	JsonReference *JsonReference `protobuf:"bytes,1,opt,name=json_reference,json=jsonReference,oneof"`
}
type ResponseValue_Response struct {
	Response *Response `protobuf:"bytes,2,opt,name=response,oneof"`
}

func (*ResponseValue_JsonReference) isResponseValue_Oneof() {}
func (*ResponseValue_Response) isResponseValue_Oneof()      {}

func (m *ResponseValue) GetOneof() isResponseValue_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ResponseValue) GetJsonReference() *JsonReference {
	if x, ok := m.GetOneof().(*ResponseValue_JsonReference); ok {
		return x.JsonReference
	}
	return nil
}

func (m *ResponseValue) GetResponse() *Response {
	if x, ok := m.GetOneof().(*ResponseValue_Response); ok {
		return x.Response
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResponseValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ResponseValue_OneofMarshaler, _ResponseValue_OneofUnmarshaler, _ResponseValue_OneofSizer, []interface{}{
		(*ResponseValue_JsonReference)(nil),
		(*ResponseValue_Response)(nil),
	}
}

func _ResponseValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ResponseValue)
	// oneof
	switch x := m.Oneof.(type) {
	case *ResponseValue_JsonReference:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JsonReference); err != nil {
			return err
		}
	case *ResponseValue_Response:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResponseValue.Oneof has unexpected type %T", x)
	}
	return nil
}

func _ResponseValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ResponseValue)
	switch tag {
	case 1: // oneof.json_reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JsonReference)
		err := b.DecodeMessage(msg)
		m.Oneof = &ResponseValue_JsonReference{msg}
		return true, err
	case 2: // oneof.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Response)
		err := b.DecodeMessage(msg)
		m.Oneof = &ResponseValue_Response{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResponseValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ResponseValue)
	// oneof
	switch x := m.Oneof.(type) {
	case *ResponseValue_JsonReference:
		s := proto.Size(x.JsonReference)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseValue_Response:
		s := proto.Size(x.Response)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Responses struct {
	ResponseCode    map[string]*ResponseValue `protobuf:"bytes,1,rep,name=response_code,json=responseCode" json:"response_code,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	VendorExtension map[string]*Any           `protobuf:"bytes,2,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Responses) Reset()                    { *m = Responses{} }
func (m *Responses) String() string            { return proto.CompactTextString(m) }
func (*Responses) ProtoMessage()               {}
func (*Responses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *Responses) GetResponseCode() map[string]*ResponseValue {
	if m != nil {
		return m.ResponseCode
	}
	return nil
}

func (m *Responses) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Schema struct {
	XRef                 string                    `protobuf:"bytes,1,opt,name=_ref,json=ref" json:"_ref,omitempty"`
	AdditionalProperties *AdditionalPropertiesItem `protobuf:"bytes,2,opt,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
	AllOf                []*Schema                 `protobuf:"bytes,3,rep,name=all_of,json=allOf" json:"all_of,omitempty"`
	Default              *Any                      `protobuf:"bytes,4,opt,name=default" json:"default,omitempty"`
	Description          string                    `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Discriminator        string                    `protobuf:"bytes,6,opt,name=discriminator" json:"discriminator,omitempty"`
	Enum                 []*Any                    `protobuf:"bytes,7,rep,name=enum" json:"enum,omitempty"`
	Example              *Any                      `protobuf:"bytes,8,opt,name=example" json:"example,omitempty"`
	ExclusiveMaximum     bool                      `protobuf:"varint,9,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum     bool                      `protobuf:"varint,10,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	ExternalDocs         *ExternalDocs             `protobuf:"bytes,11,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Format               string                    `protobuf:"bytes,12,opt,name=format" json:"format,omitempty"`
	Items                *ItemsItem                `protobuf:"bytes,13,opt,name=items" json:"items,omitempty"`
	MaxItems             int64                     `protobuf:"varint,14,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength            int64                     `protobuf:"varint,15,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	MaxProperties        int64                     `protobuf:"varint,16,opt,name=max_properties,json=maxProperties" json:"max_properties,omitempty"`
	Maximum              float64                   `protobuf:"fixed64,17,opt,name=maximum" json:"maximum,omitempty"`
	MinItems             int64                     `protobuf:"varint,18,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinLength            int64                     `protobuf:"varint,19,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	MinProperties        int64                     `protobuf:"varint,20,opt,name=min_properties,json=minProperties" json:"min_properties,omitempty"`
	Minimum              float64                   `protobuf:"fixed64,21,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf           float64                   `protobuf:"fixed64,22,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Pattern              string                    `protobuf:"bytes,23,opt,name=pattern" json:"pattern,omitempty"`
	Properties           *Properties               `protobuf:"bytes,24,opt,name=properties" json:"properties,omitempty"`
	ReadOnly             bool                      `protobuf:"varint,25,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	Required             []string                  `protobuf:"bytes,26,rep,name=required" json:"required,omitempty"`
	Title                string                    `protobuf:"bytes,27,opt,name=title" json:"title,omitempty"`
	Type                 *TypeItem                 `protobuf:"bytes,28,opt,name=type" json:"type,omitempty"`
	UniqueItems          bool                      `protobuf:"varint,29,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	VendorExtension      map[string]*Any           `protobuf:"bytes,30,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Xml                  *Xml                      `protobuf:"bytes,31,opt,name=xml" json:"xml,omitempty"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *Schema) GetAdditionalProperties() *AdditionalPropertiesItem {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

func (m *Schema) GetAllOf() []*Schema {
	if m != nil {
		return m.AllOf
	}
	return nil
}

func (m *Schema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Schema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Schema) GetExample() *Any {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *Schema) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Schema) GetItems() *ItemsItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Schema) GetProperties() *Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema) GetType() *TypeItem {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Schema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

func (m *Schema) GetXml() *Xml {
	if m != nil {
		return m.Xml
	}
	return nil
}

type SchemaItem struct {
	// Types that are valid to be assigned to Oneof:
	//	*SchemaItem_FileSchema
	//	*SchemaItem_Schema
	Oneof isSchemaItem_Oneof `protobuf_oneof:"oneof"`
}

func (m *SchemaItem) Reset()                    { *m = SchemaItem{} }
func (m *SchemaItem) String() string            { return proto.CompactTextString(m) }
func (*SchemaItem) ProtoMessage()               {}
func (*SchemaItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

type isSchemaItem_Oneof interface {
	isSchemaItem_Oneof()
}

type SchemaItem_FileSchema struct {
	FileSchema *FileSchema `protobuf:"bytes,1,opt,name=file_schema,json=fileSchema,oneof"`
}
type SchemaItem_Schema struct {
	Schema *Schema `protobuf:"bytes,2,opt,name=schema,oneof"`
}

func (*SchemaItem_FileSchema) isSchemaItem_Oneof() {}
func (*SchemaItem_Schema) isSchemaItem_Oneof()     {}

func (m *SchemaItem) GetOneof() isSchemaItem_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *SchemaItem) GetFileSchema() *FileSchema {
	if x, ok := m.GetOneof().(*SchemaItem_FileSchema); ok {
		return x.FileSchema
	}
	return nil
}

func (m *SchemaItem) GetSchema() *Schema {
	if x, ok := m.GetOneof().(*SchemaItem_Schema); ok {
		return x.Schema
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SchemaItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SchemaItem_OneofMarshaler, _SchemaItem_OneofUnmarshaler, _SchemaItem_OneofSizer, []interface{}{
		(*SchemaItem_FileSchema)(nil),
		(*SchemaItem_Schema)(nil),
	}
}

func _SchemaItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SchemaItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SchemaItem_FileSchema:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FileSchema); err != nil {
			return err
		}
	case *SchemaItem_Schema:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Schema); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SchemaItem.Oneof has unexpected type %T", x)
	}
	return nil
}

func _SchemaItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SchemaItem)
	switch tag {
	case 1: // oneof.file_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &SchemaItem_FileSchema{msg}
		return true, err
	case 2: // oneof.schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema)
		err := b.DecodeMessage(msg)
		m.Oneof = &SchemaItem_Schema{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SchemaItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SchemaItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SchemaItem_FileSchema:
		s := proto.Size(x.FileSchema)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SchemaItem_Schema:
		s := proto.Size(x.Schema)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SecurityDefinitions struct {
	AdditionalProperties map[string]*SecurityDefinitionsItem `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityDefinitions) Reset()                    { *m = SecurityDefinitions{} }
func (m *SecurityDefinitions) String() string            { return proto.CompactTextString(m) }
func (*SecurityDefinitions) ProtoMessage()               {}
func (*SecurityDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *SecurityDefinitions) GetAdditionalProperties() map[string]*SecurityDefinitionsItem {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type SecurityDefinitionsItem struct {
	// Types that are valid to be assigned to Oneof:
	//	*SecurityDefinitionsItem_ApiKeySecurity
	//	*SecurityDefinitionsItem_BasicAuthenticationSecurity
	//	*SecurityDefinitionsItem_Oauth2AccessCodeSecurity
	//	*SecurityDefinitionsItem_Oauth2ApplicationSecurity
	//	*SecurityDefinitionsItem_Oauth2ImplicitSecurity
	//	*SecurityDefinitionsItem_Oauth2PasswordSecurity
	Oneof isSecurityDefinitionsItem_Oneof `protobuf_oneof:"oneof"`
}

func (m *SecurityDefinitionsItem) Reset()                    { *m = SecurityDefinitionsItem{} }
func (m *SecurityDefinitionsItem) String() string            { return proto.CompactTextString(m) }
func (*SecurityDefinitionsItem) ProtoMessage()               {}
func (*SecurityDefinitionsItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

type isSecurityDefinitionsItem_Oneof interface {
	isSecurityDefinitionsItem_Oneof()
}

type SecurityDefinitionsItem_ApiKeySecurity struct {
	ApiKeySecurity *ApiKeySecurity `protobuf:"bytes,1,opt,name=api_key_security,json=apiKeySecurity,oneof"`
}
type SecurityDefinitionsItem_BasicAuthenticationSecurity struct {
	BasicAuthenticationSecurity *BasicAuthenticationSecurity `protobuf:"bytes,2,opt,name=basic_authentication_security,json=basicAuthenticationSecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2AccessCodeSecurity struct {
	Oauth2AccessCodeSecurity *Oauth2AccessCodeSecurity `protobuf:"bytes,3,opt,name=oauth2_access_code_security,json=oauth2AccessCodeSecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2ApplicationSecurity struct {
	Oauth2ApplicationSecurity *Oauth2ApplicationSecurity `protobuf:"bytes,4,opt,name=oauth2_application_security,json=oauth2ApplicationSecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2ImplicitSecurity struct {
	Oauth2ImplicitSecurity *Oauth2ImplicitSecurity `protobuf:"bytes,5,opt,name=oauth2_implicit_security,json=oauth2ImplicitSecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2PasswordSecurity struct {
	Oauth2PasswordSecurity *Oauth2PasswordSecurity `protobuf:"bytes,6,opt,name=oauth2_password_security,json=oauth2PasswordSecurity,oneof"`
}

func (*SecurityDefinitionsItem_ApiKeySecurity) isSecurityDefinitionsItem_Oneof()              {}
func (*SecurityDefinitionsItem_BasicAuthenticationSecurity) isSecurityDefinitionsItem_Oneof() {}
func (*SecurityDefinitionsItem_Oauth2AccessCodeSecurity) isSecurityDefinitionsItem_Oneof()    {}
func (*SecurityDefinitionsItem_Oauth2ApplicationSecurity) isSecurityDefinitionsItem_Oneof()   {}
func (*SecurityDefinitionsItem_Oauth2ImplicitSecurity) isSecurityDefinitionsItem_Oneof()      {}
func (*SecurityDefinitionsItem_Oauth2PasswordSecurity) isSecurityDefinitionsItem_Oneof()      {}

func (m *SecurityDefinitionsItem) GetOneof() isSecurityDefinitionsItem_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetApiKeySecurity() *ApiKeySecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_ApiKeySecurity); ok {
		return x.ApiKeySecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetBasicAuthenticationSecurity() *BasicAuthenticationSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_BasicAuthenticationSecurity); ok {
		return x.BasicAuthenticationSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2AccessCodeSecurity() *Oauth2AccessCodeSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2AccessCodeSecurity); ok {
		return x.Oauth2AccessCodeSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2ApplicationSecurity() *Oauth2ApplicationSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2ApplicationSecurity); ok {
		return x.Oauth2ApplicationSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2ImplicitSecurity() *Oauth2ImplicitSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2ImplicitSecurity); ok {
		return x.Oauth2ImplicitSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2PasswordSecurity() *Oauth2PasswordSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2PasswordSecurity); ok {
		return x.Oauth2PasswordSecurity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SecurityDefinitionsItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SecurityDefinitionsItem_OneofMarshaler, _SecurityDefinitionsItem_OneofUnmarshaler, _SecurityDefinitionsItem_OneofSizer, []interface{}{
		(*SecurityDefinitionsItem_ApiKeySecurity)(nil),
		(*SecurityDefinitionsItem_BasicAuthenticationSecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2AccessCodeSecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2ApplicationSecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2ImplicitSecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2PasswordSecurity)(nil),
	}
}

func _SecurityDefinitionsItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SecurityDefinitionsItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SecurityDefinitionsItem_ApiKeySecurity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApiKeySecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_BasicAuthenticationSecurity:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BasicAuthenticationSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2AccessCodeSecurity:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2AccessCodeSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2ApplicationSecurity:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2ApplicationSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2ImplicitSecurity:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2ImplicitSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2PasswordSecurity:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2PasswordSecurity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SecurityDefinitionsItem.Oneof has unexpected type %T", x)
	}
	return nil
}

func _SecurityDefinitionsItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SecurityDefinitionsItem)
	switch tag {
	case 1: // oneof.api_key_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ApiKeySecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_ApiKeySecurity{msg}
		return true, err
	case 2: // oneof.basic_authentication_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BasicAuthenticationSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_BasicAuthenticationSecurity{msg}
		return true, err
	case 3: // oneof.oauth2_access_code_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2AccessCodeSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2AccessCodeSecurity{msg}
		return true, err
	case 4: // oneof.oauth2_application_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2ApplicationSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2ApplicationSecurity{msg}
		return true, err
	case 5: // oneof.oauth2_implicit_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2ImplicitSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2ImplicitSecurity{msg}
		return true, err
	case 6: // oneof.oauth2_password_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2PasswordSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2PasswordSecurity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SecurityDefinitionsItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SecurityDefinitionsItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SecurityDefinitionsItem_ApiKeySecurity:
		s := proto.Size(x.ApiKeySecurity)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_BasicAuthenticationSecurity:
		s := proto.Size(x.BasicAuthenticationSecurity)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2AccessCodeSecurity:
		s := proto.Size(x.Oauth2AccessCodeSecurity)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2ApplicationSecurity:
		s := proto.Size(x.Oauth2ApplicationSecurity)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2ImplicitSecurity:
		s := proto.Size(x.Oauth2ImplicitSecurity)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2PasswordSecurity:
		s := proto.Size(x.Oauth2PasswordSecurity)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SecurityRequirement struct {
	AdditionalProperties map[string]*StringArray `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityRequirement) Reset()                    { *m = SecurityRequirement{} }
func (m *SecurityRequirement) String() string            { return proto.CompactTextString(m) }
func (*SecurityRequirement) ProtoMessage()               {}
func (*SecurityRequirement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *SecurityRequirement) GetAdditionalProperties() map[string]*StringArray {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type StringArray struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *StringArray) Reset()                    { *m = StringArray{} }
func (m *StringArray) String() string            { return proto.CompactTextString(m) }
func (*StringArray) ProtoMessage()               {}
func (*StringArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

type Tag struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	ExternalDocs    *ExternalDocs   `protobuf:"bytes,2,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Name            string          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,4,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *Tag) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Tag) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type TypeItem struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *TypeItem) Reset()                    { *m = TypeItem{} }
func (m *TypeItem) String() string            { return proto.CompactTextString(m) }
func (*TypeItem) ProtoMessage()               {}
func (*TypeItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

type VendorExtension struct {
	AdditionalProperties map[string]*Any `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *VendorExtension) Reset()                    { *m = VendorExtension{} }
func (m *VendorExtension) String() string            { return proto.CompactTextString(m) }
func (*VendorExtension) ProtoMessage()               {}
func (*VendorExtension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *VendorExtension) GetAdditionalProperties() map[string]*Any {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Xml struct {
	Attribute       bool            `protobuf:"varint,1,opt,name=attribute" json:"attribute,omitempty"`
	Name            string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace       string          `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Prefix          string          `protobuf:"bytes,4,opt,name=prefix" json:"prefix,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,5,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Wrapped         bool            `protobuf:"varint,6,opt,name=wrapped" json:"wrapped,omitempty"`
}

func (m *Xml) Reset()                    { *m = Xml{} }
func (m *Xml) String() string            { return proto.CompactTextString(m) }
func (*Xml) ProtoMessage()               {}
func (*Xml) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *Xml) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

func init() {
	proto.RegisterType((*AdditionalPropertiesItem)(nil), "OpenAPIv2.AdditionalPropertiesItem")
	proto.RegisterType((*Any)(nil), "OpenAPIv2.Any")
	proto.RegisterType((*ApiKeySecurity)(nil), "OpenAPIv2.ApiKeySecurity")
	proto.RegisterType((*BasicAuthenticationSecurity)(nil), "OpenAPIv2.BasicAuthenticationSecurity")
	proto.RegisterType((*BodyParameter)(nil), "OpenAPIv2.BodyParameter")
	proto.RegisterType((*Contact)(nil), "OpenAPIv2.Contact")
	proto.RegisterType((*Default)(nil), "OpenAPIv2.Default")
	proto.RegisterType((*Definitions)(nil), "OpenAPIv2.Definitions")
	proto.RegisterType((*Document)(nil), "OpenAPIv2.Document")
	proto.RegisterType((*Examples)(nil), "OpenAPIv2.Examples")
	proto.RegisterType((*ExternalDocs)(nil), "OpenAPIv2.ExternalDocs")
	proto.RegisterType((*FileSchema)(nil), "OpenAPIv2.FileSchema")
	proto.RegisterType((*FormDataParameterSubSchema)(nil), "OpenAPIv2.FormDataParameterSubSchema")
	proto.RegisterType((*Header)(nil), "OpenAPIv2.Header")
	proto.RegisterType((*HeaderParameterSubSchema)(nil), "OpenAPIv2.HeaderParameterSubSchema")
	proto.RegisterType((*Headers)(nil), "OpenAPIv2.Headers")
	proto.RegisterType((*Info)(nil), "OpenAPIv2.Info")
	proto.RegisterType((*ItemsItem)(nil), "OpenAPIv2.ItemsItem")
	proto.RegisterType((*JsonReference)(nil), "OpenAPIv2.JsonReference")
	proto.RegisterType((*License)(nil), "OpenAPIv2.License")
	proto.RegisterType((*NonBodyParameter)(nil), "OpenAPIv2.NonBodyParameter")
	proto.RegisterType((*Oauth2AccessCodeSecurity)(nil), "OpenAPIv2.Oauth2AccessCodeSecurity")
	proto.RegisterType((*Oauth2ApplicationSecurity)(nil), "OpenAPIv2.Oauth2ApplicationSecurity")
	proto.RegisterType((*Oauth2ImplicitSecurity)(nil), "OpenAPIv2.Oauth2ImplicitSecurity")
	proto.RegisterType((*Oauth2PasswordSecurity)(nil), "OpenAPIv2.Oauth2PasswordSecurity")
	proto.RegisterType((*Oauth2Scopes)(nil), "OpenAPIv2.Oauth2Scopes")
	proto.RegisterType((*Operation)(nil), "OpenAPIv2.Operation")
	proto.RegisterType((*Parameter)(nil), "OpenAPIv2.Parameter")
	proto.RegisterType((*ParameterDefinitions)(nil), "OpenAPIv2.ParameterDefinitions")
	proto.RegisterType((*ParametersItem)(nil), "OpenAPIv2.ParametersItem")
	proto.RegisterType((*PathItem)(nil), "OpenAPIv2.PathItem")
	proto.RegisterType((*PathParameterSubSchema)(nil), "OpenAPIv2.PathParameterSubSchema")
	proto.RegisterType((*Paths)(nil), "OpenAPIv2.Paths")
	proto.RegisterType((*PrimitivesItems)(nil), "OpenAPIv2.PrimitivesItems")
	proto.RegisterType((*Properties)(nil), "OpenAPIv2.Properties")
	proto.RegisterType((*QueryParameterSubSchema)(nil), "OpenAPIv2.QueryParameterSubSchema")
	proto.RegisterType((*Response)(nil), "OpenAPIv2.Response")
	proto.RegisterType((*ResponseDefinitions)(nil), "OpenAPIv2.ResponseDefinitions")
	proto.RegisterType((*ResponseValue)(nil), "OpenAPIv2.ResponseValue")
	proto.RegisterType((*Responses)(nil), "OpenAPIv2.Responses")
	proto.RegisterType((*Schema)(nil), "OpenAPIv2.Schema")
	proto.RegisterType((*SchemaItem)(nil), "OpenAPIv2.SchemaItem")
	proto.RegisterType((*SecurityDefinitions)(nil), "OpenAPIv2.SecurityDefinitions")
	proto.RegisterType((*SecurityDefinitionsItem)(nil), "OpenAPIv2.SecurityDefinitionsItem")
	proto.RegisterType((*SecurityRequirement)(nil), "OpenAPIv2.SecurityRequirement")
	proto.RegisterType((*StringArray)(nil), "OpenAPIv2.StringArray")
	proto.RegisterType((*Tag)(nil), "OpenAPIv2.Tag")
	proto.RegisterType((*TypeItem)(nil), "OpenAPIv2.TypeItem")
	proto.RegisterType((*VendorExtension)(nil), "OpenAPIv2.VendorExtension")
	proto.RegisterType((*Xml)(nil), "OpenAPIv2.Xml")
}

func init() { proto.RegisterFile("OpenAPIv2/OpenAPIv2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xec, 0x5c, 0xcd, 0x8f, 0x1c, 0x57,
	0xb5, 0x7f, 0xfd, 0xdd, 0x7d, 0x7a, 0xba, 0xa7, 0xa7, 0x66, 0x3c, 0xee, 0x99, 0x49, 0x1c, 0x67,
	0xec, 0x38, 0x8e, 0xe3, 0x8c, 0x13, 0xbf, 0xbc, 0x3c, 0x27, 0xef, 0x49, 0x68, 0x92, 0x38, 0xc4,
	0x24, 0xc4, 0x4e, 0x8d, 0xf3, 0x29, 0x42, 0xab, 0xa6, 0xfb, 0xf6, 0x4c, 0xc5, 0xdd, 0x55, 0x9d,
	0xaa, 0xea, 0xb1, 0x07, 0xb1, 0x63, 0x89, 0x04, 0x12, 0x2b, 0x90, 0x80, 0x05, 0x62, 0x97, 0x05,
	0xe2, 0x2f, 0x60, 0x85, 0x40, 0x2c, 0x10, 0x1b, 0xc4, 0x8a, 0x0d, 0x11, 0xb0, 0x02, 0x04, 0x1b,
	0x76, 0x88, 0x73, 0x3f, 0xaa, 0xea, 0x56, 0xd5, 0xad, 0x9a, 0xae, 0x71, 0xac, 0x1e, 0x21, 0x6f,
	0xec, 0xae, 0xfb, 0x71, 0xee, 0xb9, 0xe7, 0x9e, 0xdf, 0xb9, 0xe7, 0x9e, 0x73, 0xef, 0xc0, 0xda,
	0xcd, 0x09, 0xb1, 0xb6, 0x6f, 0xdd, 0x38, 0xb8, 0x7a, 0x25, 0xf8, 0xb5, 0x35, 0x71, 0x6c, 0xcf,
	0xd6, 0x1a, 0x41, 0xc1, 0x66, 0x0f, 0xba, 0xdb, 0x83, 0x81, 0xe9, 0x99, 0xb6, 0x65, 0x8c, 0x6e,
	0x39, 0xf6, 0x84, 0x38, 0x9e, 0x49, 0xdc, 0x1b, 0x1e, 0x19, 0x6b, 0x5d, 0xa8, 0xed, 0xda, 0xf6,
	0x88, 0x18, 0x56, 0xb7, 0x70, 0xb6, 0x70, 0xb1, 0xae, 0xfb, 0x9f, 0xda, 0x53, 0x50, 0x75, 0xfb,
	0xfb, 0x64, 0x6c, 0x74, 0x8b, 0x58, 0xd1, 0xbc, 0xba, 0xb4, 0x15, 0x0e, 0xb1, 0xc3, 0x2a, 0x74,
	0xd1, 0x60, 0x73, 0x03, 0x4a, 0xdb, 0xd6, 0xa1, 0xb6, 0x02, 0x95, 0x03, 0x63, 0x34, 0x25, 0x8c,
	0x52, 0x43, 0xe7, 0x1f, 0x9b, 0xdf, 0x2b, 0x42, 0x7b, 0x7b, 0x62, 0xbe, 0x41, 0x0e, 0x77, 0x48,
	0x7f, 0xea, 0x98, 0xde, 0xa1, 0x76, 0x16, 0x9a, 0x03, 0xe2, 0xf6, 0x1d, 0x73, 0x42, 0x79, 0x12,
	0xcd, 0xe5, 0x22, 0xad, 0x0d, 0x45, 0xd3, 0x62, 0x03, 0x37, 0x74, 0xfc, 0xa5, 0x69, 0x50, 0xb6,
	0x8c, 0x31, 0xe9, 0x96, 0x58, 0x09, 0xfb, 0x4d, 0xcb, 0xbc, 0xc3, 0x09, 0xe9, 0x96, 0x79, 0x19,
	0xfd, 0xad, 0x7d, 0x00, 0x9d, 0x03, 0x62, 0x0d, 0x6c, 0xa7, 0x47, 0xee, 0x79, 0xc4, 0x72, 0x29,
	0xf9, 0xca, 0xd9, 0x12, 0xb2, 0xbf, 0x25, 0xb1, 0x1f, 0x65, 0x67, 0xeb, 0x5d, 0xd6, 0xe3, 0xba,
	0xdf, 0xe1, 0xba, 0xe5, 0x39, 0x87, 0xfa, 0xe2, 0x41, 0xb4, 0x74, 0x5d, 0x87, 0x15, 0x55, 0x43,
	0xad, 0x03, 0xa5, 0x3b, 0xe4, 0x50, 0x4c, 0x82, 0xfe, 0xd4, 0xce, 0xfb, 0x72, 0xe0, 0x82, 0x6b,
	0xcb, 0x23, 0x5b, 0x87, 0x42, 0x2e, 0x2f, 0x15, 0xaf, 0x15, 0x36, 0xbf, 0x5d, 0x84, 0x8d, 0x97,
	0x0d, 0xd7, 0xec, 0x6f, 0x4f, 0xbd, 0x7d, 0x62, 0x79, 0x66, 0xdf, 0xa0, 0xd3, 0xcf, 0x21, 0x28,
	0x5f, 0x08, 0x45, 0x49, 0x08, 0x43, 0x85, 0x10, 0x4a, 0x4c, 0x08, 0xff, 0x27, 0xb1, 0x92, 0x31,
	0xee, 0x1c, 0x25, 0xf2, 0xab, 0x22, 0xb4, 0x5e, 0xb6, 0x07, 0x87, 0xb7, 0x0c, 0x07, 0xd7, 0xd8,
	0x23, 0xce, 0xe7, 0xa4, 0x2c, 0xeb, 0x50, 0x77, 0xc8, 0x27, 0x53, 0xd3, 0x21, 0x03, 0xa6, 0x30,
	0x75, 0x3d, 0xf8, 0x96, 0x34, 0xbd, 0x72, 0x84, 0xa6, 0x6b, 0xef, 0x2b, 0x44, 0x5b, 0x65, 0xa2,
	0x7d, 0x46, 0x16, 0xad, 0x3c, 0x81, 0x39, 0x0a, 0xf3, 0x2f, 0x05, 0xa8, 0xbd, 0x62, 0x5b, 0x9e,
	0xd1, 0xf7, 0x28, 0x38, 0x71, 0x02, 0xe6, 0xc8, 0x07, 0x27, 0xfb, 0x08, 0x44, 0x55, 0x94, 0x44,
	0x85, 0x23, 0x4e, 0x9d, 0x91, 0x90, 0x1e, 0xfd, 0xa9, 0xe9, 0x8a, 0x59, 0x97, 0xd9, 0xac, 0x9f,
	0x94, 0x06, 0x17, 0x23, 0xcd, 0x71, 0xbe, 0x3f, 0xc7, 0xf9, 0xbe, 0x4a, 0x86, 0xc6, 0x74, 0xe4,
	0x69, 0x06, 0x9c, 0x32, 0x02, 0xa3, 0xd7, 0x9b, 0x04, 0x56, 0x0f, 0x29, 0x53, 0xc6, 0x2f, 0x4b,
	0x54, 0x44, 0x97, 0x2d, 0x95, 0x91, 0xe4, 0xdc, 0xaf, 0x18, 0x8a, 0xaa, 0xf5, 0xf7, 0x60, 0x2d,
	0xb5, 0xcb, 0x7d, 0xcd, 0xe3, 0x37, 0x05, 0x68, 0x22, 0x53, 0xa6, 0xc5, 0x68, 0xbb, 0x1a, 0xc9,
	0x9e, 0xcb, 0xb3, 0xd1, 0xb9, 0xf8, 0xdd, 0x72, 0xcf, 0xe7, 0xc3, 0x7c, 0xf3, 0x79, 0x32, 0x3a,
	0x1f, 0x05, 0x6a, 0xa4, 0x29, 0xfd, 0xb0, 0x02, 0xf5, 0x57, 0xed, 0xfe, 0x74, 0x8c, 0xd6, 0x46,
	0xdb, 0x80, 0xc6, 0xae, 0xe1, 0x92, 0xde, 0xc4, 0xf0, 0xf6, 0x05, 0xc5, 0x3a, 0x2d, 0xb8, 0x85,
	0xdf, 0x14, 0xa9, 0x7d, 0xe4, 0x1e, 0x5b, 0xba, 0x48, 0xb9, 0x44, 0xeb, 0xfc, 0x6f, 0xed, 0x1a,
	0xb5, 0x05, 0xc1, 0x04, 0x99, 0x8a, 0x36, 0xaf, 0xae, 0xaa, 0xa7, 0xaf, 0xcb, 0x4d, 0xb5, 0xff,
	0x87, 0x16, 0xd5, 0x5d, 0x87, 0x0a, 0x70, 0x60, 0xf7, 0x5d, 0x66, 0x04, 0x9a, 0x57, 0x4f, 0x4b,
	0x7d, 0xaf, 0x8b, 0x7a, 0x64, 0xd3, 0xd5, 0x17, 0x88, 0xf4, 0x45, 0x61, 0xb2, 0x6f, 0xbb, 0x1e,
	0xb3, 0x0f, 0x08, 0x13, 0xfa, 0x5b, 0x3b, 0x07, 0x65, 0xd3, 0x1a, 0xda, 0x08, 0x7f, 0x4a, 0x68,
	0x51, 0x22, 0x74, 0x03, 0x8b, 0x75, 0x56, 0xa9, 0x7d, 0x01, 0x60, 0xe2, 0x1b, 0x02, 0xb7, 0x5b,
	0x63, 0x4d, 0x1f, 0x93, 0x9a, 0x06, 0x56, 0x42, 0x66, 0x5c, 0xea, 0xa2, 0x5d, 0x80, 0x0a, 0x95,
	0x92, 0xdb, 0xad, 0xb3, 0xbe, 0x9d, 0x48, 0x5f, 0x2c, 0xd7, 0x79, 0x35, 0x95, 0x1a, 0xea, 0xc5,
	0x60, 0xda, 0x47, 0xa9, 0x35, 0xb8, 0xd4, 0xfc, 0x6f, 0x9c, 0x7b, 0xc3, 0x21, 0xee, 0x04, 0x49,
	0x63, 0x25, 0x30, 0x3a, 0x67, 0x24, 0x3a, 0xba, 0xa8, 0x93, 0x59, 0x08, 0x3b, 0x50, 0x0f, 0x81,
	0x19, 0x3f, 0xec, 0xdb, 0x64, 0x84, 0xfd, 0x4f, 0xed, 0x25, 0xa8, 0xbb, 0x62, 0xc7, 0xe8, 0x2e,
	0x30, 0x4d, 0x94, 0xc9, 0xfa, 0x9b, 0x89, 0xce, 0xcd, 0x2c, 0x5d, 0x78, 0x3d, 0x68, 0xaf, 0xbd,
	0x0d, 0x2b, 0xfe, 0xef, 0x9e, 0xbc, 0xa4, 0xad, 0x04, 0x7b, 0x3e, 0x1d, 0x99, 0xbd, 0x65, 0x37,
	0x59, 0xc8, 0x18, 0xbd, 0x6b, 0xec, 0xed, 0x11, 0xa7, 0xdb, 0x66, 0xeb, 0xe4, 0x7f, 0x6a, 0x9b,
	0xb8, 0x49, 0x1a, 0x7b, 0x6e, 0x77, 0x91, 0x31, 0x29, 0x03, 0xef, 0xb6, 0xb1, 0xa7, 0xb3, 0xba,
	0xcd, 0x5f, 0x14, 0xa0, 0x7e, 0xfd, 0x9e, 0x31, 0x9e, 0x8c, 0x70, 0x66, 0xbb, 0xd9, 0x80, 0x7b,
	0x26, 0xa2, 0x35, 0xbc, 0xcf, 0xc9, 0xb1, 0x1e, 0x7f, 0x2b, 0xc0, 0x82, 0xac, 0xcb, 0x33, 0xec,
	0xa0, 0xc2, 0xe4, 0x17, 0x43, 0x93, 0xff, 0x5e, 0xaa, 0x0f, 0x71, 0x39, 0x05, 0x32, 0x73, 0xb4,
	0xfb, 0x7f, 0x2a, 0x01, 0xbc, 0x66, 0x8e, 0x08, 0x37, 0x3b, 0xda, 0x45, 0xa8, 0x0d, 0xb8, 0x49,
	0x67, 0xe4, 0x92, 0x5d, 0xfd, 0xea, 0xb8, 0x64, 0x8a, 0x49, 0xc9, 0x20, 0x2d, 0xc2, 0x57, 0x58,
	0x58, 0x9b, 0x04, 0x2d, 0x51, 0x7d, 0x9f, 0x16, 0x66, 0x15, 0xaa, 0x43, 0xdb, 0x19, 0x1b, 0xbe,
	0x8d, 0x11, 0x5f, 0xd4, 0x54, 0x3a, 0xc4, 0x18, 0xf4, 0x6c, 0x6b, 0x74, 0xc8, 0x4c, 0x0d, 0x73,
	0x5c, 0x8c, 0xc1, 0x4d, 0xfc, 0x8e, 0x38, 0x35, 0x35, 0x0e, 0xfa, 0xc0, 0xa9, 0xc1, 0xfd, 0xde,
	0x33, 0x3d, 0x64, 0xbb, 0xce, 0xf7, 0x7b, 0xf6, 0x11, 0xb8, 0x8b, 0x0d, 0xc9, 0x5d, 0x7c, 0x47,
	0xb1, 0xd4, 0xc0, 0x96, 0xfa, 0x92, 0xc4, 0x7b, 0x28, 0xdf, 0x39, 0x2e, 0xf4, 0x8f, 0x6a, 0xb0,
	0xfe, 0x1a, 0x0a, 0xe6, 0x55, 0xc3, 0x33, 0x02, 0xd3, 0xb9, 0x33, 0xdd, 0x15, 0x0b, 0x7f, 0x09,
	0x96, 0x8c, 0xd1, 0xc8, 0xbe, 0xdb, 0x23, 0xe3, 0x09, 0xda, 0x95, 0xf0, 0x30, 0x52, 0xd7, 0x17,
	0x59, 0xc5, 0x75, 0x5a, 0xfe, 0x2e, 0x2d, 0xd6, 0x9e, 0x86, 0xa5, 0xbe, 0x3d, 0x1a, 0x91, 0x3e,
	0x5d, 0xe6, 0x9e, 0x90, 0x3d, 0x57, 0x80, 0x4e, 0x58, 0xf1, 0x1a, 0x5f, 0x05, 0x49, 0xa3, 0x4a,
	0xb9, 0x34, 0xaa, 0x9c, 0xd4, 0x28, 0x34, 0x46, 0xc4, 0x9a, 0x8e, 0xc5, 0xb1, 0x24, 0x4e, 0x88,
	0xd5, 0x51, 0xe6, 0xc8, 0xbd, 0xfe, 0x68, 0xea, 0x9a, 0x07, 0xa4, 0x37, 0x36, 0xee, 0x99, 0x63,
	0xec, 0xc0, 0x57, 0xbf, 0x13, 0x54, 0x7c, 0x99, 0x97, 0xc7, 0x1a, 0xa3, 0x39, 0xa4, 0x8d, 0x6b,
	0xf1, 0xc6, 0xbc, 0x5c, 0xd2, 0xb3, 0x7a, 0x44, 0xcf, 0xb8, 0x0f, 0xdd, 0x08, 0x7c, 0xe8, 0x67,
	0xa1, 0x62, 0xe2, 0xf9, 0xd0, 0xdf, 0x2f, 0xd6, 0xe5, 0x7d, 0xc7, 0x31, 0xc7, 0x68, 0xb6, 0x0e,
	0xf8, 0x09, 0x12, 0x77, 0x20, 0xd6, 0x90, 0x6a, 0x2a, 0x72, 0xda, 0xe3, 0xbd, 0x9a, 0xd8, 0xab,
	0xa4, 0xd7, 0xb1, 0x80, 0xb5, 0xd1, 0x1e, 0x05, 0xa0, 0x95, 0x23, 0x62, 0xed, 0xe1, 0x96, 0xbf,
	0xc0, 0x6a, 0x69, 0xf3, 0x37, 0x59, 0x01, 0x35, 0xdd, 0xfe, 0x2c, 0xe9, 0x06, 0x50, 0xd0, 0xfd,
	0x4f, 0x46, 0xd5, 0xb4, 0x04, 0xd5, 0xb6, 0xa0, 0x6a, 0x5a, 0x21, 0x55, 0xac, 0x14, 0x54, 0x17,
	0x05, 0x55, 0xd3, 0x92, 0xa8, 0x0a, 0x71, 0x74, 0x04, 0x55, 0x21, 0x85, 0xc7, 0xa0, 0x39, 0xc6,
	0xd5, 0x32, 0x11, 0xb7, 0x3d, 0x7b, 0xd8, 0x5d, 0x62, 0xb5, 0xe0, 0x17, 0xdd, 0x1c, 0x06, 0x7e,
	0xb1, 0x26, 0xf9, 0xc5, 0x48, 0x0e, 0xf7, 0x5a, 0x8a, 0xd9, 0xee, 0x32, 0xdf, 0x5f, 0xc4, 0x67,
	0x04, 0x87, 0x2b, 0xb1, 0xc3, 0x85, 0x8f, 0xb8, 0x53, 0x12, 0xe2, 0x1e, 0x87, 0x85, 0xa9, 0x65,
	0x7e, 0x32, 0x25, 0x62, 0x5e, 0xab, 0xac, 0x4f, 0x93, 0x97, 0xf1, 0xa9, 0x11, 0x05, 0x28, 0x4f,
	0x33, 0x8d, 0x79, 0x49, 0x06, 0x65, 0x2a, 0x16, 0xe6, 0x08, 0xd2, 0x6f, 0x55, 0xa1, 0xfa, 0x3a,
	0x9a, 0x28, 0xdc, 0x78, 0x95, 0x20, 0x2b, 0x1c, 0x0d, 0xb2, 0x62, 0x2e, 0x90, 0x95, 0xd2, 0x41,
	0x56, 0xce, 0x0b, 0xb2, 0x4a, 0x1e, 0x90, 0x55, 0x8f, 0x04, 0x59, 0x2d, 0x02, 0xb2, 0x00, 0x54,
	0xf5, 0x63, 0x81, 0xaa, 0x91, 0x09, 0x2a, 0xc8, 0x00, 0x55, 0x33, 0x03, 0x54, 0x0b, 0x99, 0xa0,
	0x6a, 0x65, 0x80, 0xaa, 0x9d, 0x09, 0xaa, 0xc5, 0x04, 0xa8, 0x24, 0x00, 0x75, 0xa2, 0x00, 0xf2,
	0x41, 0xb2, 0x94, 0x01, 0x12, 0x2d, 0x09, 0x92, 0xb7, 0x15, 0x20, 0x59, 0x66, 0x2b, 0x7e, 0x41,
	0x12, 0x2d, 0xd7, 0xc5, 0x39, 0x02, 0xe2, 0x1f, 0x55, 0xe8, 0x72, 0x26, 0x14, 0x7b, 0xd6, 0x43,
	0x88, 0x28, 0xf6, 0xa1, 0x7a, 0x72, 0x1f, 0x6a, 0x1c, 0x0b, 0x32, 0x90, 0x09, 0x99, 0x66, 0x06,
	0x64, 0x16, 0x32, 0x20, 0xd3, 0xca, 0x84, 0x4c, 0x3b, 0x03, 0x32, 0x8b, 0x99, 0x90, 0xe9, 0xa4,
	0xee, 0x43, 0x4b, 0xea, 0x7d, 0x48, 0x4b, 0xdf, 0x87, 0x96, 0x53, 0xf6, 0xa1, 0x95, 0x0c, 0x88,
	0x9d, 0x4a, 0x42, 0xac, 0xaf, 0x80, 0xd8, 0x2a, 0xd3, 0x98, 0x6b, 0x09, 0x88, 0x9d, 0xa8, 0x5d,
	0xe8, 0x97, 0x05, 0xa8, 0x71, 0xb6, 0xdc, 0x3c, 0xb1, 0x20, 0xd1, 0x65, 0x8e, 0xb1, 0x13, 0xce,
	0x81, 0x3c, 0x95, 0x6f, 0x94, 0xa0, 0x4c, 0x63, 0x0a, 0xda, 0x65, 0xa8, 0xf5, 0x79, 0x90, 0x4d,
	0x1c, 0x6c, 0xb4, 0x64, 0xf8, 0x4d, 0xf7, 0x9b, 0xcc, 0x70, 0xb8, 0x41, 0x7a, 0x23, 0xb3, 0x8f,
	0x12, 0xf7, 0x0f, 0x37, 0x32, 0xbd, 0x37, 0x79, 0x8d, 0xee, 0x37, 0x41, 0xe3, 0xd3, 0xc1, 0xb5,
	0x1d, 0xbb, 0xa8, 0xa9, 0x3d, 0x97, 0x38, 0x07, 0x58, 0x2c, 0xfc, 0xdb, 0x36, 0x2b, 0xbf, 0x39,
	0xdc, 0xe1, 0xa5, 0xe1, 0xd9, 0xa3, 0x22, 0x9f, 0x3d, 0x6e, 0xa6, 0xc6, 0x4e, 0xcf, 0xc7, 0x82,
	0x27, 0xb3, 0xa9, 0x0d, 0x05, 0xc2, 0x01, 0xae, 0x15, 0xa5, 0xc3, 0x8d, 0x88, 0xff, 0xf9, 0x40,
	0x14, 0xea, 0x05, 0x68, 0x30, 0x48, 0xb0, 0xb4, 0x49, 0x18, 0x32, 0xe6, 0x2a, 0x94, 0x91, 0x1c,
	0xd9, 0x84, 0xd6, 0x97, 0x5c, 0xdb, 0xd2, 0xc9, 0x90, 0x38, 0xc4, 0x42, 0xe9, 0x2c, 0x41, 0xb9,
	0xe7, 0x90, 0xa1, 0xcf, 0x05, 0xfe, 0xdc, 0xfc, 0x1d, 0x2a, 0xab, 0x90, 0x77, 0x00, 0xf9, 0x42,
	0x32, 0x24, 0x5b, 0xcc, 0x0e, 0xc9, 0x96, 0x12, 0x21, 0x59, 0x41, 0x73, 0x8e, 0x30, 0xfc, 0x69,
	0x09, 0x3a, 0x6f, 0xd9, 0x56, 0x34, 0xa4, 0x7f, 0x07, 0xce, 0x50, 0x73, 0xdf, 0x1b, 0xa0, 0xeb,
	0xda, 0x0b, 0x82, 0x5d, 0x3d, 0x77, 0xba, 0xdb, 0x0b, 0xa4, 0x4a, 0xe9, 0x3e, 0x31, 0x93, 0xab,
	0xfb, 0xfa, 0x7f, 0xe9, 0xeb, 0xc3, 0xf4, 0x43, 0xe1, 0x00, 0x36, 0xf6, 0x19, 0xa4, 0xd4, 0x23,
	0xf1, 0x19, 0x9c, 0x9b, 0xc1, 0x98, 0xe1, 0x38, 0xdd, 0xfd, 0xb4, 0x6d, 0xfc, 0xab, 0xb0, 0x46,
	0x03, 0x71, 0xea, 0x31, 0x38, 0xb8, 0x1e, 0x8f, 0xc5, 0xee, 0x94, 0x23, 0xac, 0x4e, 0x94, 0x35,
	0x68, 0xc2, 0xd6, 0xd1, 0x26, 0x3b, 0x87, 0xea, 0x01, 0x78, 0xa8, 0x61, 0x53, 0x1a, 0xe0, 0x6d,
	0xda, 0x58, 0x39, 0xc2, 0xe9, 0x4f, 0xd4, 0x55, 0x2f, 0xd7, 0xa0, 0x62, 0x5b, 0xc4, 0x1e, 0x6e,
	0x7e, 0xb7, 0x04, 0xdd, 0x9b, 0xc6, 0xd4, 0xdb, 0xbf, 0xba, 0xdd, 0xef, 0x13, 0xd7, 0x7d, 0xc5,
	0x1e, 0x90, 0x20, 0x25, 0x85, 0xbb, 0x3c, 0xad, 0xb2, 0x1d, 0xf3, 0x6b, 0x2c, 0x67, 0xd4, 0xa3,
	0x8a, 0x29, 0xfc, 0x95, 0x48, 0xc5, 0x3b, 0xa8, 0xa5, 0x47, 0x9b, 0x20, 0xd4, 0xf6, 0x21, 0x1e,
	0xcc, 0xfd, 0x5c, 0x0d, 0xfd, 0xad, 0x5d, 0xa1, 0xe0, 0x42, 0x0b, 0xaa, 0x0a, 0xa1, 0x70, 0xbe,
	0x76, 0x58, 0xb5, 0x2e, 0x9a, 0xd1, 0xcd, 0xd9, 0xb3, 0xef, 0x10, 0xce, 0x0b, 0xb7, 0x39, 0x75,
	0x56, 0x40, 0x79, 0xf0, 0x37, 0xbe, 0xaa, 0xb4, 0xf1, 0xa9, 0x76, 0xb5, 0x5a, 0x62, 0x57, 0x4b,
	0x93, 0xc1, 0x3c, 0x33, 0x3a, 0x45, 0x58, 0x13, 0x6c, 0x4d, 0x26, 0xa3, 0x63, 0xa5, 0x0b, 0x99,
	0xb8, 0x8b, 0x4a, 0x71, 0x97, 0x8e, 0x21, 0xee, 0x72, 0x8a, 0xb8, 0x2b, 0x92, 0xb8, 0x07, 0xa9,
	0x96, 0xff, 0xc5, 0xa4, 0xb8, 0x93, 0xf3, 0x9a, 0xa3, 0xbc, 0xff, 0x59, 0x84, 0x55, 0xce, 0xd7,
	0x8d, 0x31, 0xe5, 0xcb, 0xf4, 0x4e, 0x34, 0x10, 0x54, 0xc2, 0x37, 0x52, 0x85, 0xff, 0x42, 0x82,
	0x5c, 0x7c, 0x92, 0x73, 0x94, 0xfc, 0x9f, 0x03, 0xc9, 0xdf, 0x32, 0x5c, 0xf7, 0xae, 0xed, 0x0c,
	0x4e, 0xbc, 0x9a, 0xe7, 0x91, 0x74, 0x7c, 0x52, 0x73, 0x94, 0xf4, 0xcf, 0x0a, 0xb0, 0x20, 0x0b,
	0x40, 0x1b, 0x66, 0xbb, 0xcb, 0xcf, 0xa5, 0x08, 0x2e, 0xb7, 0xcf, 0xfc, 0xc5, 0x7c, 0x3e, 0xf3,
	0x8a, 0x3c, 0xa3, 0x46, 0xc4, 0x41, 0xae, 0x00, 0xbd, 0xee, 0xe2, 0x30, 0xb8, 0x45, 0x12, 0x88,
	0x85, 0x58, 0x02, 0xf1, 0x0c, 0xc0, 0x80, 0x4c, 0x1c, 0x82, 0x06, 0x06, 0xcf, 0x48, 0x45, 0x76,
	0xde, 0x91, 0x4a, 0x66, 0x38, 0x36, 0xdf, 0x5f, 0x98, 0x1f, 0x4f, 0x5c, 0xb6, 0xcf, 0x68, 0xcf,
	0x1c, 0x08, 0xf5, 0x69, 0x06, 0x65, 0x37, 0x06, 0xda, 0x8b, 0x91, 0x94, 0x21, 0xd7, 0x9f, 0x35,
	0x55, 0xca, 0x90, 0x79, 0xa2, 0x91, 0x64, 0xa1, 0x9c, 0x04, 0xac, 0xc5, 0x92, 0x80, 0x57, 0xe5,
	0x24, 0x20, 0x8f, 0x3f, 0xad, 0x28, 0x92, 0x80, 0x69, 0xa9, 0xbf, 0x46, 0x7a, 0xea, 0x0f, 0x72,
	0xa6, 0xfe, 0x28, 0xd5, 0xe9, 0x78, 0x6c, 0x38, 0x87, 0xec, 0x00, 0x4e, 0xa9, 0xf2, 0x4f, 0x06,
	0x2a, 0x9a, 0xa7, 0x5b, 0x60, 0x83, 0xb1, 0xdf, 0xda, 0x6d, 0x05, 0xa8, 0x5a, 0x6c, 0xc4, 0xa7,
	0x64, 0x3d, 0xf4, 0x05, 0x38, 0x47, 0x1c, 0xfd, 0xb8, 0x00, 0x8d, 0xd0, 0xc7, 0xdd, 0x86, 0xf6,
	0x2e, 0x3a, 0xbd, 0xa1, 0xbf, 0x26, 0x7c, 0xda, 0x6e, 0xda, 0x3d, 0x11, 0x74, 0xcd, 0x5a, 0xbb,
	0x11, 0x37, 0xf9, 0x0d, 0xd0, 0x2c, 0x54, 0x93, 0x18, 0x19, 0xce, 0xc7, 0x86, 0x44, 0x26, 0xee,
	0x5f, 0x23, 0xa5, 0x8e, 0x15, 0x2b, 0x0b, 0xbd, 0xbb, 0x3f, 0x16, 0x60, 0x45, 0x95, 0x76, 0xd6,
	0xac, 0x6c, 0xd8, 0xbf, 0x78, 0x44, 0xda, 0x3a, 0x37, 0xfc, 0x3f, 0xca, 0x07, 0xff, 0x4b, 0xd1,
	0x85, 0x58, 0x51, 0xb1, 0x23, 0x2f, 0xc7, 0x77, 0x0a, 0xd0, 0x8e, 0x62, 0x85, 0xae, 0xc9, 0xc7,
	0x78, 0x14, 0xa3, 0xa7, 0x2f, 0x7e, 0x16, 0x53, 0xac, 0x49, 0xe4, 0xac, 0x46, 0xd7, 0xe4, 0xe3,
	0xc8, 0xe1, 0xed, 0x79, 0x68, 0xc4, 0x97, 0x42, 0xc9, 0x09, 0xf6, 0x0c, 0x1b, 0x86, 0xc2, 0xff,
	0x49, 0x19, 0xea, 0xd4, 0xf7, 0x67, 0xec, 0x24, 0x0f, 0x82, 0x78, 0x22, 0xaf, 0x0e, 0xc8, 0x08,
	0xfb, 0x28, 0x68, 0x07, 0x3a, 0xae, 0x8b, 0x36, 0xda, 0x05, 0x28, 0xed, 0x11, 0x3f, 0x25, 0xa5,
	0x6e, 0x4a, 0x1b, 0xe0, 0xc9, 0xbd, 0x4c, 0x0f, 0x2e, 0xc2, 0x54, 0xa9, 0x1b, 0xb2, 0x16, 0xda,
	0x16, 0xd4, 0xec, 0x09, 0xcf, 0xc4, 0x57, 0x32, 0x1a, 0xfb, 0x8d, 0xee, 0xc7, 0x58, 0x5d, 0x62,
	0x37, 0x1b, 0xfa, 0xfb, 0xe2, 0x56, 0x84, 0x7a, 0x20, 0xde, 0x84, 0x4e, 0x60, 0x42, 0xef, 0x5f,
	0xd4, 0xb3, 0x26, 0x40, 0x5b, 0x50, 0x91, 0x4c, 0xa6, 0x9e, 0x88, 0x16, 0xa6, 0x88, 0x04, 0x1b,
	0x68, 0x3b, 0xa9, 0x49, 0xcf, 0x8b, 0xb1, 0x63, 0x1a, 0x65, 0x7c, 0x8e, 0x56, 0xe5, 0xaf, 0x55,
	0x58, 0x55, 0x9f, 0x16, 0x1f, 0x86, 0x8e, 0x1f, 0x86, 0x8e, 0x4f, 0x72, 0xe8, 0xd8, 0x48, 0x0d,
	0x1d, 0xbf, 0x70, 0x64, 0x24, 0x64, 0x8e, 0x80, 0xfb, 0xb4, 0x08, 0x15, 0x76, 0xb5, 0x0a, 0x8d,
	0x61, 0x59, 0xdc, 0x50, 0x2b, 0xc5, 0xf5, 0x87, 0xd6, 0xb3, 0x7f, 0x39, 0x63, 0xac, 0x9d, 0x76,
	0x4b, 0x31, 0xe1, 0x22, 0xeb, 0xfb, 0x44, 0xa2, 0xef, 0x6c, 0xf3, 0x7b, 0x93, 0x7a, 0x14, 0x62,
	0x10, 0xc5, 0xa4, 0x9e, 0x8a, 0x4e, 0x6a, 0x59, 0x61, 0xb9, 0xa4, 0x99, 0x3d, 0x10, 0x69, 0xfd,
	0xab, 0x02, 0x8b, 0x31, 0x34, 0x3d, 0x28, 0xbb, 0xe4, 0x5b, 0x9d, 0x52, 0x5e, 0xab, 0x53, 0xce,
	0x63, 0x75, 0x2a, 0x47, 0x5a, 0x9d, 0xaa, 0x3a, 0xa7, 0x5b, 0x3b, 0x96, 0x95, 0xa9, 0x67, 0x5a,
	0x99, 0x46, 0x86, 0x95, 0x81, 0x0c, 0x2b, 0xd3, 0xcc, 0xb4, 0x32, 0x0b, 0x19, 0x56, 0xa6, 0x95,
	0x69, 0x65, 0xda, 0x59, 0x39, 0xdd, 0x45, 0x75, 0x4e, 0xb7, 0x93, 0x61, 0x35, 0x96, 0x92, 0x56,
	0xe3, 0x43, 0x05, 0x88, 0x34, 0xb6, 0xe2, 0x57, 0xd2, 0x45, 0x3b, 0x47, 0x73, 0xf1, 0xeb, 0x02,
	0x40, 0xe8, 0xbc, 0x6a, 0x83, 0x6c, 0x27, 0x3a, 0x3a, 0x07, 0xbf, 0xf2, 0x44, 0xdd, 0xd4, 0xfd,
	0x7e, 0x0d, 0x4e, 0xa7, 0x44, 0x8f, 0x1f, 0x5e, 0xb0, 0x7a, 0x78, 0xc1, 0xea, 0x3f, 0xe5, 0x82,
	0xd5, 0x6e, 0xea, 0x05, 0xab, 0xff, 0x3d, 0x3a, 0x8d, 0x32, 0x47, 0x7b, 0xf3, 0x59, 0x11, 0xea,
	0x7e, 0xb0, 0x66, 0x86, 0x48, 0xe8, 0x15, 0xa8, 0x8b, 0x0b, 0xaa, 0xae, 0xc2, 0x4b, 0xf0, 0x2f,
	0x2f, 0xeb, 0x41, 0x23, 0x9a, 0x13, 0xe6, 0x49, 0x2e, 0x57, 0x91, 0x13, 0x16, 0xd9, 0x71, 0xdd,
	0x6f, 0xa2, 0x3d, 0x13, 0xe4, 0x41, 0xf9, 0xd9, 0xf2, 0x54, 0xc2, 0xb4, 0x30, 0x27, 0xc4, 0x7f,
	0x3e, 0xb3, 0x93, 0xfa, 0x3c, 0xeb, 0xa2, 0x22, 0x16, 0x35, 0x47, 0x29, 0xff, 0xa1, 0x00, 0xcb,
	0x8a, 0x7b, 0xf1, 0xda, 0x38, 0xdb, 0xbc, 0x5f, 0xcb, 0xbe, 0x56, 0x9f, 0xdb, 0xce, 0x7f, 0x25,
	0x9f, 0x9d, 0xcf, 0xf0, 0x07, 0x7d, 0x6e, 0x22, 0x17, 0xf5, 0x0a, 0xd0, 0xf2, 0xcb, 0xb9, 0xcd,
	0xfe, 0x1c, 0x02, 0x24, 0xcf, 0x51, 0xa8, 0x72, 0x9a, 0x19, 0x6c, 0x60, 0xbf, 0xa0, 0x59, 0x18,
	0x1d, 0xf9, 0x7d, 0x11, 0x1a, 0x41, 0x20, 0x52, 0x7b, 0x03, 0x5a, 0x7e, 0x93, 0x5e, 0xdf, 0x1e,
	0x10, 0x21, 0xe3, 0x0b, 0xaa, 0xa8, 0x65, 0xf0, 0x8b, 0xe6, 0xe9, 0xb8, 0x44, 0x17, 0x1c, 0xa9,
	0x48, 0x19, 0x46, 0x2c, 0x26, 0xc2, 0x88, 0x21, 0xbd, 0xd9, 0x54, 0xef, 0x03, 0x58, 0x4a, 0x0c,
	0xac, 0x58, 0x97, 0xad, 0xe8, 0xba, 0x74, 0x15, 0x23, 0x32, 0xf9, 0x3f, 0x68, 0x67, 0xfd, 0x9b,
	0x00, 0x55, 0xb1, 0x93, 0x2b, 0x62, 0x4f, 0xef, 0xa7, 0xe9, 0x76, 0x32, 0x45, 0x9e, 0xf6, 0x9c,
	0x54, 0xad, 0xc6, 0xb8, 0xbb, 0x57, 0xd1, 0x3b, 0xa0, 0x1b, 0x41, 0x29, 0xed, 0xb6, 0x44, 0x05,
	0x1b, 0xe0, 0xb6, 0x20, 0xf9, 0x01, 0xe5, 0x5c, 0x7e, 0x40, 0x25, 0x69, 0xfa, 0xce, 0x43, 0x6b,
	0x60, 0xd2, 0x4f, 0xdc, 0x94, 0x0c, 0xcf, 0x76, 0x84, 0xe3, 0x1e, 0x2d, 0x0c, 0xbc, 0x85, 0x5a,
	0x86, 0xb7, 0x20, 0x3d, 0x02, 0xa8, 0x67, 0x3f, 0x02, 0x50, 0xfa, 0x15, 0x8d, 0x3c, 0x7e, 0x05,
	0xa4, 0xf8, 0x15, 0x89, 0xbc, 0x43, 0xf3, 0x78, 0xcf, 0x0b, 0x16, 0x22, 0x5e, 0xc9, 0x25, 0xdf,
	0x0b, 0x69, 0x25, 0x02, 0x66, 0xc1, 0x65, 0x17, 0xa5, 0xff, 0xd1, 0xce, 0xf4, 0x3f, 0x16, 0xe3,
	0xfe, 0xc7, 0x13, 0xd0, 0xa6, 0xd5, 0x92, 0x52, 0x75, 0x58, 0x93, 0x16, 0x96, 0x4a, 0x8a, 0x22,
	0xb9, 0x29, 0x4b, 0x19, 0x6e, 0x8a, 0x96, 0xe9, 0xa6, 0x2c, 0xc7, 0xdd, 0x14, 0x3a, 0x38, 0x56,
	0x4b, 0x83, 0xaf, 0x88, 0xc1, 0x4d, 0x2b, 0x36, 0xb8, 0x58, 0x84, 0x53, 0x99, 0xde, 0xcc, 0x6a,
	0xd6, 0x29, 0xe8, 0x74, 0xd4, 0x73, 0xf9, 0x1f, 0x00, 0x69, 0xdc, 0x6e, 0x62, 0x93, 0x0c, 0xc7,
	0xd7, 0xa5, 0x86, 0xd1, 0x67, 0x1f, 0x6b, 0x19, 0xcf, 0x3e, 0xd6, 0xd3, 0x9e, 0x7d, 0x6c, 0xc8,
	0x57, 0xaf, 0x9e, 0x14, 0x3e, 0xd2, 0x23, 0x09, 0x83, 0x7c, 0x1b, 0x8b, 0xd9, 0x22, 0xab, 0x1d,
	0xa7, 0x47, 0x67, 0xbb, 0x74, 0x7b, 0x26, 0x61, 0x99, 0xf3, 0xf8, 0x49, 0x88, 0xe5, 0xd2, 0xbd,
	0xf1, 0xa8, 0xfb, 0x58, 0x02, 0x5b, 0xef, 0x8f, 0x47, 0x3a, 0xad, 0x7a, 0x20, 0xd6, 0xf0, 0xeb,
	0x00, 0xa1, 0x8b, 0x42, 0x9f, 0x16, 0x0e, 0x4d, 0x5c, 0xdf, 0xc8, 0x05, 0xa4, 0x53, 0xca, 0x07,
	0x30, 0xb8, 0x79, 0xc1, 0x30, 0x7c, 0x6e, 0xf4, 0xf4, 0x91, 0x0f, 0xe5, 0xb1, 0x83, 0x68, 0x12,
	0xee, 0x75, 0x7f, 0x47, 0x0f, 0x43, 0xf1, 0xb4, 0x2d, 0x8f, 0x87, 0xa1, 0xe8, 0x9e, 0xdb, 0xc3,
	0xb8, 0x93, 0xcf, 0xc3, 0xb8, 0x16, 0x95, 0xee, 0x66, 0x36, 0x37, 0xb1, 0x00, 0xd4, 0xe6, 0x67,
	0x65, 0x38, 0x9d, 0xd2, 0x4c, 0xbb, 0x0e, 0x1d, 0x63, 0x62, 0xf6, 0x70, 0x90, 0x5e, 0x90, 0x59,
	0xe4, 0x8b, 0xb0, 0x96, 0xfa, 0x72, 0x1f, 0xe5, 0xda, 0x36, 0xa2, 0x7f, 0x5a, 0x60, 0x04, 0x8f,
	0xee, 0xd2, 0x87, 0xed, 0x3d, 0x23, 0xf2, 0xb2, 0x3d, 0xa4, 0xc9, 0x19, 0xbf, 0x30, 0xdb, 0x43,
	0x78, 0x1c, 0x60, 0x63, 0x37, 0xe3, 0x7d, 0xfe, 0x00, 0x36, 0x6c, 0x96, 0x01, 0xef, 0x19, 0xec,
	0x96, 0x10, 0xf3, 0x53, 0xc2, 0xb1, 0x4a, 0x89, 0x8d, 0x33, 0xed, 0x4a, 0x11, 0xbd, 0x5b, 0x66,
	0xa7, 0x5d, 0xb9, 0x1a, 0x86, 0xa3, 0x84, 0x97, 0x63, 0xc2, 0x51, 0xf8, 0x46, 0x79, 0x7e, 0x96,
	0x9b, 0x34, 0x38, 0xcc, 0x9a, 0x9d, 0x7a, 0x7d, 0xe8, 0x23, 0x10, 0x3c, 0xf4, 0x4c, 0x71, 0x0f,
	0x24, 0x1c, 0xa4, 0x92, 0xb8, 0xc2, 0xa6, 0xbe, 0x31, 0x42, 0xaf, 0xb0, 0xd9, 0xea, 0x0b, 0x33,
	0x21, 0xf9, 0x89, 0xb8, 0xfc, 0x10, 0x92, 0xaf, 0xa6, 0x90, 0x8f, 0x5f, 0x93, 0x08, 0xc9, 0xc7,
	0x6b, 0x22, 0x09, 0xce, 0x65, 0x45, 0x06, 0xfa, 0x38, 0xc8, 0x92, 0xba, 0xe7, 0x46, 0x56, 0x2f,
	0x1f, 0xb2, 0x2e, 0x47, 0x91, 0x25, 0x3f, 0x6a, 0xde, 0xf1, 0x1c, 0xd3, 0xda, 0xdb, 0x76, 0x1c,
	0x23, 0x62, 0xbf, 0xce, 0x41, 0x53, 0xaa, 0x91, 0xff, 0xfa, 0x46, 0x29, 0xfc, 0xeb, 0x1b, 0x3f,
	0x28, 0x42, 0xe9, 0xb6, 0xb1, 0x37, 0xc3, 0x49, 0x31, 0xe1, 0x60, 0x14, 0x73, 0xbe, 0x90, 0x4e,
	0xfc, 0xcd, 0x85, 0xb7, 0x52, 0xff, 0x6c, 0xc0, 0xb9, 0xe8, 0x13, 0xdc, 0x39, 0x1e, 0xf4, 0xce,
	0x42, 0xdd, 0xdf, 0x02, 0x53, 0x24, 0xf8, 0xdb, 0x02, 0x2c, 0xc6, 0x86, 0xd5, 0xcc, 0x6c, 0x55,
	0x7a, 0x5e, 0x1a, 0x2f, 0xd6, 0xf5, 0xe4, 0x3c, 0x13, 0xfe, 0x14, 0x35, 0x03, 0xf7, 0x57, 0xed,
	0x11, 0x68, 0xa0, 0xaf, 0xe2, 0x98, 0xbb, 0x53, 0xcf, 0x8f, 0xe5, 0x85, 0x05, 0xca, 0x3f, 0x10,
	0x81, 0x3d, 0xe8, 0xff, 0xee, 0xc4, 0xe8, 0xfb, 0x0b, 0x1e, 0x16, 0x50, 0x57, 0x73, 0x82, 0xc7,
	0x09, 0xf3, 0x9e, 0x88, 0xcd, 0x89, 0x2f, 0xa5, 0x36, 0x54, 0x12, 0xda, 0x80, 0x1c, 0xcd, 0x7e,
	0xfb, 0xfb, 0xae, 0x83, 0x06, 0x11, 0x9d, 0x20, 0x1e, 0xb8, 0xf3, 0x3f, 0x1f, 0x84, 0x9e, 0xec,
	0x56, 0xd9, 0x5f, 0xd5, 0xf9, 0xef, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xae, 0x79, 0xb1, 0xaa,
	0x72, 0x47, 0x00, 0x00,
}
