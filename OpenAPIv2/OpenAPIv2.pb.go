// Code generated by protoc-gen-go.
// source: OpenAPIv2/OpenAPIv2.proto
// DO NOT EDIT!

/*
Package OpenAPIv2 is a generated protocol buffer package.

It is generated from these files:
	OpenAPIv2/OpenAPIv2.proto

It has these top-level messages:
	AdditionalPropertiesItem
	Any
	ApiKeySecurity
	BasicAuthenticationSecurity
	BodyParameter
	Contact
	Default
	Definitions
	Document
	Examples
	ExternalDocs
	FileSchema
	FormDataParameterSubSchema
	Header
	HeaderParameterSubSchema
	Headers
	Info
	ItemsItem
	JsonReference
	License
	NonBodyParameter
	Oauth2AccessCodeSecurity
	Oauth2ApplicationSecurity
	Oauth2ImplicitSecurity
	Oauth2PasswordSecurity
	Oauth2Scopes
	Operation
	Parameter
	ParameterDefinitions
	ParametersItem
	PathItem
	PathParameterSubSchema
	Paths
	PrimitivesItems
	Properties
	QueryParameterSubSchema
	Response
	ResponseDefinitions
	ResponseValue
	Responses
	Schema
	SchemaItem
	SecurityDefinitions
	SecurityDefinitionsItem
	SecurityRequirement
	StringArray
	Tag
	TypeItem
	VendorExtension
	Xml
*/
package OpenAPIv2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AdditionalPropertiesItem struct {
	Schema  *Schema `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
	Boolean bool    `protobuf:"varint,2,opt,name=boolean" json:"boolean,omitempty"`
}

func (m *AdditionalPropertiesItem) Reset()                    { *m = AdditionalPropertiesItem{} }
func (m *AdditionalPropertiesItem) String() string            { return proto.CompactTextString(m) }
func (*AdditionalPropertiesItem) ProtoMessage()               {}
func (*AdditionalPropertiesItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AdditionalPropertiesItem) GetSchema() *Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

type Any struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *Any) Reset()                    { *m = Any{} }
func (m *Any) String() string            { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()               {}
func (*Any) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ApiKeySecurity struct {
	Name            string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	In              string          `protobuf:"bytes,2,opt,name=in" json:"in,omitempty"`
	Description     string          `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Type            string          `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,5,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ApiKeySecurity) Reset()                    { *m = ApiKeySecurity{} }
func (m *ApiKeySecurity) String() string            { return proto.CompactTextString(m) }
func (*ApiKeySecurity) ProtoMessage()               {}
func (*ApiKeySecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApiKeySecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type BasicAuthenticationSecurity struct {
	Description     string          `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Type            string          `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,3,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BasicAuthenticationSecurity) Reset()                    { *m = BasicAuthenticationSecurity{} }
func (m *BasicAuthenticationSecurity) String() string            { return proto.CompactTextString(m) }
func (*BasicAuthenticationSecurity) ProtoMessage()               {}
func (*BasicAuthenticationSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BasicAuthenticationSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type BodyParameter struct {
	Schema          *Schema         `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
	Description     string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Name            string          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	In              string          `protobuf:"bytes,4,opt,name=in" json:"in,omitempty"`
	Required        bool            `protobuf:"varint,5,opt,name=required" json:"required,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BodyParameter) Reset()                    { *m = BodyParameter{} }
func (m *BodyParameter) String() string            { return proto.CompactTextString(m) }
func (*BodyParameter) ProtoMessage()               {}
func (*BodyParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BodyParameter) GetSchema() *Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *BodyParameter) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Contact struct {
	Name            string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url             string          `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Email           string          `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,4,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Contact) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Default struct {
	AdditionalProperties map[string]*Any `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Default) Reset()                    { *m = Default{} }
func (m *Default) String() string            { return proto.CompactTextString(m) }
func (*Default) ProtoMessage()               {}
func (*Default) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Default) GetAdditionalProperties() map[string]*Any {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Definitions struct {
	AdditionalProperties map[string]*Schema `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Definitions) Reset()                    { *m = Definitions{} }
func (m *Definitions) String() string            { return proto.CompactTextString(m) }
func (*Definitions) ProtoMessage()               {}
func (*Definitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Definitions) GetAdditionalProperties() map[string]*Schema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Document struct {
	Definitions         *Definitions           `protobuf:"bytes,1,opt,name=definitions" json:"definitions,omitempty"`
	Security            []*SecurityRequirement `protobuf:"bytes,2,rep,name=security" json:"security,omitempty"`
	Host                string                 `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Parameters          *ParameterDefinitions  `protobuf:"bytes,4,opt,name=parameters" json:"parameters,omitempty"`
	Responses           *ResponseDefinitions   `protobuf:"bytes,5,opt,name=responses" json:"responses,omitempty"`
	Produces            []string               `protobuf:"bytes,6,rep,name=produces" json:"produces,omitempty"`
	SecurityDefinitions *SecurityDefinitions   `protobuf:"bytes,7,opt,name=security_definitions,json=securityDefinitions" json:"security_definitions,omitempty"`
	Swagger             string                 `protobuf:"bytes,8,opt,name=swagger" json:"swagger,omitempty"`
	Consumes            []string               `protobuf:"bytes,9,rep,name=consumes" json:"consumes,omitempty"`
	Paths               *Paths                 `protobuf:"bytes,10,opt,name=paths" json:"paths,omitempty"`
	BasePath            string                 `protobuf:"bytes,11,opt,name=base_path,json=basePath" json:"base_path,omitempty"`
	Schemes             []string               `protobuf:"bytes,12,rep,name=schemes" json:"schemes,omitempty"`
	Tags                []*Tag                 `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	ExternalDocs        *ExternalDocs          `protobuf:"bytes,14,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Info                *Info                  `protobuf:"bytes,15,opt,name=info" json:"info,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Document) GetDefinitions() *Definitions {
	if m != nil {
		return m.Definitions
	}
	return nil
}

func (m *Document) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Document) GetParameters() *ParameterDefinitions {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Document) GetResponses() *ResponseDefinitions {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Document) GetSecurityDefinitions() *SecurityDefinitions {
	if m != nil {
		return m.SecurityDefinitions
	}
	return nil
}

func (m *Document) GetPaths() *Paths {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *Document) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Document) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Document) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type Examples struct {
	AdditionalProperties map[string]*Any `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Examples) Reset()                    { *m = Examples{} }
func (m *Examples) String() string            { return proto.CompactTextString(m) }
func (*Examples) ProtoMessage()               {}
func (*Examples) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Examples) GetAdditionalProperties() map[string]*Any {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type ExternalDocs struct {
	Url             string          `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Description     string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,3,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ExternalDocs) Reset()                    { *m = ExternalDocs{} }
func (m *ExternalDocs) String() string            { return proto.CompactTextString(m) }
func (*ExternalDocs) ProtoMessage()               {}
func (*ExternalDocs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ExternalDocs) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type FileSchema struct {
	ReadOnly        bool            `protobuf:"varint,1,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	Example         *Any            `protobuf:"bytes,2,opt,name=example" json:"example,omitempty"`
	Default         *Any            `protobuf:"bytes,3,opt,name=default" json:"default,omitempty"`
	ExternalDocs    *ExternalDocs   `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Type            string          `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Required        []string        `protobuf:"bytes,6,rep,name=required" json:"required,omitempty"`
	Format          string          `protobuf:"bytes,7,opt,name=format" json:"format,omitempty"`
	Title           string          `protobuf:"bytes,8,opt,name=title" json:"title,omitempty"`
	Description     string          `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,10,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FileSchema) Reset()                    { *m = FileSchema{} }
func (m *FileSchema) String() string            { return proto.CompactTextString(m) }
func (*FileSchema) ProtoMessage()               {}
func (*FileSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *FileSchema) GetExample() *Any {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *FileSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *FileSchema) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *FileSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type FormDataParameterSubSchema struct {
	CollectionFormat string           `protobuf:"bytes,1,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Default          *Any             `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Enum             []*Any           `protobuf:"bytes,3,rep,name=enum" json:"enum,omitempty"`
	In               string           `protobuf:"bytes,4,opt,name=in" json:"in,omitempty"`
	UniqueItems      bool             `protobuf:"varint,5,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	Description      string           `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	AllowEmptyValue  bool             `protobuf:"varint,7,opt,name=allow_empty_value,json=allowEmptyValue" json:"allow_empty_value,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,8,opt,name=items" json:"items,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,9,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Pattern          string           `protobuf:"bytes,10,opt,name=pattern" json:"pattern,omitempty"`
	Format           string           `protobuf:"bytes,11,opt,name=format" json:"format,omitempty"`
	Name             string           `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,13,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Minimum          float64          `protobuf:"fixed64,14,opt,name=minimum" json:"minimum,omitempty"`
	Maximum          float64          `protobuf:"fixed64,15,opt,name=maximum" json:"maximum,omitempty"`
	MinLength        int64            `protobuf:"varint,16,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Type             string           `protobuf:"bytes,17,opt,name=type" json:"type,omitempty"`
	MaxItems         int64            `protobuf:"varint,18,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	Required         bool             `protobuf:"varint,19,opt,name=required" json:"required,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,20,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	MaxLength        int64            `protobuf:"varint,21,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	MinItems         int64            `protobuf:"varint,22,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,23,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FormDataParameterSubSchema) Reset()                    { *m = FormDataParameterSubSchema{} }
func (m *FormDataParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*FormDataParameterSubSchema) ProtoMessage()               {}
func (*FormDataParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *FormDataParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *FormDataParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *FormDataParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FormDataParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Header struct {
	MinLength        int64            `protobuf:"varint,1,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,2,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	MaxLength        int64            `protobuf:"varint,3,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Description      string           `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,5,opt,name=items" json:"items,omitempty"`
	CollectionFormat string           `protobuf:"bytes,6,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Type             string           `protobuf:"bytes,7,opt,name=type" json:"type,omitempty"`
	MinItems         int64            `protobuf:"varint,8,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,9,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	MaxItems         int64            `protobuf:"varint,10,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	Pattern          string           `protobuf:"bytes,11,opt,name=pattern" json:"pattern,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,12,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	UniqueItems      bool             `protobuf:"varint,13,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	Default          *Any             `protobuf:"bytes,14,opt,name=default" json:"default,omitempty"`
	Format           string           `protobuf:"bytes,15,opt,name=format" json:"format,omitempty"`
	Minimum          float64          `protobuf:"fixed64,16,opt,name=minimum" json:"minimum,omitempty"`
	Maximum          float64          `protobuf:"fixed64,17,opt,name=maximum" json:"maximum,omitempty"`
	Enum             []*Any           `protobuf:"bytes,18,rep,name=enum" json:"enum,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,19,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Header) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Header) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Header) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Header) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type HeaderParameterSubSchema struct {
	Enum             []*Any           `protobuf:"bytes,1,rep,name=enum" json:"enum,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,2,opt,name=items" json:"items,omitempty"`
	Description      string           `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	CollectionFormat string           `protobuf:"bytes,4,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	MinItems         int64            `protobuf:"varint,5,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	Required         bool             `protobuf:"varint,6,opt,name=required" json:"required,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,7,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,8,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Format           string           `protobuf:"bytes,9,opt,name=format" json:"format,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,10,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	MaxItems         int64            `protobuf:"varint,11,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MaxLength        int64            `protobuf:"varint,12,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Default          *Any             `protobuf:"bytes,13,opt,name=default" json:"default,omitempty"`
	MinLength        int64            `protobuf:"varint,14,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	In               string           `protobuf:"bytes,15,opt,name=in" json:"in,omitempty"`
	Maximum          float64          `protobuf:"fixed64,16,opt,name=maximum" json:"maximum,omitempty"`
	Name             string           `protobuf:"bytes,17,opt,name=name" json:"name,omitempty"`
	Pattern          string           `protobuf:"bytes,18,opt,name=pattern" json:"pattern,omitempty"`
	Minimum          float64          `protobuf:"fixed64,19,opt,name=minimum" json:"minimum,omitempty"`
	UniqueItems      bool             `protobuf:"varint,20,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	Type             string           `protobuf:"bytes,21,opt,name=type" json:"type,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,22,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *HeaderParameterSubSchema) Reset()                    { *m = HeaderParameterSubSchema{} }
func (m *HeaderParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*HeaderParameterSubSchema) ProtoMessage()               {}
func (*HeaderParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *HeaderParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *HeaderParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *HeaderParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *HeaderParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Headers struct {
	AdditionalProperties map[string]*Header `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Headers) Reset()                    { *m = Headers{} }
func (m *Headers) String() string            { return proto.CompactTextString(m) }
func (*Headers) ProtoMessage()               {}
func (*Headers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Headers) GetAdditionalProperties() map[string]*Header {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Info struct {
	TermsOfService  string          `protobuf:"bytes,1,opt,name=terms_of_service,json=termsOfService" json:"terms_of_service,omitempty"`
	Contact         *Contact        `protobuf:"bytes,2,opt,name=contact" json:"contact,omitempty"`
	License         *License        `protobuf:"bytes,3,opt,name=license" json:"license,omitempty"`
	Title           string          `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Version         string          `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	Description     string          `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,7,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Info) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Info) GetLicense() *License {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *Info) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type ItemsItem struct {
	Schema []*Schema `protobuf:"bytes,1,rep,name=schema" json:"schema,omitempty"`
}

func (m *ItemsItem) Reset()                    { *m = ItemsItem{} }
func (m *ItemsItem) String() string            { return proto.CompactTextString(m) }
func (*ItemsItem) ProtoMessage()               {}
func (*ItemsItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ItemsItem) GetSchema() []*Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

type JsonReference struct {
	XRef string `protobuf:"bytes,1,opt,name=_ref,json=ref" json:"_ref,omitempty"`
}

func (m *JsonReference) Reset()                    { *m = JsonReference{} }
func (m *JsonReference) String() string            { return proto.CompactTextString(m) }
func (*JsonReference) ProtoMessage()               {}
func (*JsonReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type License struct {
	Name            string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url             string          `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,3,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *License) Reset()                    { *m = License{} }
func (m *License) String() string            { return proto.CompactTextString(m) }
func (*License) ProtoMessage()               {}
func (*License) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *License) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type NonBodyParameter struct {
	// Types that are valid to be assigned to Oneof:
	//	*NonBodyParameter_HeaderParameterSubSchema
	//	*NonBodyParameter_FormDataParameterSubSchema
	//	*NonBodyParameter_QueryParameterSubSchema
	//	*NonBodyParameter_PathParameterSubSchema
	Oneof isNonBodyParameter_Oneof `protobuf_oneof:"oneof"`
}

func (m *NonBodyParameter) Reset()                    { *m = NonBodyParameter{} }
func (m *NonBodyParameter) String() string            { return proto.CompactTextString(m) }
func (*NonBodyParameter) ProtoMessage()               {}
func (*NonBodyParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type isNonBodyParameter_Oneof interface {
	isNonBodyParameter_Oneof()
}

type NonBodyParameter_HeaderParameterSubSchema struct {
	HeaderParameterSubSchema *HeaderParameterSubSchema `protobuf:"bytes,1,opt,name=header_parameter_sub_schema,json=headerParameterSubSchema,oneof"`
}
type NonBodyParameter_FormDataParameterSubSchema struct {
	FormDataParameterSubSchema *FormDataParameterSubSchema `protobuf:"bytes,2,opt,name=form_data_parameter_sub_schema,json=formDataParameterSubSchema,oneof"`
}
type NonBodyParameter_QueryParameterSubSchema struct {
	QueryParameterSubSchema *QueryParameterSubSchema `protobuf:"bytes,3,opt,name=query_parameter_sub_schema,json=queryParameterSubSchema,oneof"`
}
type NonBodyParameter_PathParameterSubSchema struct {
	PathParameterSubSchema *PathParameterSubSchema `protobuf:"bytes,4,opt,name=path_parameter_sub_schema,json=pathParameterSubSchema,oneof"`
}

func (*NonBodyParameter_HeaderParameterSubSchema) isNonBodyParameter_Oneof()   {}
func (*NonBodyParameter_FormDataParameterSubSchema) isNonBodyParameter_Oneof() {}
func (*NonBodyParameter_QueryParameterSubSchema) isNonBodyParameter_Oneof()    {}
func (*NonBodyParameter_PathParameterSubSchema) isNonBodyParameter_Oneof()     {}

func (m *NonBodyParameter) GetOneof() isNonBodyParameter_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *NonBodyParameter) GetHeaderParameterSubSchema() *HeaderParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_HeaderParameterSubSchema); ok {
		return x.HeaderParameterSubSchema
	}
	return nil
}

func (m *NonBodyParameter) GetFormDataParameterSubSchema() *FormDataParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_FormDataParameterSubSchema); ok {
		return x.FormDataParameterSubSchema
	}
	return nil
}

func (m *NonBodyParameter) GetQueryParameterSubSchema() *QueryParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_QueryParameterSubSchema); ok {
		return x.QueryParameterSubSchema
	}
	return nil
}

func (m *NonBodyParameter) GetPathParameterSubSchema() *PathParameterSubSchema {
	if x, ok := m.GetOneof().(*NonBodyParameter_PathParameterSubSchema); ok {
		return x.PathParameterSubSchema
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NonBodyParameter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NonBodyParameter_OneofMarshaler, _NonBodyParameter_OneofUnmarshaler, _NonBodyParameter_OneofSizer, []interface{}{
		(*NonBodyParameter_HeaderParameterSubSchema)(nil),
		(*NonBodyParameter_FormDataParameterSubSchema)(nil),
		(*NonBodyParameter_QueryParameterSubSchema)(nil),
		(*NonBodyParameter_PathParameterSubSchema)(nil),
	}
}

func _NonBodyParameter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NonBodyParameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *NonBodyParameter_HeaderParameterSubSchema:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeaderParameterSubSchema); err != nil {
			return err
		}
	case *NonBodyParameter_FormDataParameterSubSchema:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FormDataParameterSubSchema); err != nil {
			return err
		}
	case *NonBodyParameter_QueryParameterSubSchema:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QueryParameterSubSchema); err != nil {
			return err
		}
	case *NonBodyParameter_PathParameterSubSchema:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PathParameterSubSchema); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NonBodyParameter.Oneof has unexpected type %T", x)
	}
	return nil
}

func _NonBodyParameter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NonBodyParameter)
	switch tag {
	case 1: // oneof.header_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeaderParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_HeaderParameterSubSchema{msg}
		return true, err
	case 2: // oneof.form_data_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FormDataParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_FormDataParameterSubSchema{msg}
		return true, err
	case 3: // oneof.query_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QueryParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_QueryParameterSubSchema{msg}
		return true, err
	case 4: // oneof.path_parameter_sub_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PathParameterSubSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &NonBodyParameter_PathParameterSubSchema{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NonBodyParameter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NonBodyParameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *NonBodyParameter_HeaderParameterSubSchema:
		s := proto.Size(x.HeaderParameterSubSchema)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NonBodyParameter_FormDataParameterSubSchema:
		s := proto.Size(x.FormDataParameterSubSchema)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NonBodyParameter_QueryParameterSubSchema:
		s := proto.Size(x.QueryParameterSubSchema)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NonBodyParameter_PathParameterSubSchema:
		s := proto.Size(x.PathParameterSubSchema)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Oauth2AccessCodeSecurity struct {
	Scopes           *Oauth2Scopes   `protobuf:"bytes,1,opt,name=scopes" json:"scopes,omitempty"`
	AuthorizationUrl string          `protobuf:"bytes,2,opt,name=authorization_url,json=authorizationUrl" json:"authorization_url,omitempty"`
	TokenUrl         string          `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	Description      string          `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Type             string          `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Flow             string          `protobuf:"bytes,6,opt,name=flow" json:"flow,omitempty"`
	VendorExtension  map[string]*Any `protobuf:"bytes,7,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2AccessCodeSecurity) Reset()                    { *m = Oauth2AccessCodeSecurity{} }
func (m *Oauth2AccessCodeSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2AccessCodeSecurity) ProtoMessage()               {}
func (*Oauth2AccessCodeSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Oauth2AccessCodeSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2AccessCodeSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2ApplicationSecurity struct {
	Type            string          `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Flow            string          `protobuf:"bytes,2,opt,name=flow" json:"flow,omitempty"`
	Scopes          *Oauth2Scopes   `protobuf:"bytes,3,opt,name=scopes" json:"scopes,omitempty"`
	TokenUrl        string          `protobuf:"bytes,4,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	Description     string          `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2ApplicationSecurity) Reset()                    { *m = Oauth2ApplicationSecurity{} }
func (m *Oauth2ApplicationSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2ApplicationSecurity) ProtoMessage()               {}
func (*Oauth2ApplicationSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Oauth2ApplicationSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2ApplicationSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2ImplicitSecurity struct {
	Type             string          `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Flow             string          `protobuf:"bytes,2,opt,name=flow" json:"flow,omitempty"`
	Scopes           *Oauth2Scopes   `protobuf:"bytes,3,opt,name=scopes" json:"scopes,omitempty"`
	AuthorizationUrl string          `protobuf:"bytes,4,opt,name=authorization_url,json=authorizationUrl" json:"authorization_url,omitempty"`
	Description      string          `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	VendorExtension  map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2ImplicitSecurity) Reset()                    { *m = Oauth2ImplicitSecurity{} }
func (m *Oauth2ImplicitSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2ImplicitSecurity) ProtoMessage()               {}
func (*Oauth2ImplicitSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Oauth2ImplicitSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2ImplicitSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2PasswordSecurity struct {
	TokenUrl        string          `protobuf:"bytes,1,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	Description     string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Type            string          `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Flow            string          `protobuf:"bytes,4,opt,name=flow" json:"flow,omitempty"`
	Scopes          *Oauth2Scopes   `protobuf:"bytes,5,opt,name=scopes" json:"scopes,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2PasswordSecurity) Reset()                    { *m = Oauth2PasswordSecurity{} }
func (m *Oauth2PasswordSecurity) String() string            { return proto.CompactTextString(m) }
func (*Oauth2PasswordSecurity) ProtoMessage()               {}
func (*Oauth2PasswordSecurity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Oauth2PasswordSecurity) GetScopes() *Oauth2Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Oauth2PasswordSecurity) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Oauth2Scopes struct {
	AdditionalProperties map[string]string `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Oauth2Scopes) Reset()                    { *m = Oauth2Scopes{} }
func (m *Oauth2Scopes) String() string            { return proto.CompactTextString(m) }
func (*Oauth2Scopes) ProtoMessage()               {}
func (*Oauth2Scopes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Oauth2Scopes) GetAdditionalProperties() map[string]string {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Operation struct {
	Tags            []string               `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	Summary         string                 `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	OperationId     string                 `protobuf:"bytes,4,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Deprecated      bool                   `protobuf:"varint,5,opt,name=deprecated" json:"deprecated,omitempty"`
	Parameters      []*ParametersItem      `protobuf:"bytes,6,rep,name=parameters" json:"parameters,omitempty"`
	Responses       *Responses             `protobuf:"bytes,7,opt,name=responses" json:"responses,omitempty"`
	Consumes        []string               `protobuf:"bytes,8,rep,name=consumes" json:"consumes,omitempty"`
	Schemes         []string               `protobuf:"bytes,9,rep,name=schemes" json:"schemes,omitempty"`
	Security        []*SecurityRequirement `protobuf:"bytes,10,rep,name=security" json:"security,omitempty"`
	ExternalDocs    *ExternalDocs          `protobuf:"bytes,11,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Produces        []string               `protobuf:"bytes,12,rep,name=produces" json:"produces,omitempty"`
	VendorExtension map[string]*Any        `protobuf:"bytes,13,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *Operation) GetParameters() []*ParametersItem {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Operation) GetResponses() *Responses {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Operation) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Operation) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Operation) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Parameter struct {
	// Types that are valid to be assigned to Oneof:
	//	*Parameter_BodyParameter
	//	*Parameter_NonBodyParameter
	Oneof isParameter_Oneof `protobuf_oneof:"oneof"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type isParameter_Oneof interface {
	isParameter_Oneof()
}

type Parameter_BodyParameter struct {
	BodyParameter *BodyParameter `protobuf:"bytes,1,opt,name=body_parameter,json=bodyParameter,oneof"`
}
type Parameter_NonBodyParameter struct {
	NonBodyParameter *NonBodyParameter `protobuf:"bytes,2,opt,name=non_body_parameter,json=nonBodyParameter,oneof"`
}

func (*Parameter_BodyParameter) isParameter_Oneof()    {}
func (*Parameter_NonBodyParameter) isParameter_Oneof() {}

func (m *Parameter) GetOneof() isParameter_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *Parameter) GetBodyParameter() *BodyParameter {
	if x, ok := m.GetOneof().(*Parameter_BodyParameter); ok {
		return x.BodyParameter
	}
	return nil
}

func (m *Parameter) GetNonBodyParameter() *NonBodyParameter {
	if x, ok := m.GetOneof().(*Parameter_NonBodyParameter); ok {
		return x.NonBodyParameter
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Parameter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Parameter_OneofMarshaler, _Parameter_OneofUnmarshaler, _Parameter_OneofSizer, []interface{}{
		(*Parameter_BodyParameter)(nil),
		(*Parameter_NonBodyParameter)(nil),
	}
}

func _Parameter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Parameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *Parameter_BodyParameter:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BodyParameter); err != nil {
			return err
		}
	case *Parameter_NonBodyParameter:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NonBodyParameter); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Parameter.Oneof has unexpected type %T", x)
	}
	return nil
}

func _Parameter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Parameter)
	switch tag {
	case 1: // oneof.body_parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BodyParameter)
		err := b.DecodeMessage(msg)
		m.Oneof = &Parameter_BodyParameter{msg}
		return true, err
	case 2: // oneof.non_body_parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NonBodyParameter)
		err := b.DecodeMessage(msg)
		m.Oneof = &Parameter_NonBodyParameter{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Parameter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Parameter)
	// oneof
	switch x := m.Oneof.(type) {
	case *Parameter_BodyParameter:
		s := proto.Size(x.BodyParameter)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameter_NonBodyParameter:
		s := proto.Size(x.NonBodyParameter)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ParameterDefinitions struct {
	AdditionalProperties map[string]*Parameter `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ParameterDefinitions) Reset()                    { *m = ParameterDefinitions{} }
func (m *ParameterDefinitions) String() string            { return proto.CompactTextString(m) }
func (*ParameterDefinitions) ProtoMessage()               {}
func (*ParameterDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ParameterDefinitions) GetAdditionalProperties() map[string]*Parameter {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type ParametersItem struct {
	// Types that are valid to be assigned to Oneof:
	//	*ParametersItem_Parameter
	//	*ParametersItem_JsonReference
	Oneof isParametersItem_Oneof `protobuf_oneof:"oneof"`
}

func (m *ParametersItem) Reset()                    { *m = ParametersItem{} }
func (m *ParametersItem) String() string            { return proto.CompactTextString(m) }
func (*ParametersItem) ProtoMessage()               {}
func (*ParametersItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type isParametersItem_Oneof interface {
	isParametersItem_Oneof()
}

type ParametersItem_Parameter struct {
	Parameter *Parameter `protobuf:"bytes,1,opt,name=parameter,oneof"`
}
type ParametersItem_JsonReference struct {
	JsonReference *JsonReference `protobuf:"bytes,2,opt,name=json_reference,json=jsonReference,oneof"`
}

func (*ParametersItem_Parameter) isParametersItem_Oneof()     {}
func (*ParametersItem_JsonReference) isParametersItem_Oneof() {}

func (m *ParametersItem) GetOneof() isParametersItem_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ParametersItem) GetParameter() *Parameter {
	if x, ok := m.GetOneof().(*ParametersItem_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *ParametersItem) GetJsonReference() *JsonReference {
	if x, ok := m.GetOneof().(*ParametersItem_JsonReference); ok {
		return x.JsonReference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ParametersItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ParametersItem_OneofMarshaler, _ParametersItem_OneofUnmarshaler, _ParametersItem_OneofSizer, []interface{}{
		(*ParametersItem_Parameter)(nil),
		(*ParametersItem_JsonReference)(nil),
	}
}

func _ParametersItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ParametersItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *ParametersItem_Parameter:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameter); err != nil {
			return err
		}
	case *ParametersItem_JsonReference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JsonReference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ParametersItem.Oneof has unexpected type %T", x)
	}
	return nil
}

func _ParametersItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ParametersItem)
	switch tag {
	case 1: // oneof.parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Parameter)
		err := b.DecodeMessage(msg)
		m.Oneof = &ParametersItem_Parameter{msg}
		return true, err
	case 2: // oneof.json_reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JsonReference)
		err := b.DecodeMessage(msg)
		m.Oneof = &ParametersItem_JsonReference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ParametersItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ParametersItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *ParametersItem_Parameter:
		s := proto.Size(x.Parameter)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParametersItem_JsonReference:
		s := proto.Size(x.JsonReference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PathItem struct {
	Get             *Operation        `protobuf:"bytes,1,opt,name=get" json:"get,omitempty"`
	Delete          *Operation        `protobuf:"bytes,2,opt,name=delete" json:"delete,omitempty"`
	Put             *Operation        `protobuf:"bytes,3,opt,name=put" json:"put,omitempty"`
	Post            *Operation        `protobuf:"bytes,4,opt,name=post" json:"post,omitempty"`
	Options         *Operation        `protobuf:"bytes,5,opt,name=options" json:"options,omitempty"`
	XRef            string            `protobuf:"bytes,6,opt,name=_ref,json=ref" json:"_ref,omitempty"`
	Head            *Operation        `protobuf:"bytes,7,opt,name=head" json:"head,omitempty"`
	Parameters      []*ParametersItem `protobuf:"bytes,8,rep,name=parameters" json:"parameters,omitempty"`
	Patch           *Operation        `protobuf:"bytes,9,opt,name=patch" json:"patch,omitempty"`
	VendorExtension map[string]*Any   `protobuf:"bytes,10,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PathItem) Reset()                    { *m = PathItem{} }
func (m *PathItem) String() string            { return proto.CompactTextString(m) }
func (*PathItem) ProtoMessage()               {}
func (*PathItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *PathItem) GetGet() *Operation {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *PathItem) GetDelete() *Operation {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *PathItem) GetPut() *Operation {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *PathItem) GetPost() *Operation {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *PathItem) GetOptions() *Operation {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *PathItem) GetHead() *Operation {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *PathItem) GetParameters() []*ParametersItem {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *PathItem) GetPatch() *Operation {
	if m != nil {
		return m.Patch
	}
	return nil
}

func (m *PathItem) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type PathParameterSubSchema struct {
	Name             string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description      string           `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Required         bool             `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
	CollectionFormat string           `protobuf:"bytes,4,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,5,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,6,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	Minimum          float64          `protobuf:"fixed64,7,opt,name=minimum" json:"minimum,omitempty"`
	MinItems         int64            `protobuf:"varint,8,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	Default          *Any             `protobuf:"bytes,9,opt,name=default" json:"default,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,10,opt,name=items" json:"items,omitempty"`
	MinLength        int64            `protobuf:"varint,11,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Type             string           `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
	MaxLength        int64            `protobuf:"varint,13,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	MaxItems         int64            `protobuf:"varint,14,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	Maximum          float64          `protobuf:"fixed64,15,opt,name=maximum" json:"maximum,omitempty"`
	Pattern          string           `protobuf:"bytes,16,opt,name=pattern" json:"pattern,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,17,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Format           string           `protobuf:"bytes,18,opt,name=format" json:"format,omitempty"`
	UniqueItems      bool             `protobuf:"varint,19,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	Enum             []*Any           `protobuf:"bytes,20,rep,name=enum" json:"enum,omitempty"`
	In               string           `protobuf:"bytes,21,opt,name=in" json:"in,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,22,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PathParameterSubSchema) Reset()                    { *m = PathParameterSubSchema{} }
func (m *PathParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*PathParameterSubSchema) ProtoMessage()               {}
func (*PathParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *PathParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *PathParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *PathParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *PathParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Paths struct {
	VendorExtension map[string]*Any      `protobuf:"bytes,1,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Path            map[string]*PathItem `protobuf:"bytes,2,rep,name=path" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Paths) Reset()                    { *m = Paths{} }
func (m *Paths) String() string            { return proto.CompactTextString(m) }
func (*Paths) ProtoMessage()               {}
func (*Paths) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *Paths) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

func (m *Paths) GetPath() map[string]*PathItem {
	if m != nil {
		return m.Path
	}
	return nil
}

type PrimitivesItems struct {
	ExclusiveMinimum bool             `protobuf:"varint,1,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	MinLength        int64            `protobuf:"varint,2,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Format           string           `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	MaxItems         int64            `protobuf:"varint,4,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MinItems         int64            `protobuf:"varint,5,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	Default          *Any             `protobuf:"bytes,6,opt,name=default" json:"default,omitempty"`
	Enum             []*Any           `protobuf:"bytes,7,rep,name=enum" json:"enum,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,8,opt,name=items" json:"items,omitempty"`
	Minimum          float64          `protobuf:"fixed64,9,opt,name=minimum" json:"minimum,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,10,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	MaxLength        int64            `protobuf:"varint,11,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Type             string           `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
	UniqueItems      bool             `protobuf:"varint,13,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	Maximum          float64          `protobuf:"fixed64,14,opt,name=maximum" json:"maximum,omitempty"`
	Pattern          string           `protobuf:"bytes,15,opt,name=pattern" json:"pattern,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,16,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	CollectionFormat string           `protobuf:"bytes,17,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,18,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PrimitivesItems) Reset()                    { *m = PrimitivesItems{} }
func (m *PrimitivesItems) String() string            { return proto.CompactTextString(m) }
func (*PrimitivesItems) ProtoMessage()               {}
func (*PrimitivesItems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *PrimitivesItems) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *PrimitivesItems) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *PrimitivesItems) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *PrimitivesItems) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Properties struct {
	AdditionalProperties map[string]*Schema `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Properties) Reset()                    { *m = Properties{} }
func (m *Properties) String() string            { return proto.CompactTextString(m) }
func (*Properties) ProtoMessage()               {}
func (*Properties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *Properties) GetAdditionalProperties() map[string]*Schema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type QueryParameterSubSchema struct {
	Enum             []*Any           `protobuf:"bytes,1,rep,name=enum" json:"enum,omitempty"`
	Items            *PrimitivesItems `protobuf:"bytes,2,opt,name=items" json:"items,omitempty"`
	In               string           `protobuf:"bytes,3,opt,name=in" json:"in,omitempty"`
	ExclusiveMinimum bool             `protobuf:"varint,4,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	MaxLength        int64            `protobuf:"varint,5,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	MinItems         int64            `protobuf:"varint,6,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	ExclusiveMaximum bool             `protobuf:"varint,7,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	Default          *Any             `protobuf:"bytes,8,opt,name=default" json:"default,omitempty"`
	MinLength        int64            `protobuf:"varint,9,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Name             string           `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	MultipleOf       float64          `protobuf:"fixed64,11,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Description      string           `protobuf:"bytes,12,opt,name=description" json:"description,omitempty"`
	AllowEmptyValue  bool             `protobuf:"varint,13,opt,name=allow_empty_value,json=allowEmptyValue" json:"allow_empty_value,omitempty"`
	UniqueItems      bool             `protobuf:"varint,14,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	Format           string           `protobuf:"bytes,15,opt,name=format" json:"format,omitempty"`
	Minimum          float64          `protobuf:"fixed64,16,opt,name=minimum" json:"minimum,omitempty"`
	CollectionFormat string           `protobuf:"bytes,17,opt,name=collection_format,json=collectionFormat" json:"collection_format,omitempty"`
	Maximum          float64          `protobuf:"fixed64,18,opt,name=maximum" json:"maximum,omitempty"`
	Pattern          string           `protobuf:"bytes,19,opt,name=pattern" json:"pattern,omitempty"`
	Type             string           `protobuf:"bytes,20,opt,name=type" json:"type,omitempty"`
	MaxItems         int64            `protobuf:"varint,21,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	Required         bool             `protobuf:"varint,22,opt,name=required" json:"required,omitempty"`
	VendorExtension  map[string]*Any  `protobuf:"bytes,23,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *QueryParameterSubSchema) Reset()                    { *m = QueryParameterSubSchema{} }
func (m *QueryParameterSubSchema) String() string            { return proto.CompactTextString(m) }
func (*QueryParameterSubSchema) ProtoMessage()               {}
func (*QueryParameterSubSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *QueryParameterSubSchema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *QueryParameterSubSchema) GetItems() *PrimitivesItems {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *QueryParameterSubSchema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *QueryParameterSubSchema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Response struct {
	Examples        *Examples       `protobuf:"bytes,1,opt,name=examples" json:"examples,omitempty"`
	Description     string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Schema          *SchemaItem     `protobuf:"bytes,3,opt,name=schema" json:"schema,omitempty"`
	Headers         *Headers        `protobuf:"bytes,4,opt,name=headers" json:"headers,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,5,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *Response) GetExamples() *Examples {
	if m != nil {
		return m.Examples
	}
	return nil
}

func (m *Response) GetSchema() *SchemaItem {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *Response) GetHeaders() *Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Response) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type ResponseDefinitions struct {
	AdditionalProperties map[string]*Response `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResponseDefinitions) Reset()                    { *m = ResponseDefinitions{} }
func (m *ResponseDefinitions) String() string            { return proto.CompactTextString(m) }
func (*ResponseDefinitions) ProtoMessage()               {}
func (*ResponseDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ResponseDefinitions) GetAdditionalProperties() map[string]*Response {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type ResponseValue struct {
	// Types that are valid to be assigned to Oneof:
	//	*ResponseValue_Response
	//	*ResponseValue_JsonReference
	Oneof isResponseValue_Oneof `protobuf_oneof:"oneof"`
}

func (m *ResponseValue) Reset()                    { *m = ResponseValue{} }
func (m *ResponseValue) String() string            { return proto.CompactTextString(m) }
func (*ResponseValue) ProtoMessage()               {}
func (*ResponseValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

type isResponseValue_Oneof interface {
	isResponseValue_Oneof()
}

type ResponseValue_Response struct {
	Response *Response `protobuf:"bytes,1,opt,name=response,oneof"`
}
type ResponseValue_JsonReference struct {
	JsonReference *JsonReference `protobuf:"bytes,2,opt,name=json_reference,json=jsonReference,oneof"`
}

func (*ResponseValue_Response) isResponseValue_Oneof()      {}
func (*ResponseValue_JsonReference) isResponseValue_Oneof() {}

func (m *ResponseValue) GetOneof() isResponseValue_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ResponseValue) GetResponse() *Response {
	if x, ok := m.GetOneof().(*ResponseValue_Response); ok {
		return x.Response
	}
	return nil
}

func (m *ResponseValue) GetJsonReference() *JsonReference {
	if x, ok := m.GetOneof().(*ResponseValue_JsonReference); ok {
		return x.JsonReference
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResponseValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ResponseValue_OneofMarshaler, _ResponseValue_OneofUnmarshaler, _ResponseValue_OneofSizer, []interface{}{
		(*ResponseValue_Response)(nil),
		(*ResponseValue_JsonReference)(nil),
	}
}

func _ResponseValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ResponseValue)
	// oneof
	switch x := m.Oneof.(type) {
	case *ResponseValue_Response:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case *ResponseValue_JsonReference:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JsonReference); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResponseValue.Oneof has unexpected type %T", x)
	}
	return nil
}

func _ResponseValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ResponseValue)
	switch tag {
	case 1: // oneof.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Response)
		err := b.DecodeMessage(msg)
		m.Oneof = &ResponseValue_Response{msg}
		return true, err
	case 2: // oneof.json_reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JsonReference)
		err := b.DecodeMessage(msg)
		m.Oneof = &ResponseValue_JsonReference{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResponseValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ResponseValue)
	// oneof
	switch x := m.Oneof.(type) {
	case *ResponseValue_Response:
		s := proto.Size(x.Response)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseValue_JsonReference:
		s := proto.Size(x.JsonReference)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Responses struct {
	ResponseCode    map[string]*ResponseValue `protobuf:"bytes,1,rep,name=response_code,json=responseCode" json:"response_code,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	VendorExtension map[string]*Any           `protobuf:"bytes,2,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Responses) Reset()                    { *m = Responses{} }
func (m *Responses) String() string            { return proto.CompactTextString(m) }
func (*Responses) ProtoMessage()               {}
func (*Responses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *Responses) GetResponseCode() map[string]*ResponseValue {
	if m != nil {
		return m.ResponseCode
	}
	return nil
}

func (m *Responses) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type Schema struct {
	XRef                 string                    `protobuf:"bytes,1,opt,name=_ref,json=ref" json:"_ref,omitempty"`
	MinLength            int64                     `protobuf:"varint,2,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	AdditionalProperties *AdditionalPropertiesItem `protobuf:"bytes,3,opt,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
	Discriminator        string                    `protobuf:"bytes,4,opt,name=discriminator" json:"discriminator,omitempty"`
	Items                *ItemsItem                `protobuf:"bytes,5,opt,name=items" json:"items,omitempty"`
	UniqueItems          bool                      `protobuf:"varint,6,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	Enum                 []*Any                    `protobuf:"bytes,7,rep,name=enum" json:"enum,omitempty"`
	MultipleOf           float64                   `protobuf:"fixed64,8,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	ExclusiveMaximum     bool                      `protobuf:"varint,9,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	Format               string                    `protobuf:"bytes,10,opt,name=format" json:"format,omitempty"`
	Required             []string                  `protobuf:"bytes,11,rep,name=required" json:"required,omitempty"`
	MinItems             int64                     `protobuf:"varint,12,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MinProperties        int64                     `protobuf:"varint,13,opt,name=min_properties,json=minProperties" json:"min_properties,omitempty"`
	ExternalDocs         *ExternalDocs             `protobuf:"bytes,14,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Type                 *TypeItem                 `protobuf:"bytes,15,opt,name=type" json:"type,omitempty"`
	Pattern              string                    `protobuf:"bytes,16,opt,name=pattern" json:"pattern,omitempty"`
	Properties           *Properties               `protobuf:"bytes,17,opt,name=properties" json:"properties,omitempty"`
	Xml                  *Xml                      `protobuf:"bytes,18,opt,name=xml" json:"xml,omitempty"`
	Maximum              float64                   `protobuf:"fixed64,19,opt,name=maximum" json:"maximum,omitempty"`
	MaxProperties        int64                     `protobuf:"varint,20,opt,name=max_properties,json=maxProperties" json:"max_properties,omitempty"`
	ReadOnly             bool                      `protobuf:"varint,21,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	Minimum              float64                   `protobuf:"fixed64,22,opt,name=minimum" json:"minimum,omitempty"`
	Default              *Any                      `protobuf:"bytes,23,opt,name=default" json:"default,omitempty"`
	Description          string                    `protobuf:"bytes,24,opt,name=description" json:"description,omitempty"`
	Title                string                    `protobuf:"bytes,25,opt,name=title" json:"title,omitempty"`
	Example              *Any                      `protobuf:"bytes,26,opt,name=example" json:"example,omitempty"`
	MaxItems             int64                     `protobuf:"varint,27,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	AllOf                []*Schema                 `protobuf:"bytes,28,rep,name=all_of,json=allOf" json:"all_of,omitempty"`
	ExclusiveMinimum     bool                      `protobuf:"varint,29,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	MaxLength            int64                     `protobuf:"varint,30,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	VendorExtension      map[string]*Any           `protobuf:"bytes,31,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *Schema) GetAdditionalProperties() *AdditionalPropertiesItem {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

func (m *Schema) GetItems() *ItemsItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Schema) GetEnum() []*Any {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Schema) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Schema) GetType() *TypeItem {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Schema) GetProperties() *Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema) GetXml() *Xml {
	if m != nil {
		return m.Xml
	}
	return nil
}

func (m *Schema) GetDefault() *Any {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Schema) GetExample() *Any {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *Schema) GetAllOf() []*Schema {
	if m != nil {
		return m.AllOf
	}
	return nil
}

func (m *Schema) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type SchemaItem struct {
	// Types that are valid to be assigned to Oneof:
	//	*SchemaItem_Schema
	//	*SchemaItem_FileSchema
	Oneof isSchemaItem_Oneof `protobuf_oneof:"oneof"`
}

func (m *SchemaItem) Reset()                    { *m = SchemaItem{} }
func (m *SchemaItem) String() string            { return proto.CompactTextString(m) }
func (*SchemaItem) ProtoMessage()               {}
func (*SchemaItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

type isSchemaItem_Oneof interface {
	isSchemaItem_Oneof()
}

type SchemaItem_Schema struct {
	Schema *Schema `protobuf:"bytes,1,opt,name=schema,oneof"`
}
type SchemaItem_FileSchema struct {
	FileSchema *FileSchema `protobuf:"bytes,2,opt,name=file_schema,json=fileSchema,oneof"`
}

func (*SchemaItem_Schema) isSchemaItem_Oneof()     {}
func (*SchemaItem_FileSchema) isSchemaItem_Oneof() {}

func (m *SchemaItem) GetOneof() isSchemaItem_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *SchemaItem) GetSchema() *Schema {
	if x, ok := m.GetOneof().(*SchemaItem_Schema); ok {
		return x.Schema
	}
	return nil
}

func (m *SchemaItem) GetFileSchema() *FileSchema {
	if x, ok := m.GetOneof().(*SchemaItem_FileSchema); ok {
		return x.FileSchema
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SchemaItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SchemaItem_OneofMarshaler, _SchemaItem_OneofUnmarshaler, _SchemaItem_OneofSizer, []interface{}{
		(*SchemaItem_Schema)(nil),
		(*SchemaItem_FileSchema)(nil),
	}
}

func _SchemaItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SchemaItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SchemaItem_Schema:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Schema); err != nil {
			return err
		}
	case *SchemaItem_FileSchema:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FileSchema); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SchemaItem.Oneof has unexpected type %T", x)
	}
	return nil
}

func _SchemaItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SchemaItem)
	switch tag {
	case 1: // oneof.schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema)
		err := b.DecodeMessage(msg)
		m.Oneof = &SchemaItem_Schema{msg}
		return true, err
	case 2: // oneof.file_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileSchema)
		err := b.DecodeMessage(msg)
		m.Oneof = &SchemaItem_FileSchema{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SchemaItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SchemaItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SchemaItem_Schema:
		s := proto.Size(x.Schema)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SchemaItem_FileSchema:
		s := proto.Size(x.FileSchema)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SecurityDefinitions struct {
	AdditionalProperties map[string]*SecurityDefinitionsItem `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityDefinitions) Reset()                    { *m = SecurityDefinitions{} }
func (m *SecurityDefinitions) String() string            { return proto.CompactTextString(m) }
func (*SecurityDefinitions) ProtoMessage()               {}
func (*SecurityDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *SecurityDefinitions) GetAdditionalProperties() map[string]*SecurityDefinitionsItem {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type SecurityDefinitionsItem struct {
	// Types that are valid to be assigned to Oneof:
	//	*SecurityDefinitionsItem_BasicAuthenticationSecurity
	//	*SecurityDefinitionsItem_ApiKeySecurity
	//	*SecurityDefinitionsItem_Oauth2ImplicitSecurity
	//	*SecurityDefinitionsItem_Oauth2PasswordSecurity
	//	*SecurityDefinitionsItem_Oauth2ApplicationSecurity
	//	*SecurityDefinitionsItem_Oauth2AccessCodeSecurity
	Oneof isSecurityDefinitionsItem_Oneof `protobuf_oneof:"oneof"`
}

func (m *SecurityDefinitionsItem) Reset()                    { *m = SecurityDefinitionsItem{} }
func (m *SecurityDefinitionsItem) String() string            { return proto.CompactTextString(m) }
func (*SecurityDefinitionsItem) ProtoMessage()               {}
func (*SecurityDefinitionsItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

type isSecurityDefinitionsItem_Oneof interface {
	isSecurityDefinitionsItem_Oneof()
}

type SecurityDefinitionsItem_BasicAuthenticationSecurity struct {
	BasicAuthenticationSecurity *BasicAuthenticationSecurity `protobuf:"bytes,1,opt,name=basic_authentication_security,json=basicAuthenticationSecurity,oneof"`
}
type SecurityDefinitionsItem_ApiKeySecurity struct {
	ApiKeySecurity *ApiKeySecurity `protobuf:"bytes,2,opt,name=api_key_security,json=apiKeySecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2ImplicitSecurity struct {
	Oauth2ImplicitSecurity *Oauth2ImplicitSecurity `protobuf:"bytes,3,opt,name=oauth2_implicit_security,json=oauth2ImplicitSecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2PasswordSecurity struct {
	Oauth2PasswordSecurity *Oauth2PasswordSecurity `protobuf:"bytes,4,opt,name=oauth2_password_security,json=oauth2PasswordSecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2ApplicationSecurity struct {
	Oauth2ApplicationSecurity *Oauth2ApplicationSecurity `protobuf:"bytes,5,opt,name=oauth2_application_security,json=oauth2ApplicationSecurity,oneof"`
}
type SecurityDefinitionsItem_Oauth2AccessCodeSecurity struct {
	Oauth2AccessCodeSecurity *Oauth2AccessCodeSecurity `protobuf:"bytes,6,opt,name=oauth2_access_code_security,json=oauth2AccessCodeSecurity,oneof"`
}

func (*SecurityDefinitionsItem_BasicAuthenticationSecurity) isSecurityDefinitionsItem_Oneof() {}
func (*SecurityDefinitionsItem_ApiKeySecurity) isSecurityDefinitionsItem_Oneof()              {}
func (*SecurityDefinitionsItem_Oauth2ImplicitSecurity) isSecurityDefinitionsItem_Oneof()      {}
func (*SecurityDefinitionsItem_Oauth2PasswordSecurity) isSecurityDefinitionsItem_Oneof()      {}
func (*SecurityDefinitionsItem_Oauth2ApplicationSecurity) isSecurityDefinitionsItem_Oneof()   {}
func (*SecurityDefinitionsItem_Oauth2AccessCodeSecurity) isSecurityDefinitionsItem_Oneof()    {}

func (m *SecurityDefinitionsItem) GetOneof() isSecurityDefinitionsItem_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetBasicAuthenticationSecurity() *BasicAuthenticationSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_BasicAuthenticationSecurity); ok {
		return x.BasicAuthenticationSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetApiKeySecurity() *ApiKeySecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_ApiKeySecurity); ok {
		return x.ApiKeySecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2ImplicitSecurity() *Oauth2ImplicitSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2ImplicitSecurity); ok {
		return x.Oauth2ImplicitSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2PasswordSecurity() *Oauth2PasswordSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2PasswordSecurity); ok {
		return x.Oauth2PasswordSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2ApplicationSecurity() *Oauth2ApplicationSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2ApplicationSecurity); ok {
		return x.Oauth2ApplicationSecurity
	}
	return nil
}

func (m *SecurityDefinitionsItem) GetOauth2AccessCodeSecurity() *Oauth2AccessCodeSecurity {
	if x, ok := m.GetOneof().(*SecurityDefinitionsItem_Oauth2AccessCodeSecurity); ok {
		return x.Oauth2AccessCodeSecurity
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SecurityDefinitionsItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SecurityDefinitionsItem_OneofMarshaler, _SecurityDefinitionsItem_OneofUnmarshaler, _SecurityDefinitionsItem_OneofSizer, []interface{}{
		(*SecurityDefinitionsItem_BasicAuthenticationSecurity)(nil),
		(*SecurityDefinitionsItem_ApiKeySecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2ImplicitSecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2PasswordSecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2ApplicationSecurity)(nil),
		(*SecurityDefinitionsItem_Oauth2AccessCodeSecurity)(nil),
	}
}

func _SecurityDefinitionsItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SecurityDefinitionsItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SecurityDefinitionsItem_BasicAuthenticationSecurity:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BasicAuthenticationSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_ApiKeySecurity:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApiKeySecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2ImplicitSecurity:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2ImplicitSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2PasswordSecurity:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2PasswordSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2ApplicationSecurity:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2ApplicationSecurity); err != nil {
			return err
		}
	case *SecurityDefinitionsItem_Oauth2AccessCodeSecurity:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth2AccessCodeSecurity); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SecurityDefinitionsItem.Oneof has unexpected type %T", x)
	}
	return nil
}

func _SecurityDefinitionsItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SecurityDefinitionsItem)
	switch tag {
	case 1: // oneof.basic_authentication_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BasicAuthenticationSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_BasicAuthenticationSecurity{msg}
		return true, err
	case 2: // oneof.api_key_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ApiKeySecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_ApiKeySecurity{msg}
		return true, err
	case 3: // oneof.oauth2_implicit_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2ImplicitSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2ImplicitSecurity{msg}
		return true, err
	case 4: // oneof.oauth2_password_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2PasswordSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2PasswordSecurity{msg}
		return true, err
	case 5: // oneof.oauth2_application_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2ApplicationSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2ApplicationSecurity{msg}
		return true, err
	case 6: // oneof.oauth2_access_code_security
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Oauth2AccessCodeSecurity)
		err := b.DecodeMessage(msg)
		m.Oneof = &SecurityDefinitionsItem_Oauth2AccessCodeSecurity{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SecurityDefinitionsItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SecurityDefinitionsItem)
	// oneof
	switch x := m.Oneof.(type) {
	case *SecurityDefinitionsItem_BasicAuthenticationSecurity:
		s := proto.Size(x.BasicAuthenticationSecurity)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_ApiKeySecurity:
		s := proto.Size(x.ApiKeySecurity)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2ImplicitSecurity:
		s := proto.Size(x.Oauth2ImplicitSecurity)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2PasswordSecurity:
		s := proto.Size(x.Oauth2PasswordSecurity)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2ApplicationSecurity:
		s := proto.Size(x.Oauth2ApplicationSecurity)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SecurityDefinitionsItem_Oauth2AccessCodeSecurity:
		s := proto.Size(x.Oauth2AccessCodeSecurity)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SecurityRequirement struct {
	AdditionalProperties map[string]*StringArray `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityRequirement) Reset()                    { *m = SecurityRequirement{} }
func (m *SecurityRequirement) String() string            { return proto.CompactTextString(m) }
func (*SecurityRequirement) ProtoMessage()               {}
func (*SecurityRequirement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *SecurityRequirement) GetAdditionalProperties() map[string]*StringArray {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type StringArray struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *StringArray) Reset()                    { *m = StringArray{} }
func (m *StringArray) String() string            { return proto.CompactTextString(m) }
func (*StringArray) ProtoMessage()               {}
func (*StringArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

type Tag struct {
	Name            string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description     string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ExternalDocs    *ExternalDocs   `protobuf:"bytes,3,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,4,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *Tag) GetExternalDocs() *ExternalDocs {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Tag) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

type TypeItem struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *TypeItem) Reset()                    { *m = TypeItem{} }
func (m *TypeItem) String() string            { return proto.CompactTextString(m) }
func (*TypeItem) ProtoMessage()               {}
func (*TypeItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

type VendorExtension struct {
	AdditionalProperties map[string]*Any `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *VendorExtension) Reset()                    { *m = VendorExtension{} }
func (m *VendorExtension) String() string            { return proto.CompactTextString(m) }
func (*VendorExtension) ProtoMessage()               {}
func (*VendorExtension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *VendorExtension) GetAdditionalProperties() map[string]*Any {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Xml struct {
	Name            string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace       string          `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Prefix          string          `protobuf:"bytes,3,opt,name=prefix" json:"prefix,omitempty"`
	Attribute       bool            `protobuf:"varint,4,opt,name=attribute" json:"attribute,omitempty"`
	Wrapped         bool            `protobuf:"varint,5,opt,name=wrapped" json:"wrapped,omitempty"`
	VendorExtension map[string]*Any `protobuf:"bytes,6,rep,name=vendor_extension,json=vendorExtension" json:"vendor_extension,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Xml) Reset()                    { *m = Xml{} }
func (m *Xml) String() string            { return proto.CompactTextString(m) }
func (*Xml) ProtoMessage()               {}
func (*Xml) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *Xml) GetVendorExtension() map[string]*Any {
	if m != nil {
		return m.VendorExtension
	}
	return nil
}

func init() {
	proto.RegisterType((*AdditionalPropertiesItem)(nil), "OpenAPIv2.AdditionalPropertiesItem")
	proto.RegisterType((*Any)(nil), "OpenAPIv2.Any")
	proto.RegisterType((*ApiKeySecurity)(nil), "OpenAPIv2.ApiKeySecurity")
	proto.RegisterType((*BasicAuthenticationSecurity)(nil), "OpenAPIv2.BasicAuthenticationSecurity")
	proto.RegisterType((*BodyParameter)(nil), "OpenAPIv2.BodyParameter")
	proto.RegisterType((*Contact)(nil), "OpenAPIv2.Contact")
	proto.RegisterType((*Default)(nil), "OpenAPIv2.Default")
	proto.RegisterType((*Definitions)(nil), "OpenAPIv2.Definitions")
	proto.RegisterType((*Document)(nil), "OpenAPIv2.Document")
	proto.RegisterType((*Examples)(nil), "OpenAPIv2.Examples")
	proto.RegisterType((*ExternalDocs)(nil), "OpenAPIv2.ExternalDocs")
	proto.RegisterType((*FileSchema)(nil), "OpenAPIv2.FileSchema")
	proto.RegisterType((*FormDataParameterSubSchema)(nil), "OpenAPIv2.FormDataParameterSubSchema")
	proto.RegisterType((*Header)(nil), "OpenAPIv2.Header")
	proto.RegisterType((*HeaderParameterSubSchema)(nil), "OpenAPIv2.HeaderParameterSubSchema")
	proto.RegisterType((*Headers)(nil), "OpenAPIv2.Headers")
	proto.RegisterType((*Info)(nil), "OpenAPIv2.Info")
	proto.RegisterType((*ItemsItem)(nil), "OpenAPIv2.ItemsItem")
	proto.RegisterType((*JsonReference)(nil), "OpenAPIv2.JsonReference")
	proto.RegisterType((*License)(nil), "OpenAPIv2.License")
	proto.RegisterType((*NonBodyParameter)(nil), "OpenAPIv2.NonBodyParameter")
	proto.RegisterType((*Oauth2AccessCodeSecurity)(nil), "OpenAPIv2.Oauth2AccessCodeSecurity")
	proto.RegisterType((*Oauth2ApplicationSecurity)(nil), "OpenAPIv2.Oauth2ApplicationSecurity")
	proto.RegisterType((*Oauth2ImplicitSecurity)(nil), "OpenAPIv2.Oauth2ImplicitSecurity")
	proto.RegisterType((*Oauth2PasswordSecurity)(nil), "OpenAPIv2.Oauth2PasswordSecurity")
	proto.RegisterType((*Oauth2Scopes)(nil), "OpenAPIv2.Oauth2Scopes")
	proto.RegisterType((*Operation)(nil), "OpenAPIv2.Operation")
	proto.RegisterType((*Parameter)(nil), "OpenAPIv2.Parameter")
	proto.RegisterType((*ParameterDefinitions)(nil), "OpenAPIv2.ParameterDefinitions")
	proto.RegisterType((*ParametersItem)(nil), "OpenAPIv2.ParametersItem")
	proto.RegisterType((*PathItem)(nil), "OpenAPIv2.PathItem")
	proto.RegisterType((*PathParameterSubSchema)(nil), "OpenAPIv2.PathParameterSubSchema")
	proto.RegisterType((*Paths)(nil), "OpenAPIv2.Paths")
	proto.RegisterType((*PrimitivesItems)(nil), "OpenAPIv2.PrimitivesItems")
	proto.RegisterType((*Properties)(nil), "OpenAPIv2.Properties")
	proto.RegisterType((*QueryParameterSubSchema)(nil), "OpenAPIv2.QueryParameterSubSchema")
	proto.RegisterType((*Response)(nil), "OpenAPIv2.Response")
	proto.RegisterType((*ResponseDefinitions)(nil), "OpenAPIv2.ResponseDefinitions")
	proto.RegisterType((*ResponseValue)(nil), "OpenAPIv2.ResponseValue")
	proto.RegisterType((*Responses)(nil), "OpenAPIv2.Responses")
	proto.RegisterType((*Schema)(nil), "OpenAPIv2.Schema")
	proto.RegisterType((*SchemaItem)(nil), "OpenAPIv2.SchemaItem")
	proto.RegisterType((*SecurityDefinitions)(nil), "OpenAPIv2.SecurityDefinitions")
	proto.RegisterType((*SecurityDefinitionsItem)(nil), "OpenAPIv2.SecurityDefinitionsItem")
	proto.RegisterType((*SecurityRequirement)(nil), "OpenAPIv2.SecurityRequirement")
	proto.RegisterType((*StringArray)(nil), "OpenAPIv2.StringArray")
	proto.RegisterType((*Tag)(nil), "OpenAPIv2.Tag")
	proto.RegisterType((*TypeItem)(nil), "OpenAPIv2.TypeItem")
	proto.RegisterType((*VendorExtension)(nil), "OpenAPIv2.VendorExtension")
	proto.RegisterType((*Xml)(nil), "OpenAPIv2.Xml")
}

func init() { proto.RegisterFile("OpenAPIv2/OpenAPIv2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3699 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x5c, 0xcf, 0x8f, 0x1c, 0x47,
	0xf5, 0x4f, 0xcf, 0xef, 0x79, 0xb3, 0x3b, 0x3b, 0xdb, 0xfb, 0xc3, 0xb3, 0xbb, 0x89, 0xe3, 0xac,
	0x13, 0xdb, 0xf1, 0xd7, 0x59, 0x27, 0xfe, 0x86, 0xe0, 0x04, 0x24, 0xb4, 0x49, 0x1c, 0x62, 0x12,
	0x62, 0xa7, 0xd7, 0xf9, 0x29, 0x42, 0xab, 0x77, 0xa6, 0x67, 0xb7, 0xe3, 0x99, 0xee, 0x49, 0x77,
	0xcf, 0x7a, 0x17, 0x71, 0xe3, 0x88, 0x04, 0x12, 0x27, 0x90, 0x80, 0x03, 0xe2, 0x96, 0x03, 0xe2,
	0x2f, 0xe0, 0x84, 0x40, 0x1c, 0x10, 0x17, 0xc4, 0x89, 0x0b, 0x11, 0x70, 0x02, 0x04, 0x17, 0x6e,
	0x88, 0xfa, 0xd1, 0xd5, 0x5d, 0x55, 0x5d, 0xd5, 0x3b, 0x93, 0x60, 0x8d, 0x2f, 0xf6, 0xd4, 0xef,
	0x57, 0xaf, 0xde, 0xfb, 0xd4, 0xab, 0xf7, 0x5e, 0x2f, 0x6c, 0xdc, 0x1a, 0xbb, 0xfe, 0xee, 0xed,
	0x9b, 0x47, 0xd7, 0xae, 0xa6, 0xbf, 0x76, 0xc6, 0x61, 0x10, 0x07, 0x66, 0x33, 0xad, 0xd8, 0xb6,
	0xa1, 0xbb, 0xdb, 0xef, 0x7b, 0xb1, 0x17, 0xf8, 0xce, 0xf0, 0x76, 0x18, 0x8c, 0xdd, 0x30, 0xf6,
	0xdc, 0xe8, 0x66, 0xec, 0x8e, 0xcc, 0x27, 0xa1, 0x16, 0xf5, 0x0e, 0xdd, 0x91, 0xd3, 0x35, 0xce,
	0x19, 0x97, 0x5a, 0xd7, 0x96, 0x77, 0xb2, 0x89, 0xf6, 0x48, 0x83, 0x95, 0x74, 0x30, 0xbb, 0x50,
	0xdf, 0x0f, 0x82, 0xa1, 0xeb, 0xf8, 0xdd, 0x12, 0xea, 0xdb, 0xb0, 0x58, 0x71, 0x7b, 0x0b, 0xca,
	0xbb, 0xfe, 0x89, 0xb9, 0x0a, 0xd5, 0x23, 0x67, 0x38, 0x71, 0xc9, 0x54, 0x4d, 0x8b, 0x16, 0xb6,
	0x7f, 0x50, 0x82, 0xf6, 0xee, 0xd8, 0x7b, 0xcd, 0x3d, 0xd9, 0x73, 0x7b, 0x93, 0xd0, 0x8b, 0x4f,
	0x4c, 0x13, 0x2a, 0xbe, 0x33, 0x62, 0xfd, 0xc8, 0x6f, 0xb3, 0x0d, 0x25, 0x8f, 0x4e, 0xdc, 0xb4,
	0xd0, 0x2f, 0xf3, 0x1c, 0xb4, 0xfa, 0x6e, 0xd4, 0x0b, 0xbd, 0x31, 0xa6, 0xbb, 0x5b, 0x26, 0x0d,
	0x7c, 0x15, 0x9e, 0x25, 0x3e, 0x19, 0xbb, 0xdd, 0x0a, 0x9d, 0x05, 0xff, 0x36, 0xdf, 0x83, 0xce,
	0x91, 0xeb, 0xf7, 0x83, 0xd0, 0x76, 0x8f, 0x63, 0xd7, 0x8f, 0xf0, 0xd0, 0xea, 0xb9, 0x32, 0xda,
	0xd8, 0x0e, 0xb7, 0x31, 0x91, 0x9c, 0x9d, 0xb7, 0xc9, 0x88, 0x1b, 0x6c, 0xc0, 0x0d, 0x3f, 0x0e,
	0x4f, 0xac, 0xa5, 0x23, 0xb1, 0x76, 0xd3, 0x82, 0x55, 0x55, 0x47, 0xb3, 0x03, 0xe5, 0xbb, 0xee,
	0x49, 0xb2, 0x17, 0xfc, 0xd3, 0x7c, 0x9c, 0xf1, 0xa1, 0x44, 0x58, 0xda, 0xe6, 0x57, 0xf6, 0x4f,
	0x12, 0xbe, 0xbc, 0x50, 0xba, 0x6e, 0x6c, 0x7f, 0xb7, 0x04, 0x5b, 0x2f, 0x3a, 0x91, 0xd7, 0xdb,
	0x9d, 0xc4, 0x87, 0xae, 0x1f, 0x7b, 0x3d, 0x07, 0x6f, 0x2d, 0x65, 0x94, 0xc4, 0x04, 0x43, 0xcf,
	0x84, 0x12, 0xc7, 0x84, 0x81, 0x82, 0x09, 0x65, 0xc2, 0x84, 0x2f, 0x70, 0xa4, 0x14, 0xac, 0x3b,
	0x47, 0x8e, 0xfc, 0xa6, 0x04, 0x8b, 0x2f, 0x06, 0xfd, 0x93, 0xdb, 0x4e, 0x88, 0xa4, 0x22, 0x76,
	0xc3, 0x59, 0x24, 0x54, 0x62, 0x57, 0x49, 0xc9, 0x2e, 0x22, 0x79, 0xe5, 0x9c, 0xe4, 0x55, 0x52,
	0xc9, 0xdb, 0x84, 0x46, 0xe8, 0x7e, 0x34, 0xf1, 0x42, 0xb7, 0x8f, 0x64, 0x07, 0x0b, 0x7a, 0x5a,
	0x36, 0xdf, 0x55, 0xb0, 0xb6, 0x46, 0x58, 0xfb, 0x14, 0xcf, 0x5a, 0x7e, 0x03, 0x73, 0x64, 0xe6,
	0xdf, 0x0c, 0xa8, 0xbf, 0x14, 0xf8, 0xb1, 0xd3, 0x8b, 0x95, 0x3a, 0x87, 0xe6, 0x9e, 0x84, 0xc3,
	0x84, 0x4f, 0xf8, 0x27, 0x56, 0x61, 0xc4, 0x48, 0x6f, 0x98, 0x30, 0x88, 0x16, 0x4c, 0x4b, 0xb1,
	0xeb, 0x0a, 0xd9, 0xf5, 0x45, 0x6e, 0xf1, 0x64, 0xa5, 0x39, 0xee, 0xf7, 0x97, 0x68, 0xbf, 0x2f,
	0xbb, 0x03, 0x67, 0x32, 0x8c, 0x4d, 0x07, 0xd6, 0x9c, 0x14, 0xf4, 0xec, 0x71, 0x8a, 0x7a, 0x68,
	0x66, 0x4c, 0xf8, 0x15, 0x6e, 0x96, 0x64, 0xc8, 0x8e, 0x0a, 0x24, 0x29, 0xf5, 0xab, 0x8e, 0xa2,
	0x69, 0xf3, 0x1d, 0xd8, 0xd0, 0x0e, 0xf9, 0x4c, 0xfb, 0xf8, 0x9d, 0x01, 0x2d, 0x44, 0x94, 0xe7,
	0x93, 0xb9, 0x23, 0xd3, 0x2d, 0xde, 0xcb, 0xd3, 0xe2, 0x5e, 0xd8, 0xb0, 0x99, 0xf7, 0xf3, 0xfe,
	0x6c, 0xfb, 0xb9, 0x28, 0xee, 0x47, 0xa1, 0x97, 0xdc, 0x96, 0x7e, 0x5c, 0x85, 0xc6, 0xcb, 0x41,
	0x6f, 0x32, 0x42, 0x68, 0x63, 0x5e, 0xc7, 0x7a, 0x9a, 0xd2, 0x99, 0xe8, 0xf5, 0xba, 0x7a, 0x17,
	0x16, 0xdf, 0xd5, 0x7c, 0x01, 0x1a, 0x51, 0x02, 0x52, 0x68, 0x59, 0xbc, 0xf9, 0xb3, 0xfc, 0xb2,
	0x49, 0x93, 0x45, 0xd5, 0x15, 0xaf, 0x65, 0xa5, 0xfd, 0xb1, 0x06, 0x1c, 0x06, 0x51, 0xcc, 0x74,
	0x1f, 0xff, 0x36, 0xbf, 0x04, 0x30, 0x66, 0x8a, 0x1a, 0x11, 0x0c, 0x68, 0x5d, 0x7b, 0x94, 0x9b,
	0x31, 0xd5, 0x62, 0x9e, 0x22, 0x6e, 0x88, 0xf9, 0x45, 0x68, 0x86, 0x6e, 0x34, 0x46, 0xd5, 0xe8,
	0x38, 0xaa, 0x64, 0x3c, 0x4f, 0x91, 0x95, 0xb4, 0xf1, 0xc3, 0xb3, 0x01, 0x18, 0x6a, 0xd0, 0x69,
	0xf6, 0x27, 0x3d, 0x34, 0x18, 0xc3, 0x48, 0xd3, 0x4a, 0xcb, 0xe6, 0x9b, 0xb0, 0xca, 0x48, 0xb7,
	0x79, 0x6e, 0xd5, 0x73, 0x8b, 0xb0, 0x6d, 0xf3, 0x8b, 0xac, 0x44, 0xf9, 0x4a, 0x7c, 0x83, 0x47,
	0xf7, 0x9c, 0x83, 0x03, 0x37, 0xec, 0x36, 0x08, 0x13, 0x58, 0x11, 0x13, 0xd2, 0x43, 0x3d, 0xd0,
	0xf1, 0x44, 0xdd, 0x26, 0x25, 0x84, 0x95, 0xcd, 0x0b, 0x50, 0x1d, 0x3b, 0xf1, 0x61, 0xd4, 0x05,
	0xb2, 0x72, 0x47, 0x60, 0x0f, 0xaa, 0xb7, 0x68, 0xb3, 0xb9, 0x05, 0xcd, 0x7d, 0x27, 0x72, 0x6d,
	0x5c, 0xea, 0xb6, 0xc8, 0xfc, 0x0d, 0x5c, 0x81, 0x3b, 0x91, 0xa5, 0xb1, 0x50, 0xa0, 0xf9, 0x17,
	0xc8, 0xfc, 0xac, 0x68, 0x6e, 0xa3, 0x1b, 0xcc, 0x39, 0x88, 0xba, 0x8b, 0xe4, 0x38, 0x79, 0xad,
	0xb8, 0xe3, 0x1c, 0x58, 0xa4, 0x0d, 0x71, 0x79, 0x11, 0x23, 0x4f, 0x88, 0xc5, 0xbf, 0x1f, 0xf4,
	0xa2, 0x6e, 0x9b, 0x90, 0x72, 0x86, 0xeb, 0x7c, 0x23, 0x69, 0x47, 0x42, 0x16, 0x59, 0x0b, 0x2e,
	0x57, 0x32, 0xcf, 0x43, 0xc5, 0xf3, 0x07, 0x41, 0x77, 0x89, 0x0c, 0x5a, 0xe2, 0x06, 0xdd, 0x44,
	0xd5, 0x16, 0x69, 0xdc, 0xfe, 0x95, 0x01, 0x8d, 0x1b, 0xc7, 0xce, 0x68, 0x3c, 0x44, 0x34, 0xed,
	0x17, 0x2b, 0xdc, 0x53, 0xc2, 0xba, 0x74, 0xcc, 0x83, 0x83, 0x1e, 0xff, 0x30, 0x60, 0x81, 0xe7,
	0x06, 0x83, 0x79, 0x23, 0x83, 0xf9, 0xd3, 0x2f, 0xca, 0x77, 0xb4, 0x36, 0xc4, 0x15, 0x0d, 0xd3,
	0xe7, 0x88, 0xfb, 0x7f, 0x29, 0x03, 0xbc, 0xe2, 0x0d, 0x5d, 0x0a, 0x3b, 0x58, 0x10, 0x43, 0xd7,
	0xe9, 0xdb, 0x81, 0x3f, 0xa4, 0x13, 0x92, 0x1b, 0xdc, 0xe9, 0xdf, 0x42, 0x65, 0xf3, 0x12, 0xd4,
	0x5d, 0x7a, 0x64, 0x9a, 0x79, 0x59, 0x33, 0xee, 0xd9, 0xa7, 0x37, 0x03, 0x81, 0x0c, 0x45, 0xcf,
	0xa4, 0x39, 0x2f, 0x9e, 0x95, 0x59, 0xc4, 0x93, 0x99, 0x70, 0x55, 0xce, 0x84, 0xe3, 0x6d, 0x90,
	0x04, 0x18, 0x52, 0x1b, 0x64, 0x1d, 0x6a, 0x83, 0x20, 0x1c, 0x39, 0x31, 0x81, 0x82, 0xa6, 0x95,
	0x94, 0xf0, 0xdd, 0x1d, 0x7b, 0x31, 0xda, 0x17, 0xd5, 0x6d, 0x5a, 0x90, 0x8f, 0xba, 0x99, 0x3f,
	0xea, 0xb7, 0x14, 0x47, 0x0d, 0xe4, 0xa8, 0x2f, 0x73, 0x1b, 0xc8, 0xf8, 0x3b, 0xc7, 0x83, 0xfe,
	0x49, 0x1d, 0x36, 0x5f, 0x41, 0xbb, 0x7d, 0xd9, 0x89, 0x9d, 0x14, 0x9a, 0xf7, 0x26, 0xfb, 0xc9,
	0xc1, 0xff, 0x1f, 0x2c, 0xf7, 0x82, 0xe1, 0xd0, 0xed, 0xe1, 0x7d, 0xd9, 0x09, 0x93, 0xe8, 0x42,
	0x9d, 0xac, 0xe1, 0x15, 0xca, 0x2e, 0xee, 0x78, 0x4b, 0xc5, 0xc7, 0x8b, 0x10, 0xca, 0xf5, 0x27,
	0xa3, 0x44, 0xfe, 0xe5, 0x6e, 0xa4, 0x2d, 0x67, 0x44, 0x3e, 0x06, 0x0b, 0x13, 0xdf, 0xfb, 0x68,
	0xe2, 0xda, 0x1e, 0x7a, 0x66, 0x45, 0x89, 0x21, 0xd9, 0xa2, 0x75, 0xf8, 0xe5, 0x15, 0xc9, 0x27,
	0x53, 0xcb, 0x9f, 0xcc, 0x65, 0x58, 0x76, 0x86, 0xc3, 0xe0, 0x9e, 0xed, 0x8e, 0xc6, 0xe8, 0x16,
	0xa0, 0x4c, 0xaa, 0x93, 0x99, 0x96, 0x48, 0xc3, 0x0d, 0x5c, 0xff, 0x36, 0xae, 0x36, 0x9f, 0x86,
	0x2a, 0x5d, 0xa9, 0x41, 0x36, 0xb3, 0xc9, 0xa3, 0x74, 0xe8, 0x8d, 0x10, 0xce, 0x1c, 0xd1, 0x27,
	0x1f, 0xc2, 0x6b, 0xd2, 0x11, 0x73, 0xcb, 0x3d, 0xee, 0x0d, 0x27, 0x11, 0x6a, 0xb1, 0x47, 0xe8,
	0x92, 0x18, 0xa1, 0x3d, 0x36, 0xc9, 0xec, 0x9d, 0xb4, 0xe1, 0xab, 0xb4, 0x1e, 0xe3, 0x37, 0xc2,
	0x75, 0x2c, 0xb5, 0xe4, 0x1a, 0x40, 0xf8, 0x9d, 0x14, 0x39, 0x71, 0x6c, 0x09, 0xe2, 0xc8, 0x0c,
	0xce, 0x05, 0xce, 0xe0, 0x7c, 0x14, 0x5a, 0x23, 0xc4, 0x51, 0x0f, 0xa9, 0x97, 0x1d, 0x0c, 0x10,
	0xe4, 0x1b, 0x97, 0x0c, 0x0b, 0x58, 0xd5, 0xad, 0x01, 0x5e, 0x86, 0x51, 0xd2, 0x26, 0x8d, 0xac,
	0x48, 0x5a, 0x9c, 0x63, 0xd2, 0xb2, 0x94, 0xb4, 0xd0, 0xa2, 0xf9, 0x08, 0x00, 0xea, 0x64, 0x0f,
	0x5d, 0xff, 0x00, 0x5d, 0x3c, 0x1d, 0xd4, 0x58, 0xb6, 0x9a, 0xa8, 0xe6, 0x75, 0x52, 0x91, 0xaa,
	0xd7, 0x32, 0xa7, 0x5e, 0x08, 0x21, 0xd0, 0xe8, 0xe4, 0x68, 0x4c, 0x32, 0xa2, 0x81, 0x2a, 0xe8,
	0xb9, 0xf0, 0xba, 0xb7, 0x22, 0xd9, 0xff, 0x22, 0xcf, 0x12, 0x7a, 0x56, 0x65, 0x9e, 0x71, 0x84,
	0xa1, 0x55, 0x12, 0xc2, 0xd6, 0x12, 0xc2, 0x9c, 0xe3, 0x84, 0x30, 0x4c, 0x04, 0xa2, 0x9b, 0x12,
	0xb1, 0x9e, 0x10, 0xe1, 0xf9, 0x94, 0x08, 0x57, 0xa1, 0x94, 0x67, 0x88, 0xfc, 0xbd, 0xc0, 0x2b,
	0xa5, 0x56, 0x17, 0xe6, 0xa8, 0xa4, 0xdf, 0xa9, 0x41, 0xed, 0x55, 0x04, 0xb7, 0xc8, 0xac, 0x10,
	0x8f, 0xc6, 0x90, 0x8f, 0x46, 0x12, 0x87, 0x52, 0x4e, 0x1c, 0x44, 0x0e, 0x96, 0x65, 0x0e, 0x4a,
	0x1a, 0x54, 0xc9, 0x6b, 0x50, 0xaa, 0x15, 0xd5, 0x19, 0xb4, 0x22, 0x8f, 0x21, 0x35, 0x0d, 0x86,
	0x30, 0xd9, 0xaa, 0x4b, 0xb2, 0x95, 0x1e, 0x6b, 0x43, 0x3a, 0xd6, 0x99, 0x74, 0x4e, 0x90, 0x52,
	0x90, 0xa4, 0x94, 0x53, 0xc8, 0x96, 0xa8, 0x90, 0x4a, 0x19, 0x5d, 0xd0, 0xc8, 0xa8, 0x8c, 0x53,
	0x8b, 0x79, 0x9c, 0xe2, 0x80, 0xb2, 0x5d, 0x0c, 0x94, 0x19, 0x14, 0x2c, 0x09, 0x50, 0xc0, 0x69,
	0x75, 0x47, 0xab, 0xd5, 0xcb, 0xa2, 0x56, 0x33, 0xd0, 0x35, 0x0b, 0x40, 0xf7, 0x4d, 0x85, 0x92,
	0xac, 0x90, 0xfe, 0x17, 0xb8, 0xfe, 0x54, 0x16, 0xe7, 0xa8, 0x10, 0xff, 0xaa, 0x41, 0x97, 0x12,
	0xa1, 0xb8, 0xb3, 0xd8, 0x3e, 0x8d, 0x82, 0x7d, 0xa6, 0x52, 0x5c, 0x9a, 0x56, 0x8a, 0x4f, 0xf7,
	0x9e, 0x29, 0xe5, 0xbc, 0xa2, 0x91, 0x73, 0x41, 0xa6, 0xab, 0x92, 0x4c, 0x8b, 0xb6, 0x4a, 0x11,
	0x5e, 0x26, 0x32, 0x50, 0xd7, 0xc8, 0xbb, 0x04, 0x07, 0x8d, 0x1c, 0x1c, 0x64, 0xf2, 0xd5, 0x14,
	0xe4, 0x4b, 0x29, 0xf1, 0xa0, 0x91, 0x78, 0x41, 0xab, 0x5a, 0x92, 0x56, 0x89, 0x80, 0xb3, 0x20,
	0x03, 0x0e, 0xa7, 0x0a, 0x8b, 0xc5, 0xaa, 0x20, 0x22, 0x5f, 0x5b, 0x46, 0x3e, 0x6a, 0x2e, 0x2c,
	0xa5, 0xe6, 0x02, 0xa7, 0x07, 0x1d, 0x51, 0x0f, 0xd8, 0x35, 0xba, 0xcc, 0x5d, 0xa3, 0x9c, 0xee,
	0x9b, 0xa2, 0xee, 0x73, 0x9a, 0xb6, 0x22, 0x6a, 0x9a, 0xac, 0xe8, 0xab, 0x79, 0x45, 0x67, 0x68,
	0xb6, 0xc6, 0xa1, 0x59, 0x4f, 0xa1, 0x62, 0xeb, 0x44, 0x54, 0xaf, 0xe7, 0x54, 0xec, 0x81, 0xba,
	0x85, 0x7e, 0x6d, 0x40, 0x9d, 0x92, 0x15, 0xcd, 0xe2, 0x0b, 0x4a, 0x86, 0xcc, 0xd1, 0x77, 0x42,
	0x29, 0xe0, 0xb7, 0xf2, 0xad, 0x32, 0x54, 0xf0, 0x4b, 0x15, 0x89, 0x5f, 0x07, 0x71, 0x77, 0x14,
	0x21, 0xed, 0xb0, 0x23, 0x37, 0x3c, 0xf2, 0x7a, 0xcc, 0x9f, 0xd7, 0x26, 0xf5, 0xb7, 0x06, 0x7b,
	0xb4, 0xd6, 0xbc, 0x02, 0xf5, 0x1e, 0x75, 0xc7, 0x25, 0x2b, 0x98, 0x79, 0x47, 0x9d, 0xc5, 0xba,
	0xe0, 0xde, 0x43, 0x34, 0xca, 0x8f, 0xdc, 0xe4, 0xa5, 0xc3, 0xf7, 0x7e, 0x9d, 0xb6, 0x58, 0xac,
	0x4b, 0xf6, 0xce, 0xa8, 0xf0, 0xef, 0x0c, 0x24, 0x79, 0x47, 0x88, 0x71, 0xd4, 0xe1, 0x4e, 0x64,
	0x32, 0x29, 0x4e, 0x61, 0xe7, 0xde, 0x52, 0x08, 0x59, 0x9d, 0x1c, 0xcd, 0xe3, 0xd2, 0x63, 0x7d,
	0x8e, 0x02, 0xf5, 0x1c, 0x34, 0x89, 0x9a, 0xe4, 0xc2, 0x26, 0xe5, 0x42, 0xa7, 0xf4, 0xf6, 0x36,
	0x2c, 0x7e, 0x25, 0x0a, 0x7c, 0xcb, 0x1d, 0xb8, 0xa1, 0xeb, 0xa3, 0xb3, 0x59, 0x86, 0x8a, 0x1d,
	0xba, 0x03, 0x46, 0x05, 0xfa, 0xb9, 0xfd, 0x07, 0x24, 0xac, 0x09, 0x9f, 0xa7, 0x74, 0xd4, 0x5a,
	0xda, 0xf7, 0xf9, 0xc5, 0xfc, 0xd9, 0xcd, 0x91, 0x6b, 0x3f, 0x2f, 0x43, 0xe7, 0x8d, 0xc0, 0x17,
	0x5d, 0xfa, 0x7d, 0xd8, 0x3a, 0x24, 0x52, 0x6e, 0xa7, 0x9e, 0x34, 0x3b, 0x9a, 0xec, 0xdb, 0x82,
	0x9f, 0xff, 0xfc, 0x14, 0xf8, 0xf2, 0xea, 0x43, 0x56, 0xf7, 0x50, 0x77, 0xb3, 0xde, 0x85, 0xb3,
	0xf8, 0x7e, 0xb0, 0xfb, 0xc8, 0x40, 0x56, 0x2f, 0x44, 0xa9, 0x7f, 0x62, 0x2a, 0x83, 0x1a, 0x2d,
	0xb5, 0x39, 0xd0, 0x3f, 0x3d, 0x1d, 0xd8, 0x44, 0x38, 0x1a, 0x9e, 0xa8, 0x17, 0xa2, 0x5a, 0xb5,
	0xcd, 0x2d, 0xf4, 0x26, 0xee, 0xac, 0x5c, 0xe5, 0xcc, 0x47, 0xea, 0x26, 0xf3, 0xeb, 0xb0, 0x81,
	0x5d, 0x6b, 0xea, 0x15, 0xa8, 0xc7, 0xe1, 0x31, 0xc9, 0x37, 0xa7, 0x5c, 0x60, 0x7d, 0xac, 0x6c,
	0x79, 0xb1, 0x0e, 0xd5, 0xc0, 0x77, 0x83, 0xc1, 0xf6, 0xf7, 0xcb, 0xd0, 0xbd, 0xe5, 0x4c, 0xe2,
	0xc3, 0x6b, 0xbb, 0xbd, 0x9e, 0x1b, 0x45, 0x2f, 0x05, 0x7d, 0x37, 0x0d, 0x49, 0x5d, 0xc5, 0x92,
	0x8f, 0xe0, 0x8d, 0xb9, 0x6d, 0x79, 0x27, 0x07, 0x1d, 0xb4, 0x47, 0x9a, 0xad, 0xa4, 0x1b, 0xbe,
	0x9c, 0x71, 0x75, 0x10, 0x7a, 0xdf, 0x20, 0x41, 0x26, 0x3b, 0x93, 0xe4, 0x8e, 0xd0, 0xf0, 0x16,
	0x12, 0x6b, 0x74, 0x39, 0xc7, 0xc1, 0x5d, 0x97, 0x76, 0xa2, 0x56, 0x4b, 0x83, 0x54, 0xbc, 0x95,
	0xf7, 0x5a, 0x55, 0xf4, 0xd1, 0x30, 0xde, 0x95, 0x82, 0xea, 0x06, 0xe8, 0xa9, 0x9c, 0xe0, 0x0e,
	0xf9, 0xad, 0xbc, 0xd5, 0xea, 0xb9, 0x5b, 0x4d, 0xc7, 0x83, 0x79, 0x46, 0x74, 0x4a, 0xb0, 0x91,
	0x90, 0x35, 0x1e, 0x0f, 0xe5, 0x70, 0x21, 0xdb, 0xbe, 0xa1, 0xd8, 0x7e, 0x89, 0xdb, 0x7e, 0x76,
	0x86, 0xe5, 0xe9, 0xce, 0x50, 0x38, 0x96, 0x4a, 0xf1, 0xb1, 0x54, 0xf3, 0xc7, 0xd2, 0xd7, 0x46,
	0xcd, 0x9e, 0xcf, 0xb3, 0x3b, 0xbf, 0xaf, 0x39, 0xf2, 0xfb, 0xdf, 0x25, 0x58, 0xa7, 0x74, 0xdd,
	0x1c, 0x61, 0xba, 0xbc, 0xf8, 0xfe, 0x33, 0x5b, 0xa9, 0x30, 0x15, 0x8d, 0xc2, 0x9c, 0xce, 0x7c,
	0x47, 0xcb, 0xfc, 0xe7, 0x72, 0x94, 0xc8, 0x9b, 0x9c, 0x23, 0xe7, 0xff, 0x9a, 0x72, 0xfe, 0xb6,
	0x13, 0x45, 0xf7, 0x82, 0xb0, 0x9f, 0x72, 0x5e, 0x90, 0x46, 0xa3, 0x58, 0x1a, 0x4b, 0x7a, 0x90,
	0x28, 0x2b, 0x0e, 0xae, 0xa2, 0x3c, 0xb8, 0xea, 0x74, 0x07, 0x37, 0x0b, 0xa7, 0xe5, 0x4d, 0xcd,
	0x91, 0xd3, 0xbf, 0x30, 0x60, 0x81, 0xdf, 0x8f, 0x39, 0x28, 0x36, 0x97, 0x9f, 0xd1, 0xf0, 0x61,
	0x66, 0x9b, 0xf9, 0xcb, 0xb3, 0xd9, 0xcc, 0xab, 0xfc, 0x8e, 0x9a, 0x82, 0x81, 0x5c, 0x05, 0x9c,
	0xee, 0x12, 0x3a, 0xe9, 0xf9, 0xe2, 0x80, 0x92, 0x41, 0xfc, 0xe6, 0x34, 0x80, 0x84, 0xc3, 0x4f,
	0x93, 0xd1, 0xc8, 0x09, 0x4f, 0x92, 0xd1, 0xac, 0x38, 0xc5, 0x4b, 0x19, 0xbd, 0x9c, 0x02, 0x36,
	0xb9, 0xed, 0xf5, 0xd9, 0xbd, 0x93, 0xd6, 0xdd, 0xec, 0x9b, 0x67, 0x01, 0xfa, 0xee, 0x38, 0x74,
	0x11, 0x6e, 0xa5, 0x49, 0x03, 0x5c, 0x8d, 0xf9, 0xbc, 0x10, 0x66, 0xa4, 0x32, 0xb1, 0xa1, 0x0a,
	0x33, 0x12, 0xeb, 0x52, 0x08, 0x30, 0x5e, 0xe3, 0x03, 0x8c, 0x34, 0xf6, 0xb7, 0xaa, 0x08, 0x30,
	0xca, 0x61, 0xc5, 0x34, 0x9a, 0xd7, 0x90, 0xa2, 0x79, 0x5c, 0x20, 0xae, 0x29, 0x06, 0xe2, 0xf8,
	0xd8, 0x2a, 0xcc, 0x18, 0x5b, 0xcd, 0x45, 0x40, 0x5a, 0xb3, 0x44, 0x40, 0xf8, 0x30, 0xe8, 0x82,
	0x14, 0x06, 0xbd, 0xa3, 0x50, 0x2a, 0x1a, 0x2a, 0x7c, 0x92, 0x97, 0x43, 0x76, 0x18, 0x73, 0xd4,
	0xa3, 0x9f, 0x1a, 0xd0, 0xcc, 0x6c, 0xdc, 0x5d, 0x68, 0xef, 0x23, 0xa3, 0x37, 0xb3, 0xd6, 0x12,
	0x7b, 0xa9, 0xab, 0xcb, 0x13, 0x41, 0x96, 0xd9, 0xe2, 0xbe, 0x60, 0x26, 0xbf, 0x06, 0xa6, 0x8f,
	0x44, 0x4e, 0x9a, 0x86, 0xd2, 0xb1, 0xc5, 0x4d, 0x23, 0xdb, 0xd7, 0x68, 0xa6, 0x8e, 0x2f, 0xd5,
	0x65, 0xd6, 0xdd, 0x9f, 0x0d, 0x58, 0x55, 0x85, 0xb5, 0x4d, 0xbf, 0x58, 0xed, 0x9f, 0x3f, 0x25,
	0x2c, 0x3e, 0xb3, 0xfa, 0x7f, 0x30, 0x9b, 0xfa, 0x5f, 0x16, 0x0f, 0x62, 0x55, 0x45, 0x0e, 0x7f,
	0x1c, 0xdf, 0x33, 0xa0, 0x2d, 0xea, 0x95, 0xf9, 0x2c, 0x34, 0xe5, 0xe3, 0x50, 0x4e, 0x83, 0x18,
	0x98, 0x75, 0xc4, 0x27, 0xf9, 0x21, 0x7a, 0xc0, 0xe1, 0x37, 0x1b, 0x7d, 0xc1, 0x25, 0x14, 0xf0,
	0x27, 0x29, 0xbc, 0xf0, 0xf0, 0x49, 0x7e, 0xc8, 0x57, 0x64, 0xcc, 0xff, 0x59, 0x05, 0x1a, 0xd8,
	0x30, 0x27, 0xe4, 0x5c, 0x80, 0xf2, 0x81, 0x1b, 0x2b, 0x08, 0x49, 0xa5, 0xd9, 0xc2, 0x1d, 0xd0,
	0xf3, 0xbc, 0xd6, 0x77, 0x87, 0x88, 0x16, 0xc5, 0xd6, 0xb3, 0xae, 0x49, 0x1f, 0x3c, 0xeb, 0x78,
	0xc2, 0x42, 0x96, 0x9a, 0x59, 0x51, 0x07, 0xf3, 0x12, 0x54, 0xc6, 0x38, 0x1d, 0xa2, 0x52, 0xd0,
	0x91, 0xf4, 0x30, 0x77, 0xa0, 0x1e, 0x8c, 0x69, 0xf2, 0x41, 0xb5, 0xa0, 0x33, 0xeb, 0x94, 0x3e,
	0x70, 0x6b, 0xe9, 0x03, 0x17, 0x2f, 0x86, 0xdf, 0x69, 0x0a, 0x00, 0xe3, 0x16, 0xc3, 0x3d, 0x24,
	0xa8, 0x6c, 0xcc, 0x02, 0x95, 0x97, 0x49, 0xa2, 0x42, 0xef, 0x90, 0x78, 0x07, 0x75, 0xab, 0xd0,
	0x2e, 0xe6, 0x9e, 0x36, 0xe8, 0x79, 0x49, 0x7a, 0x43, 0xe1, 0x65, 0xe6, 0x88, 0x2a, 0x7f, 0xaf,
	0xc1, 0xba, 0xfa, 0x29, 0xa7, 0xf4, 0x14, 0x9c, 0x6e, 0xfe, 0xf0, 0xee, 0xda, 0x72, 0xde, 0x5d,
	0x3b, 0xbd, 0x53, 0x58, 0xe9, 0x75, 0xad, 0x6a, 0xbc, 0xae, 0x4a, 0x47, 0x70, 0x4d, 0x1f, 0x6c,
	0xe4, 0x7d, 0xc5, 0x9c, 0x17, 0xb3, 0x30, 0xb8, 0xc2, 0x79, 0x67, 0x9b, 0xc5, 0xde, 0xd9, 0xd4,
	0xa1, 0x0e, 0xd3, 0x3a, 0xd4, 0x45, 0x7f, 0x6e, 0x4b, 0x17, 0x64, 0x5c, 0xe0, 0x6c, 0x4a, 0xd1,
	0x97, 0xbc, 0xa8, 0x0a, 0xff, 0xa5, 0x7e, 0xe8, 0x76, 0x3e, 0xba, 0xa3, 0x89, 0x76, 0x72, 0xbe,
	0xdf, 0x8e, 0xe8, 0xfb, 0x95, 0xdc, 0xe7, 0xcb, 0x05, 0xee, 0x73, 0x53, 0x70, 0x9f, 0xcb, 0xae,
	0xe1, 0x95, 0xbc, 0x6b, 0x98, 0x45, 0x29, 0x56, 0x4f, 0x0d, 0x81, 0xaf, 0xa5, 0x3e, 0x6d, 0x47,
	0xeb, 0x3a, 0x7e, 0xee, 0x54, 0x37, 0xc5, 0x1c, 0x15, 0xee, 0xe3, 0x12, 0x54, 0x49, 0x5e, 0x93,
	0x79, 0x5b, 0xb1, 0x01, 0x7a, 0x17, 0x3e, 0x21, 0xe7, 0x40, 0x4d, 0x47, 0x2f, 0x42, 0xd2, 0x0a,
	0xc9, 0x8e, 0xa2, 0xa9, 0x6b, 0x9b, 0xb9, 0x59, 0xf0, 0xbf, 0x74, 0x28, 0xe9, 0x77, 0x3f, 0xf6,
	0xb7, 0xf9, 0x3a, 0xb6, 0x52, 0x92, 0x65, 0x14, 0x13, 0x3d, 0x29, 0x4e, 0xb4, 0xa2, 0x40, 0x43,
	0x9e, 0x5b, 0xff, 0xa9, 0xc2, 0x92, 0xa4, 0x32, 0x6a, 0x5d, 0x37, 0x34, 0xba, 0x2e, 0x2a, 0x56,
	0x49, 0x56, 0xac, 0x4c, 0x66, 0xcb, 0x82, 0xcc, 0x0a, 0xda, 0x53, 0x91, 0xb4, 0xa7, 0x30, 0x5c,
	0xc5, 0xa1, 0x44, 0x6d, 0xba, 0xbc, 0x8f, 0xfa, 0x34, 0xa1, 0xb9, 0xa9, 0xd3, 0x2e, 0x38, 0x70,
	0x6b, 0x8a, 0xe0, 0x26, 0x29, 0x30, 0x9c, 0x12, 0x0e, 0x6f, 0xc9, 0x88, 0xa2, 0x02, 0xa1, 0x29,
	0xe2, 0xbb, 0x1c, 0xd6, 0xb4, 0xb5, 0x58, 0xb3, 0x34, 0x45, 0x8c, 0xb9, 0xa3, 0xc7, 0xfe, 0xfc,
	0xad, 0xb2, 0xac, 0xb9, 0x55, 0xde, 0x57, 0x28, 0x1d, 0x8d, 0x01, 0x5f, 0xd5, 0xf3, 0x76, 0x8e,
	0x70, 0xf1, 0x5b, 0x03, 0x20, 0x33, 0x5e, 0xcd, 0x7e, 0xb1, 0x11, 0x2d, 0xee, 0x81, 0x35, 0x3e,
	0x50, 0x99, 0xba, 0x3f, 0xac, 0xc3, 0x19, 0x8d, 0x77, 0xfa, 0x3e, 0x05, 0xab, 0xe9, 0xc5, 0x51,
	0x4e, 0x2f, 0x0e, 0x25, 0x7e, 0x54, 0x0a, 0xf0, 0x23, 0xd3, 0x89, 0x6a, 0x61, 0x92, 0x4d, 0xad,
	0x30, 0x1b, 0x23, 0x91, 0xe2, 0xba, 0x46, 0x8a, 0x39, 0xdc, 0x68, 0xcc, 0x12, 0xfb, 0x6d, 0x2a,
	0x6c, 0x05, 0x62, 0xb6, 0x81, 0x3e, 0x31, 0xaa, 0x95, 0x53, 0x7d, 0xc9, 0xae, 0x5b, 0x98, 0x32,
	0x59, 0x6c, 0x51, 0x9d, 0x2c, 0x26, 0xa3, 0x42, 0x3b, 0x8f, 0x0a, 0xb3, 0xe7, 0x72, 0xcc, 0xa4,
	0xe6, 0x1c, 0xe8, 0x98, 0x5a, 0xd0, 0x59, 0x11, 0x41, 0x87, 0xe1, 0xdb, 0xaa, 0x2e, 0x93, 0x6b,
	0xad, 0x20, 0x93, 0x6b, 0x5d, 0x32, 0x75, 0xf7, 0xb5, 0x09, 0x56, 0x9f, 0x3f, 0x3d, 0x4c, 0x33,
	0x47, 0xbc, 0xf9, 0xa4, 0x04, 0x0d, 0xe6, 0xf4, 0x31, 0xaf, 0x42, 0x23, 0xc9, 0x56, 0x65, 0xe1,
	0x98, 0x15, 0x45, 0x6a, 0xb2, 0x95, 0x76, 0x9a, 0xe2, 0x79, 0xf0, 0x54, 0x1a, 0xd9, 0xa4, 0x2f,
	0xc8, 0xb5, 0x1c, 0x58, 0x10, 0x13, 0x80, 0x7d, 0x72, 0x73, 0x05, 0xea, 0x34, 0x00, 0xc7, 0x92,
	0x5e, 0xcd, 0x7c, 0x30, 0xdd, 0x62, 0x5d, 0x94, 0xaf, 0xae, 0x6a, 0xee, 0xd5, 0xc5, 0xb6, 0x37,
	0x47, 0x2e, 0xff, 0xc9, 0x80, 0x15, 0x45, 0xee, 0xbe, 0x39, 0x2a, 0x86, 0xf7, 0xeb, 0xc5, 0xa9,
	0xff, 0x33, 0xe3, 0xfc, 0xd7, 0x66, 0xc3, 0xf9, 0x02, 0xdb, 0x8d, 0x51, 0x23, 0x24, 0xea, 0x19,
	0xb0, 0xc8, 0xea, 0x29, 0x2e, 0x3c, 0x83, 0x15, 0x86, 0x56, 0x28, 0xe4, 0x89, 0xf5, 0x7d, 0xf5,
	0x21, 0x2b, 0xed, 0xf6, 0x3f, 0xf5, 0x8e, 0xfc, 0xb1, 0x04, 0xcd, 0xd4, 0xa1, 0x69, 0xbe, 0x06,
	0x8b, 0x6c, 0x15, 0xbb, 0x17, 0xf4, 0xdd, 0x84, 0xc7, 0x17, 0x54, 0xde, 0xcf, 0xf4, 0x17, 0x8e,
	0xd3, 0x51, 0x8e, 0x2e, 0x84, 0x5c, 0x95, 0xd2, 0x8d, 0x58, 0xca, 0xb9, 0x11, 0xb3, 0xf9, 0xa6,
	0x13, 0xbd, 0xf7, 0x60, 0x39, 0xb7, 0xb0, 0xe2, 0x5c, 0x76, 0xc4, 0x73, 0xe9, 0x2a, 0x56, 0x24,
	0xfc, 0xe7, 0xcd, 0xf4, 0xfb, 0x21, 0xd5, 0xdf, 0x06, 0xa8, 0x25, 0x37, 0x79, 0x3e, 0x09, 0xe1,
	0x34, 0x4b, 0xfc, 0x5d, 0x9d, 0xe8, 0x97, 0x73, 0xe1, 0x7a, 0xdd, 0xd7, 0xa6, 0x6a, 0x29, 0x47,
	0x1b, 0x58, 0xec, 0x7b, 0x18, 0x81, 0xd0, 0x62, 0x4e, 0x1c, 0x84, 0x89, 0xc7, 0x41, 0xac, 0xc4,
	0xde, 0x1d, 0x3e, 0x95, 0x93, 0xf7, 0xee, 0xa4, 0x79, 0x19, 0xcc, 0xa2, 0x90, 0xef, 0xb7, 0x9a,
	0xfe, 0x45, 0x5b, 0x64, 0xdc, 0x9f, 0x9a, 0x90, 0xa6, 0x34, 0x20, 0x9a, 0x1a, 0x03, 0x22, 0xbb,
	0x51, 0x41, 0xb8, 0x51, 0xf9, 0x5b, 0xaa, 0x25, 0xe5, 0xfa, 0x0b, 0xe6, 0xcb, 0x82, 0x64, 0xbe,
	0x3c, 0x01, 0x6d, 0xdc, 0xc8, 0x1d, 0x05, 0x75, 0x32, 0x2c, 0xa2, 0x5a, 0x8e, 0xbd, 0x9f, 0xed,
	0xe3, 0x99, 0x8b, 0xc9, 0xa5, 0xbb, 0x94, 0x83, 0x83, 0x3b, 0xa8, 0x9a, 0x30, 0x9d, 0xde, 0xc4,
	0x7a, 0xc7, 0xc4, 0xe7, 0x00, 0x38, 0x1a, 0x97, 0x73, 0xd7, 0x4a, 0x46, 0xab, 0xc5, 0x75, 0x44,
	0x77, 0x55, 0xf9, 0x78, 0x34, 0x24, 0xe6, 0x81, 0x78, 0x40, 0xef, 0x8e, 0x86, 0x16, 0x6e, 0xe2,
	0x8d, 0x88, 0x15, 0xd1, 0x88, 0xc0, 0xac, 0x41, 0x66, 0x01, 0xb7, 0xec, 0x6a, 0xc2, 0x1a, 0xe7,
	0x98, 0x63, 0x8d, 0xf0, 0xa5, 0xc8, 0x9a, 0xf4, 0xa5, 0x08, 0x67, 0xe9, 0xac, 0x8b, 0x96, 0x0e,
	0x67, 0x0a, 0x9e, 0x29, 0x36, 0x05, 0xa5, 0xfb, 0xb6, 0x9b, 0xbf, 0x6f, 0xd3, 0x6c, 0xaa, 0x0d,
	0x3e, 0x9b, 0x8a, 0xfb, 0x4a, 0x65, 0xb3, 0xf8, 0x2b, 0x15, 0xc1, 0x00, 0xda, 0x92, 0x0c, 0xa0,
	0x4b, 0x50, 0x43, 0xa6, 0x1f, 0x96, 0xdd, 0x87, 0x75, 0x69, 0x4a, 0x55, 0xd4, 0x21, 0x27, 0xc9,
	0xc9, 0xb6, 0x1f, 0x99, 0xca, 0xe6, 0x3e, 0x2b, 0xdb, 0xdc, 0xaa, 0xb4, 0xdc, 0x47, 0x73, 0xd8,
	0x3d, 0x77, 0x4b, 0xea, 0x9b, 0x00, 0x99, 0x41, 0x83, 0x18, 0x70, 0xda, 0x67, 0xc6, 0xe8, 0xe2,
	0x62, 0x56, 0xcf, 0x75, 0x68, 0x0d, 0x3c, 0x04, 0x0a, 0x42, 0x1e, 0xd1, 0x9a, 0xf2, 0x6b, 0x19,
	0x34, 0x0a, 0x06, 0x69, 0x29, 0xbb, 0xeb, 0xfe, 0x89, 0x2c, 0x0c, 0xc5, 0x87, 0x7b, 0xb3, 0x58,
	0x18, 0x8a, 0xe1, 0x33, 0x5b, 0x18, 0x77, 0x67, 0xb3, 0x30, 0xae, 0x8b, 0xdc, 0xdd, 0x2e, 0xa6,
	0x46, 0x76, 0x16, 0x7d, 0x52, 0x81, 0x33, 0x9a, 0x6e, 0xe6, 0x10, 0x1e, 0xd9, 0xc7, 0x5f, 0xa4,
	0xdb, 0x8e, 0xf0, 0x49, 0xba, 0x9d, 0x86, 0x24, 0xe9, 0xb1, 0x5c, 0x98, 0xee, 0x0b, 0x76, 0xc4,
	0xf5, 0xad, 0xfd, 0x82, 0x0f, 0xeb, 0x6f, 0x40, 0xc7, 0x19, 0x7b, 0x36, 0xda, 0x92, 0xcd, 0x7d,
	0x4f, 0x6a, 0x48, 0xb1, 0x06, 0xf1, 0xef, 0x04, 0xa0, 0x39, 0xdb, 0x8e, 0xf8, 0x87, 0x0c, 0x3e,
	0x80, 0x6e, 0x40, 0x22, 0xe0, 0xb6, 0x97, 0x64, 0x4e, 0x64, 0xd3, 0x95, 0x73, 0x19, 0x59, 0xea,
	0x1c, 0x0b, 0x9c, 0x91, 0x15, 0xa8, 0x53, 0x4c, 0xb2, 0xe9, 0xc7, 0x49, 0xba, 0x40, 0x36, 0x7d,
	0x45, 0x33, 0xbd, 0x9c, 0x58, 0x90, 0x4d, 0x9f, 0xcb, 0xa3, 0x18, 0xc0, 0x56, 0x32, 0xbd, 0x93,
	0x25, 0xdd, 0x64, 0x2b, 0xd0, 0x7b, 0xf6, 0xf1, 0x69, 0x32, 0x74, 0xd0, 0x22, 0x1b, 0x81, 0x36,
	0x2d, 0xa9, 0x9f, 0xad, 0x43, 0x72, 0xa9, 0x88, 0x35, 0x97, 0xad, 0x53, 0xcb, 0xd9, 0x0f, 0xba,
	0xc4, 0x2b, 0x9c, 0xee, 0x17, 0x68, 0xda, 0x84, 0x00, 0xe7, 0x8a, 0x22, 0x5a, 0xfd, 0x69, 0x34,
	0x8b, 0x1b, 0x3e, 0xb3, 0x66, 0xd9, 0xb3, 0x69, 0xd6, 0x15, 0x51, 0xb3, 0xf8, 0xaf, 0xa1, 0xf7,
	0xe2, 0xd0, 0xf3, 0x0f, 0x76, 0xc3, 0xd0, 0x11, 0xf0, 0xeb, 0x3c, 0xb4, 0xb8, 0x16, 0xfe, 0xaf,
	0x6f, 0x94, 0xb3, 0xbf, 0xbe, 0xf1, 0xa3, 0x12, 0x94, 0xef, 0x38, 0x07, 0x9f, 0x32, 0x56, 0x94,
	0x33, 0x1d, 0xca, 0xb3, 0x98, 0x0e, 0x6f, 0x68, 0xff, 0x6c, 0xc0, 0x79, 0xf1, 0x2b, 0xdf, 0x39,
	0x5e, 0x02, 0xe7, 0xa0, 0xc1, 0xec, 0x18, 0x0d, 0x07, 0x7f, 0x6f, 0xc0, 0x92, 0xb4, 0xac, 0xe9,
	0x15, 0x8b, 0xd2, 0xb3, 0xdc, 0x7a, 0xd2, 0xd0, 0x07, 0xe7, 0x33, 0xe1, 0x8f, 0x91, 0x64, 0x20,
	0x4b, 0x4a, 0x29, 0x19, 0x0f, 0x43, 0x13, 0xff, 0x1f, 0x8d, 0x9d, 0x1e, 0x4b, 0xb7, 0xc9, 0x2a,
	0xb0, 0x21, 0x3b, 0x46, 0x0f, 0x06, 0xef, 0x98, 0xf9, 0xe4, 0x69, 0x09, 0x8f, 0x42, 0x16, 0x5f,
	0xe8, 0xed, 0x4f, 0x62, 0x37, 0xf1, 0xd7, 0x65, 0x15, 0xd8, 0x9c, 0xba, 0x17, 0x22, 0xa0, 0x49,
	0x13, 0x64, 0x58, 0x51, 0x29, 0x27, 0xb5, 0x9c, 0x9c, 0x20, 0x5a, 0xe7, 0x27, 0x27, 0xfb, 0x35,
	0xf2, 0x57, 0x75, 0xfe, 0xff, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x57, 0x2b, 0xa0, 0x82, 0x72,
	0x47, 0x00, 0x00,
}
