// Copyright 2016 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED.

syntax = "proto3";

package OpenAPIv2;

message AdditionalPropertiesItem {
  Schema schema = 1;
  bool boolean = 2;
}

message Any {
  string value = 1;
}

message ApiKeySecurity {
  string type = 1;
  string name = 2;
  string in = 3;
  string description = 4;
  map<string, Any> vendor_extension = 5;
}

message BasicAuthenticationSecurity {
  string description = 1;
  string type = 2;
  map<string, Any> vendor_extension = 3;
}

message BodyParameter {
  string name = 1;
  string in = 2;
  bool required = 3;
  Schema schema = 4;
  string description = 5;
  map<string, Any> vendor_extension = 6;
}

message Contact {
  string name = 1;
  string url = 2;
  string email = 3;
  map<string, Any> vendor_extension = 4;
}

message Default {
  map<string, Any> additional_properties = 1;
}

message Definitions {
  map<string, Schema> additional_properties = 1;
}

message Document {
  Definitions definitions = 1;
  ParameterDefinitions parameters = 2;
  ResponseDefinitions responses = 3;
  repeated Tag tags = 4;
  string host = 5;
  Paths paths = 6;
  repeated SecurityRequirement security = 7;
  string base_path = 8;
  repeated string consumes = 9;
  repeated string produces = 10;
  SecurityDefinitions security_definitions = 11;
  ExternalDocs external_docs = 12;
  string swagger = 13;
  repeated string schemes = 14;
  Info info = 15;
}

message Examples {
  map<string, Any> additional_properties = 1;
}

message ExternalDocs {
  string description = 1;
  string url = 2;
  map<string, Any> vendor_extension = 3;
}

message FileSchema {
  string title = 1;
  string description = 2;
  string type = 3;
  Any example = 4;
  string format = 5;
  Any default = 6;
  repeated string required = 7;
  bool read_only = 8;
  ExternalDocs external_docs = 9;
  map<string, Any> vendor_extension = 10;
}

message FormDataParameterSubSchema {
  bool required = 1;
  string name = 2;
  string format = 3;
  string in = 4;
  bool exclusive_minimum = 5;
  repeated Any enum = 6;
  bool allow_empty_value = 7;
  string type = 8;
  PrimitivesItems items = 9;
  Any default = 10;
  double minimum = 11;
  int64 max_length = 12;
  string pattern = 13;
  bool unique_items = 14;
  string description = 15;
  string collection_format = 16;
  double maximum = 17;
  bool exclusive_maximum = 18;
  int64 min_length = 19;
  int64 max_items = 20;
  int64 min_items = 21;
  double multiple_of = 22;
  map<string, Any> vendor_extension = 23;
}

message Header {
  int64 max_length = 1;
  string pattern = 2;
  int64 min_items = 3;
  string format = 4;
  double minimum = 5;
  bool exclusive_minimum = 6;
  int64 min_length = 7;
  int64 max_items = 8;
  bool unique_items = 9;
  string collection_format = 10;
  Any default = 11;
  double maximum = 12;
  double multiple_of = 13;
  string description = 14;
  PrimitivesItems items = 15;
  bool exclusive_maximum = 16;
  repeated Any enum = 17;
  string type = 18;
  map<string, Any> vendor_extension = 19;
}

message HeaderParameterSubSchema {
  bool required = 1;
  string in = 2;
  string format = 3;
  double maximum = 4;
  int64 max_length = 5;
  int64 min_length = 6;
  string name = 7;
  Any default = 8;
  int64 min_items = 9;
  double multiple_of = 10;
  string type = 11;
  PrimitivesItems items = 12;
  bool exclusive_maximum = 13;
  double minimum = 14;
  int64 max_items = 15;
  string description = 16;
  string collection_format = 17;
  bool exclusive_minimum = 18;
  string pattern = 19;
  bool unique_items = 20;
  repeated Any enum = 21;
  map<string, Any> vendor_extension = 22;
}

message Headers {
  map<string, Header> additional_properties = 1;
}

message Info {
  string title = 1;
  string version = 2;
  string description = 3;
  string terms_of_service = 4;
  Contact contact = 5;
  License license = 6;
  map<string, Any> vendor_extension = 7;
}

message ItemsItem {
  repeated Schema schema = 1;
}

message JsonReference {
  string _ref = 1;
}

message License {
  string name = 1;
  string url = 2;
  map<string, Any> vendor_extension = 3;
}

message NonBodyParameter {
  oneof oneof {
    HeaderParameterSubSchema header_parameter_sub_schema = 1;
    FormDataParameterSubSchema form_data_parameter_sub_schema = 2;
    QueryParameterSubSchema query_parameter_sub_schema = 3;
    PathParameterSubSchema path_parameter_sub_schema = 4;
  }
}

message Oauth2AccessCodeSecurity {
  string type = 1;
  string flow = 2;
  Oauth2Scopes scopes = 3;
  string authorization_url = 4;
  string token_url = 5;
  string description = 6;
  map<string, Any> vendor_extension = 7;
}

message Oauth2ApplicationSecurity {
  string token_url = 1;
  string description = 2;
  string type = 3;
  string flow = 4;
  Oauth2Scopes scopes = 5;
  map<string, Any> vendor_extension = 6;
}

message Oauth2ImplicitSecurity {
  string description = 1;
  string type = 2;
  string flow = 3;
  Oauth2Scopes scopes = 4;
  string authorization_url = 5;
  map<string, Any> vendor_extension = 6;
}

message Oauth2PasswordSecurity {
  Oauth2Scopes scopes = 1;
  string token_url = 2;
  string description = 3;
  string type = 4;
  string flow = 5;
  map<string, Any> vendor_extension = 6;
}

message Oauth2Scopes {
  map<string, string> additional_properties = 1;
}

message Operation {
  repeated string produces = 1;
  repeated string consumes = 2;
  Responses responses = 3;
  repeated SecurityRequirement security = 4;
  repeated string tags = 5;
  string summary = 6;
  string operation_id = 7;
  repeated string schemes = 8;
  bool deprecated = 9;
  string description = 10;
  ExternalDocs external_docs = 11;
  repeated ParametersItem parameters = 12;
  map<string, Any> vendor_extension = 13;
}

message Parameter {
  oneof oneof {
    BodyParameter body_parameter = 1;
    NonBodyParameter non_body_parameter = 2;
  }
}

message ParameterDefinitions {
  map<string, Parameter> additional_properties = 1;
}

message ParametersItem {
  oneof oneof {
    Parameter parameter = 1;
    JsonReference json_reference = 2;
  }
}

message PathItem {
  Operation delete = 1;
  Operation options = 2;
  string _ref = 3;
  Operation get = 4;
  Operation put = 5;
  Operation post = 6;
  Operation head = 7;
  Operation patch = 8;
  repeated ParametersItem parameters = 9;
  map<string, Any> vendor_extension = 10;
}

message PathParameterSubSchema {
  string type = 1;
  double minimum = 2;
  repeated Any enum = 3;
  bool required = 4;
  bool exclusive_maximum = 5;
  int64 max_length = 6;
  double multiple_of = 7;
  bool exclusive_minimum = 8;
  int64 min_items = 9;
  string in = 10;
  string description = 11;
  string format = 12;
  Any default = 13;
  double maximum = 14;
  int64 max_items = 15;
  bool unique_items = 16;
  string name = 17;
  PrimitivesItems items = 18;
  string collection_format = 19;
  int64 min_length = 20;
  string pattern = 21;
  map<string, Any> vendor_extension = 22;
}

message Paths {
  map<string, Any> vendor_extension = 1;
  map<string, PathItem> path = 2;
}

message PrimitivesItems {
  string format = 1;
  Any default = 2;
  bool exclusive_maximum = 3;
  double minimum = 4;
  int64 min_items = 5;
  repeated Any enum = 6;
  string type = 7;
  int64 max_length = 8;
  bool exclusive_minimum = 9;
  string pattern = 10;
  PrimitivesItems items = 11;
  double maximum = 12;
  int64 min_length = 13;
  int64 max_items = 14;
  bool unique_items = 15;
  double multiple_of = 16;
  string collection_format = 17;
  map<string, Any> vendor_extension = 18;
}

message Properties {
  map<string, Schema> additional_properties = 1;
}

message QueryParameterSubSchema {
  string format = 1;
  Any default = 2;
  string type = 3;
  string collection_format = 4;
  double maximum = 5;
  bool exclusive_maximum = 6;
  int64 min_length = 7;
  int64 min_items = 8;
  bool unique_items = 9;
  repeated Any enum = 10;
  string description = 11;
  double multiple_of = 12;
  int64 max_length = 13;
  string in = 14;
  string name = 15;
  bool allow_empty_value = 16;
  PrimitivesItems items = 17;
  double minimum = 18;
  bool exclusive_minimum = 19;
  string pattern = 20;
  bool required = 21;
  int64 max_items = 22;
  map<string, Any> vendor_extension = 23;
}

message Response {
  string description = 1;
  SchemaItem schema = 2;
  Headers headers = 3;
  Examples examples = 4;
  map<string, Any> vendor_extension = 5;
}

message ResponseDefinitions {
  map<string, Response> additional_properties = 1;
}

message ResponseValue {
  oneof oneof {
    Response response = 1;
    JsonReference json_reference = 2;
  }
}

message Responses {
  map<string, ResponseValue> response_code = 1;
  map<string, Any> vendor_extension = 2;
}

message Schema {
  ExternalDocs external_docs = 1;
  Any example = 2;
  string _ref = 3;
  string title = 4;
  string description = 5;
  double minimum = 6;
  bool read_only = 7;
  int64 min_length = 8;
  repeated Schema all_of = 9;
  double maximum = 10;
  int64 max_length = 11;
  string pattern = 12;
  ItemsItem items = 13;
  string discriminator = 14;
  Properties properties = 15;
  string format = 16;
  int64 min_items = 17;
  int64 max_properties = 18;
  repeated Any enum = 19;
  AdditionalPropertiesItem additional_properties = 20;
  bool exclusive_maximum = 21;
  int64 min_properties = 22;
  TypeItem type = 23;
  Any default = 24;
  double multiple_of = 25;
  int64 max_items = 26;
  bool unique_items = 27;
  bool exclusive_minimum = 28;
  repeated string required = 29;
  Xml xml = 30;
  map<string, Any> vendor_extension = 31;
}

message SchemaItem {
  oneof oneof {
    Schema schema = 1;
    FileSchema file_schema = 2;
  }
}

message SecurityDefinitions {
  map<string, SecurityDefinitionsItem> additional_properties = 1;
}

message SecurityDefinitionsItem {
  oneof oneof {
    BasicAuthenticationSecurity basic_authentication_security = 1;
    ApiKeySecurity api_key_security = 2;
    Oauth2ImplicitSecurity oauth2_implicit_security = 3;
    Oauth2PasswordSecurity oauth2_password_security = 4;
    Oauth2ApplicationSecurity oauth2_application_security = 5;
    Oauth2AccessCodeSecurity oauth2_access_code_security = 6;
  }
}

message SecurityRequirement {
  map<string, StringArray> additional_properties = 1;
}

message StringArray {
  repeated string value = 1;
}

message Tag {
  string name = 1;
  string description = 2;
  ExternalDocs external_docs = 3;
  map<string, Any> vendor_extension = 4;
}

message TypeItem {
  repeated string value = 1;
}

message VendorExtension {
  map<string, Any> additional_properties = 1;
}

message Xml {
  bool attribute = 1;
  bool wrapped = 2;
  string name = 3;
  string namespace = 4;
  string prefix = 5;
  map<string, Any> vendor_extension = 6;
}

