// Copyright 2016 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// openapic (aka the OpenAPI Compiler) can be extended via plugins.  
// A plugin is just a program that reads a PluginRequest from stdin 
// and writes a PluginResponse to stdout.
//
// A plugin executable needs only to be placed somewhere in the path.  The
// plugin should be named "openapi_$NAME", and will then be used when the
// flag "--${NAME}_out" is passed to openapic.

syntax = "proto3";

package openapic.v1;

// The version number of OpenAPI compiler.
message Version {
  int32 major = 1;
  int32 minor = 2;
  int32 patch = 3;
  // A suffix for alpha, beta or rc release, e.g., "alpha-1", "rc2". It should
  // be empty for mainline stable releases.
  string suffix = 4;
}

// An encoded PluginRequest is written to the plugin's stdin.
message PluginRequest {

  // The OpenAPI descriptions that were explicitly listed on the command line.  
  // The specifications will appear in the order they are specified to openapic.
  repeated Wrapper wrapper = 1;
  
  // The plugin parameter passed on the command-line.
  string parameter = 2;

  // The version number of openapi compiler.
  Version compiler_version = 3;
}

// The plugin writes an encoded PluginResponse to stdout.
message PluginResponse {

  // Error message.  If non-empty, the plugin failed. 
  // The plugin process should exit with status code zero 
  // even if it reports an error in this way.
  //
  // This should be used to indicate errors which prevent the plugin from 
  // operating as intended.  Errors which indicate a problem in openapic 
  // itself -- such as the input Document being unparseable -- should be 
  // reported by writing a message to stderr and exiting with a non-zero 
  // status code.
  repeated string error = 1;
  
  // text output
  repeated string text = 2;
}

message Wrapper {

  // The filename or URL of the wrapped description
  string name = 1;
  
  // The version of the OpenAPI specification that is used by the wrapped description.
  string version = 2;

  // Must be a valid serialized protocol buffer of the named OpenAPI specification version.
  bytes value = 3;
}
