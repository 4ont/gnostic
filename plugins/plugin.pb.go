// Code generated by protoc-gen-go.
// source: plugin.proto
// DO NOT EDIT!

/*
Package openapic_v1 is a generated protocol buffer package.

It is generated from these files:
	plugin.proto

It has these top-level messages:
	Version
	OpenAPIPluginRequest
	OpenAPIPluginResponse
	Any
*/
package openapic_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The version number of OpenAPI compiler.
type Version struct {
	Major int32 `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor int32 `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	Patch int32 `protobuf:"varint,3,opt,name=patch" json:"patch,omitempty"`
	// A suffix for alpha, beta or rc release, e.g., "alpha-1", "rc2". It should
	// be empty for mainline stable releases.
	Suffix string `protobuf:"bytes,4,opt,name=suffix" json:"suffix,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// An encoded OpenAPIPluginRequest is written to the plugin's stdin.
type OpenAPIPluginRequest struct {
	// The OpenAPI specifications that were explicitly listed on the command-line.
	// The plugin should operate only on these specifications.
	// The parsed specification will be included in specifications, below.
	SpecificationToProcess []string `protobuf:"bytes,1,rep,name=specification_to_process,json=specificationToProcess" json:"specification_to_process,omitempty"`
	// The plugin parameter passed on the command-line.
	Parameter string `protobuf:"bytes,2,opt,name=parameter" json:"parameter,omitempty"`
	// The version number of openapi compiler.
	CompilerVersion *Version `protobuf:"bytes,3,opt,name=compiler_version,json=compilerVersion" json:"compiler_version,omitempty"`
	// Specifications corresponding to each name in specification_to_process.
	// The specifications will appear in the order they are specified to openapic.
	Specification []*Any `protobuf:"bytes,4,rep,name=specification" json:"specification,omitempty"`
}

func (m *OpenAPIPluginRequest) Reset()                    { *m = OpenAPIPluginRequest{} }
func (m *OpenAPIPluginRequest) String() string            { return proto.CompactTextString(m) }
func (*OpenAPIPluginRequest) ProtoMessage()               {}
func (*OpenAPIPluginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OpenAPIPluginRequest) GetCompilerVersion() *Version {
	if m != nil {
		return m.CompilerVersion
	}
	return nil
}

func (m *OpenAPIPluginRequest) GetSpecification() []*Any {
	if m != nil {
		return m.Specification
	}
	return nil
}

// The plugin writes an encoded OpenAPIPluginResponse to stdout.
type OpenAPIPluginResponse struct {
	// Error message.  If non-empty, the plugin failed.
	// The plugin process should exit with status code zero
	// even if it reports an error in this way.
	//
	// This should be used to indicate errors which prevent the plugin from
	// operating as intended.  Errors which indicate a problem in openapic
	// itself -- such as the input Document being unparseable -- should be
	// reported by writing a message to stderr and exiting with a non-zero
	// status code.
	Error []string `protobuf:"bytes,1,rep,name=error" json:"error,omitempty"`
}

func (m *OpenAPIPluginResponse) Reset()                    { *m = OpenAPIPluginResponse{} }
func (m *OpenAPIPluginResponse) String() string            { return proto.CompactTextString(m) }
func (*OpenAPIPluginResponse) ProtoMessage()               {}
func (*OpenAPIPluginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Any struct {
	// A URL/resource name whose content describes the type of the
	// serialized protocol buffer message.
	//
	// For URLs which use the scheme `http`, `https`, or no scheme, the
	// following restrictions and interpretations apply:
	//
	// * If no scheme is provided, `https` is assumed.
	// * The last segment of the URL's path must represent the fully
	//   qualified name of the type (as in `path/google.protobuf.Duration`).
	//   The name should be in a canonical form (e.g., leading "." is
	//   not accepted).
	// * An HTTP GET on the URL must yield a [google.protobuf.Type][]
	//   value in binary format, or produce an error.
	// * Applications are allowed to cache lookup results based on the
	//   URL, or have them precompiled into a binary to avoid any
	//   lookup. Therefore, binary compatibility needs to be preserved
	//   on changes to types. (Use versioned type names to manage
	//   breaking changes.)
	//
	// Schemes other than `http`, `https` (or the empty scheme) might be
	// used with implementation specific semantics.
	//
	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl" json:"type_url,omitempty"`
	// Must be a valid serialized protocol buffer of the above specified type.
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Any) Reset()                    { *m = Any{} }
func (m *Any) String() string            { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()               {}
func (*Any) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Version)(nil), "openapic.v1.Version")
	proto.RegisterType((*OpenAPIPluginRequest)(nil), "openapic.v1.OpenAPIPluginRequest")
	proto.RegisterType((*OpenAPIPluginResponse)(nil), "openapic.v1.OpenAPIPluginResponse")
	proto.RegisterType((*Any)(nil), "openapic.v1.Any")
}

func init() { proto.RegisterFile("plugin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x91, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0xa9, 0x6b, 0x5b, 0x77, 0x5a, 0xb1, 0x84, 0x5a, 0x56, 0xf0, 0x20, 0x7b, 0xf2, 0xe2,
	0x82, 0x0a, 0xc5, 0x9b, 0xf4, 0xe8, 0xc9, 0x12, 0xd4, 0xeb, 0x12, 0xc3, 0x54, 0x23, 0xdb, 0x24,
	0x26, 0xd9, 0x62, 0x3f, 0xb1, 0x5f, 0xc3, 0xfc, 0x69, 0xd1, 0xf5, 0xf8, 0x5e, 0x32, 0x99, 0xf7,
	0x7b, 0x81, 0xb1, 0x6e, 0xda, 0x37, 0x21, 0x2b, 0x6d, 0x94, 0x53, 0x64, 0xa4, 0x34, 0x4a, 0xa6,
	0x05, 0xaf, 0x36, 0xd7, 0x25, 0x87, 0xe1, 0x0b, 0x1a, 0x2b, 0x94, 0x24, 0x53, 0xe8, 0xaf, 0xd9,
	0x87, 0x32, 0x45, 0xef, 0xa2, 0x77, 0xd9, 0xa7, 0x49, 0x44, 0x57, 0x48, 0xef, 0x1e, 0xec, 0xdc,
	0x20, 0x82, 0xab, 0x99, 0xe3, 0xef, 0x45, 0x96, 0xdc, 0x28, 0xc8, 0x0c, 0x06, 0xb6, 0x5d, 0xad,
	0xc4, 0x57, 0x71, 0xe8, 0xed, 0x9c, 0xee, 0x54, 0xf9, 0xdd, 0x83, 0xe9, 0xa3, 0x5f, 0xba, 0x58,
	0x3e, 0x2c, 0x63, 0x12, 0x8a, 0x9f, 0x2d, 0x5a, 0x47, 0xee, 0xa0, 0xb0, 0x1a, 0xb9, 0x58, 0x09,
	0xce, 0x9c, 0xcf, 0x50, 0x3b, 0x55, 0xfb, 0x90, 0x1c, 0xad, 0xf5, 0x29, 0x32, 0xff, 0xc4, 0xac,
	0x73, 0xfe, 0xa4, 0x96, 0xe9, 0x94, 0x9c, 0x43, 0xae, 0x99, 0x61, 0x6b, 0x74, 0x98, 0xa2, 0xe5,
	0xf4, 0xd7, 0x20, 0xf7, 0x30, 0xe1, 0x6a, 0xad, 0x45, 0x83, 0xa6, 0xde, 0x24, 0xbc, 0x98, 0x74,
	0x74, 0x33, 0xad, 0xfe, 0xd0, 0x57, 0x3b, 0x74, 0x7a, 0xb2, 0xbf, 0xbd, 0xef, 0x62, 0x0e, 0xc7,
	0x9d, 0xc5, 0x1e, 0x28, 0xf3, 0xd3, 0x93, 0xce, 0xf4, 0x42, 0x6e, 0x69, 0xf7, 0x5a, 0x79, 0x05,
	0xa7, 0xff, 0x40, 0xad, 0x56, 0xd2, 0x62, 0x28, 0x0c, 0x8d, 0x89, 0xe5, 0x06, 0xac, 0x24, 0xca,
	0x39, 0x64, 0xfe, 0x11, 0x72, 0x06, 0x47, 0x6e, 0xab, 0xb1, 0x6e, 0x4d, 0x13, 0xcb, 0xcf, 0xe9,
	0x30, 0xe8, 0x67, 0xd3, 0x84, 0xb9, 0x0d, 0x6b, 0x5a, 0x8c, 0x8c, 0x63, 0x9a, 0xc4, 0xeb, 0x20,
	0xfe, 0xe4, 0xed, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0xba, 0xe2, 0x28, 0xd9, 0x01, 0x00,
	0x00,
}
