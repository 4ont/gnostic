syntax = "proto3";

import "google/protobuf/any.proto";

message Schema {
  string schema = 1;       // $schema
  string id = 2;           // id keyword used for $ref resolution scope
  string ref = 3;          // $ref, i.e. JSON Pointers
  Schema resolved_ref = 4; // the resolved pointer reference
  
  // http://json-schema.org/latest/json-schema-validation.html
  // 5.1.  Validation keywords for numeric instances (number and integer)
  Number multiple_of = 511;
  Number maximum = 5121;
  bool exclusive_maximum = 5122;
  Number minimum = 5131;
  bool exclusive_minimum = 5132;

  // 5.2.  Validation keywords for strings
  int64 max_length = 521;
  int64 min_length = 522;
  string pattern = 523;

  // 5.3.  Validation keywords for arrays
  SchemaOrBoolean additional_items = 5311;
  repeated Schema items = 5312;
  int64 max_items = 532;
  int64 min_items = 533;
  bool unique_items = 534;

  // 5.4.  Validation keywords for objects
  int64 max_properties = 541;    
  int64 min_properties = 542;       
  repeated string required = 543;       
  SchemaOrBoolean additional_properties = 5441;
  map<string,Schema> properties = 5442;  
  map<string,Schema> pattern_properties = 5443;
  map<string,SchemaOrStringArray> dependencies = 545;

  // 5.5.  Validation keywords for any instance type
  repeated google.protobuf.Any enumeration = 551;     
  repeated string type = 552;     
  repeated Schema all_of = 553;         
  repeated Schema any_of = 554;         
  repeated Schema one_of = 555;         
  Schema not = 556;      
  map<string,Schema> definitions = 557;

  // 6.  Metadata keywords
  string title = 611;        
  string description = 612;   
  google.protobuf.Any default_value = 62;

  // 7.  Semantic validation with "format"
  string format = 71;  
}         

// Helpers

message Number {
	oneof value {
		int64 integer = 1;
		float float = 2;
	}
}

message SchemaOrBoolean {
 	oneof value {
		Schema schema = 1;
		bool boolean = 2;
	}
}

message SchemaOrStringArray {
	oneof value {
		Schema schema = 1;
		StringArray array = 2;
	}
}

message StringArray {
	repeated string string = 1;
}
